name: Change detection

on:
  workflow_call:
    outputs:
      SCOPE:
        description: "scope collection"
        value: ${{ jobs.run.outputs.SCOPE }}
      HAS_SCOPE:
        description: "has scope"
        value: ${{ jobs.run.outputs.HAS_SCOPE }}
      HAS_DOCUMENTATION_CHANGED:
        description: ""
        value: ${{ jobs.run.outputs.HAS_DOCUMENTATION_CHANGED }}
      HAS_PLASMA_UI_DOCS:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_UI_DOCS }}
      HAS_PLASMA_WEB_DOCS:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_WEB_DOCS }}
      HAS_PLASMA_TEMPLE_DOCS:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_TEMPLE_DOCS }}
      HAS_PLASMA_WEBSITE:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_WEBSITE }}
      HAS_PLASMA_UI:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_UI }}
      HAS_PLASMA_WEB:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_WEB }}
      HAS_PLASMA_B2C:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_B2C }}
      HAS_PLASMA_TEMPLE:
        description: ""
        value: ${{ jobs.run.outputs.HAS_PLASMA_TEMPLE }}
jobs:
  run:
    runs-on: ubuntu-latest
    outputs:
      SCOPE: ${{ steps.set-scope.outputs.SCOPE }}
      HAS_SCOPE: ${{ steps.set-scope.outputs.HAS_SCOPE }}
      HAS_DOCUMENTATION_CHANGED: ${{ steps.set-scope.outputs.HAS_DOCUMENTATION_CHANGED }}
      HAS_PLASMA_UI_DOCS: ${{ steps.set-scope.outputs.HAS_PLASMA_UI_DOCS }}
      HAS_PLASMA_WEB_DOCS: ${{ steps.set-scope.outputs.HAS_PLASMA_WEB_DOCS }}
      HAS_PLASMA_TEMPLE_DOCS: ${{ steps.set-scope.outputs.HAS_PLASMA_TEMPLE_DOCS }}
      HAS_PLASMA_WEBSITE: ${{ steps.set-scope.outputs.HAS_PLASMA_WEBSITE }}
      HAS_PLASMA_TEMPLE: ${{ steps.set-scope.outputs.HAS_PLASMA_TEMPLE }}
      HAS_PLASMA_B2C: ${{ steps.set-scope.outputs.HAS_PLASMA_B2C }}
      HAS_PLASMA_WEB: ${{ steps.set-scope.outputs.HAS_PLASMA_WEB }}
      HAS_PLASMA_UI: ${{ steps.set-scope.outputs.HAS_PLASMA_UI }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare environment
        uses: ./.github/actions/prepare-environment

      - name: Get lerna ls output
        shell: bash
        id: changed-state
        # `tr '\n' ','` -> replace \n to ','
        # `sed 's/,$//` -> delete last ',' character
        run: echo "CHANGED_STATE=$(npx lerna ls --all --since=$(git merge-base --fork-point origin/dev) | tr '\n' ',' | sed 's/,$//' | sed 's/(PRIVATE)/''/g' |  sed 's/[ \t]/''/g')" >> "$GITHUB_OUTPUT"

      - name: Computed scope state
        id: scope
        uses: actions/github-script@v6
        env:
          CHANGED_STATE: ${{ steps.changed-state.outputs.CHANGED_STATE }}
        with:
          script: |
            const processingScope = require('./.github/processing-scope.js');
            
            return processingScope();

      - name: Set $GITHUB_OUTPUT
        id: set-scope
        run: |
          echo "SCOPE=${{ fromJSON(steps.scope.outputs.result).SCOPE }}" >> $GITHUB_OUTPUT
          echo "HAS_SCOPE=${{ fromJSON(steps.scope.outputs.result).HAS_SCOPE }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_UI_DOCS=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_UI_DOCS }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_WEB_DOCS=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_WEB_DOCS }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_TEMPLE_DOCS=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_TEMPLE_DOCS }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_WEBSITE=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_WEBSITE }}" >> $GITHUB_OUTPUT
          echo "HAS_DOCUMENTATION_CHANGED=${{ fromJSON(steps.scope.outputs.result).HAS_DOCUMENTATION_CHANGED }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_TEMPLE=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_TEMPLE }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_B2C=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_B2C }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_WEB=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_WEB }}" >> $GITHUB_OUTPUT
          echo "HAS_PLASMA_UI=${{ fromJSON(steps.scope.outputs.result).HAS_PLASMA_UI }}" >> $GITHUB_OUTPUT

      - name: Echo
        run: |
          echo "HAS_SCOPE ---> ${{ fromJSON(steps.scope.outputs.result).HAS_SCOPE }}"
          echo "SCOPE ---> ${{ toJSON(fromJSON(steps.scope.outputs.result).SCOPE) }}"
          echo "HAS_DOCUMENTATION_CHANGED ---> ${{ toJSON(fromJSON(steps.scope.outputs.result).HAS_DOCUMENTATION_CHANGED) }}"

