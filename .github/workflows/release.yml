name: Release

on:
  # Запуск в пулл-реквесте независимо от версионирования
  pull_request:
    branches:
      - rc
      - master

  # Запуск в мастере только после версионирования
  workflow_run:
    workflows: ["Versionate Docs"]
    branches: [master, rc]
    types:
      - completed

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Unset header
        # https://github.com/intuit/auto/issues/1030
        run: git config --local --unset http.https://github.com/.extraheader

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      - name: Setup packages
        run: |
          npm i
          npx lerna bootstrap

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

      - name: Release Info
        run: npm whoami && npx auto info || echo 'auto info returned 1'

      - name: Create Release
        run: npm run release

      - name: Check if tokens are changed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            tokens:
              - 'packages/plasma-tokens/**'

      - name: Generate themes html view
        if: steps.changes.outputs.tokens == 'true'
        run: npm run generate:theme-html

      - name: Save artifacts IOS & Android color tokens
        if: steps.changes.outputs.tokens == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ios & android color tokens
          path: /home/runner/work/plasma/plasma/packages/plasma-tokens/build

      - name: Save artifacts themes html view
        if: steps.changes.outputs.tokens == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: themes html view
          path: /home/runner/work/plasma/plasma/packages/plasma-tokens/data/themes/*.html

      - name: Update package-lock's
        if: github.event_name != 'pull_request'
        run: |
          npm i --package-lock-only
          lerna clean -y
          lerna exec --no-private -- npm i --package-lock-only
          # root deps don't update correctly on first regeneration O_o
          npm i --package-lock-only

      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Commit & Push package-lock's
        if: github.event_name != 'pull_request'
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: 'chore: update package-locks [skip ci]'
          branch: ${{ steps.extract_branch.outputs.branch }}
          author_name: Salute Frontend Team
          author_email: salute.developers@gmail.com
