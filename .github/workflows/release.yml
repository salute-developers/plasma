name: Release

on:
  pull_request:
    branches:
      - dev
      - master
  push:
    branches:
      - master


concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  versionate_docs:
    name: Versionate docs
    # Запуск только в мастере
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Unset header
        # https://github.com/intuit/auto/issues/1030
        run: git config --local --unset http.https://github.com/.extraheader

      - uses: ./.github/actions/prepare-environment

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      # Проверит лог коммитов, по ним забекапит нужные версии нужных сайтов документации
      - name: Versionate script
        id: versionate_script
        uses: ./actions/versionate-docs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Предыдущий шаг проапдейдит json-файлы, их нужно закоммитить
      - name: Extract branch name
        if: ${{ steps.versionate_script.outputs.result == 'true' }}
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      # Коммит изменений в полученную в предыдущем шаге ветку
      - name: Commit & Push changes
        if: ${{ steps.versionate_script.outputs.result == 'true' }}
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: 'chore: Update `versionsArchive.json` [skip ci]'
          branch: ${{ steps.extract_branch.outputs.branch }}
          author_name: Salute Frontend Team
          author_email: salute.developers@gmail.com

      - name: Install s3cmd
        if: ${{ steps.versionate_script.outputs.result == 'true' }}
        run: |
          pip3 install s3cmd

      - name: s3 Upload documentation build
        if: ${{ steps.versionate_script.outputs.result == 'true' }}
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --no-mime-magic
          sync
          ./s3_build/
          s3://${{ secrets.AWS_S3_BUCKET_2 }}/versions/

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: versionate_docs
    if: ${{ always() && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Unset header
        # https://github.com/intuit/auto/issues/1030
        run: git config --local --unset http.https://github.com/.extraheader

      - uses: ./.github/actions/prepare-environment

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      - name: API Report
        run: npm run api:report

      - name: Release Info
        run: npm whoami && npx lerna info && npx auto info || echo 'auto info returned 1'

      - name: Create Release
        run: npm run release

      - name: Update package-lock's
        if: github.event_name != 'pull_request'
        run: |
          npm i --package-lock-only
          lerna clean -y
          lerna exec --no-private -- npm i --package-lock-only --ignore-scripts
          # root deps don't update correctly on first regeneration O_o
          npm i --package-lock-only

      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Commit & Push package-lock's
        if: github.event_name != 'pull_request'
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: 'chore: update package-locks [skip ci]'
          branch: ${{ steps.extract_branch.outputs.branch }}
          author_name: Salute Frontend Team
          author_email: salute.developers@gmail.com
