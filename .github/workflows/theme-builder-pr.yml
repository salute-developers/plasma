name: PR theme-builder

on:
  pull_request:
    branches:
      - dev
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      PR_NAME: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      # ToDo: https://github.com/salute-developers/plasma/issues/255
      - name: Setup packages
        run: npm ci --no-progress

      - name: Prepare directory for build
        run: mkdir s3_build

      - name: Build Theme Builder
        env:
          REACT_APP_APPLICATION_CLIENT_ID: ${{ secrets.REACT_APP_APPLICATION_CLIENT_ID }}
          REACT_APP_AUTH_SERVER_URL: ${{ secrets.REACT_APP_AUTH_SERVER_URL }}
        run: |
          npm i --no-progress --prefix="./website/plasma-theme-builder"
          npm run build --prefix="./website/plasma-theme-builder"
          cp -R ./website/plasma-theme-builder/build ./s3_build/plasma-theme-builder-${PR_NAME}

      - name: Install s3cmd
        run: |
          pip3 install s3cmd

      - name: s3 Upload build
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --delete-removed
          --no-mime-magic
          sync
          ./s3_build/plasma-theme-builder-${PR_NAME}/
          s3://${{ secrets.AWS_S3_BUCKET_2 }}/pr/plasma-theme-builder-${PR_NAME}/

      - name: Post success comment
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Theme Builder app deployed!
              
              http://plasma.sberdevices.ru/pr/plasma-theme-builder-pr-${context.issue.number}/
              `
            })
