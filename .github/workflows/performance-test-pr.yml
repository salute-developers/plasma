name: Component Performance Testing

on:
  pull_request:
    branches:
      - rc
      - master

jobs:
  perftest:
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      PR_NAME: pr-${{ github.event.number }}
      ICONS_PUBLIC_URL: /icons
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      - name: Setup packages
        run: |
          npm ci
          npx lerna bootstrap --scope "@salutejs/plasma-ui"

      - name: Use Node.js 16.15.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.15.x

      - name: Prepare directory
        run: |
          mkdir perftest-reports

      - name: Download existing reports from S3
        uses: prewk/s3-cp-action@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE: 's3://${{ secrets.AWS_S3_BUCKET_2 }}/perftest-reports/result.json'
          DEST: './perftest-reports/'

      - name: Check main report existence
        if: always()
        id: mainReportCheck
        uses: andstor/file-existence-action@v2
        with:
          files: "perftest-reports/result.json"

      - name: Run performance test
        if: always()
        run: |
          npm run perftool:test --prefix="./packages/plasma-ui"

      - name: Copy main report to pr report directory
        if: steps.mainReportCheck.outputs.files_exists == 'true'
        run: |
          cp perftest-reports/result.json ./packages/plasma-ui/perftest/main-result.json

      - name: Compare test results
        if: steps.mainReportCheck.outputs.files_exists == 'true'
        run: |
          npm run perftool:compare --prefix="./packages/plasma-ui" -- -- ./perftest/result.json ./perftest/main-result.json

      - name: Save comparison result
        if: steps.mainReportCheck.outputs.files_exists == 'true' && always()
        uses: actions/upload-artifact@v2
        with:
          name: Component performance comparison result
          path: /home/runner/work/plasma/plasma/packages/plasma-ui/perftest/*.json

      - name: Save pr report result
        if: steps.mainReportCheck.outputs.files_exists == 'false' && always()
        uses: actions/upload-artifact@v2
        with:
          name: Component performance comparison result
          path: /home/runner/work/plasma/plasma/packages/plasma-ui/perftest/result.json

      - name: Post result comment
        if: always()
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            const hasMainReport = ${{ steps.mainReportCheck.outputs.files_exists }};
            let report = null;
            let result = null;
            try {
              report = hasMainReport ? require('/home/runner/work/plasma/plasma/packages/plasma-ui/perftest/comparison.json') : null;
            } catch (e) {}
            if (!hasMainReport) {
              result = 'ðŸŒš Missing base report';
            } else if (!report) {
              result = 'ðŸ’€ Missing report, something went wrong';
            } else {
              result = report.hasSignificantNegativeChanges
                  ? 'ðŸ”´ Fail'
                  : 'ðŸŸ¢ Success'
            }
            const subject = report ? 'comparison report' : 'current report';
            const commentBody = `
            **Component performance testing**

            Result: **${result}**

            Check out ${subject} in job artifacts!
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            })
