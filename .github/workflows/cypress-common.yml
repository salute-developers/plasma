name: Cypress reusable workflow

on:
  workflow_call:
    inputs:
      scope:
        description: 'scope name'
        required: true
        type: string
      with-react-17:
        required: false
        type: boolean
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      COVERAGE: true

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/prepare-environment

      - name: Install React 17
        if:  ${{ inputs.with-react-17 }}
        run: |
          npm i --no-progress react@17 react-dom@17 @types/react@17.0.40 @types/react-dom@17 --prefix="./packages/plasma-ui"
          npm i --no-progress react@17 react-dom@17 @types/react@17.0.40 @types/react-dom@17 --prefix="./packages/plasma-temple"
          npm i --no-progress react@17 react-dom@17 @types/react@17.0.40 @types/react-dom@17 --prefix="./packages/plasma-b2c"
          npm i --no-progress react@17 react-dom@17 @types/react@17.0.40 @types/react-dom@17 --prefix="./packages/plasma-web"

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      - name: Run Cypress CT for Plasma ${{ inputs.scope }}
        if: ${{ success() }}
        run: npm run cy:${{ inputs.scope }}:run-ct

      - name: Save artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Test Artifacts
          path: /home/runner/work/plasma/plasma/cypress

      - name: Code Coverage ${{ inputs.scope }}
        if: ${{ always() }}
        uses: codecov/codecov-action@v2
        with:
          directory: cypress/plasma-${{ inputs.scope }}-coverage
          flags: plasma-${{ inputs.scope }},plasma-core
