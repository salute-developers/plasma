name: Main Documentation and Storybook

on:
  workflow_run:
    workflows: ["Release"]
    branches: [master]
    types:
      - completed

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      # Данный шаг не исполняется, т.к. в настоящее время actions/cache поддерживается только для типов событий push и pull_request
      - name: Cache dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ hashFiles('package-lock.json') }}
            npm-

      - name: Setup packages
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm ci --no-progress

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      - name: Lint
        run: npm run lint

      - name: Prepare directory
        run: mkdir s3_build

      - name: Plasma Website
        run: |
          npm run build --prefix="./website/plasma-website"
          cp -R ./website/plasma-website/build ./s3_build/next-${{ github.sha }}

      - name: Plasma UI Docs
        run: |
          npm run build --prefix="./website/plasma-ui-docs"
          cp -R ./website/plasma-ui-docs/build ./s3_build/next-${{ github.sha }}/ui

      - name: Plasma Web Docs
        run: |
          npm run build --prefix="./website/plasma-web-docs"
          cp -R ./website/plasma-web-docs/build ./s3_build/next-${{ github.sha }}/web

      - name: Plasma Temple Docs
        run: |
          npm run build --prefix="./website/plasma-temple-docs"
          cp -R ./website/plasma-temple-docs/build ./s3_build/next-${{ github.sha }}/temple

      - name: Plasma UI Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-ui"
          cp -R ./packages/plasma-ui/build-sb ./s3_build/next-${{ github.sha }}/ui-storybook

      - name: Plasma Web Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-web"
          cp -R ./packages/plasma-web/build-sb ./s3_build/next-${{ github.sha }}/web-storybook

      - name: Plasma B2C Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-b2c"
          cp -R ./packages/plasma-b2c/build-sb ./s3_build/next-${{ github.sha }}/b2c-storybook

      - name: Plasma Temple Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-temple"
          cp -R ./packages/plasma-temple/build-sb ./s3_build/next-${{ github.sha }}/temple-storybook

      - name: Install s3cmd
        run: |
          pip3 install s3cmd

      - name: s3 Upload documentation build
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --delete-removed
          --no-mime-magic
          sync
          ./s3_build/next-${{ github.sha }}/
          s3://${{ secrets.AWS_S3_BUCKET_2 }}/current/
