name: 'Update package-lock files'

description: 'Update package-lock files after publish RC or latest version'

inputs:
  commit-message:
    description: 'Commit message when updated package-lock'
    required: false
    default: 'chore: update package-locks [skip ci]'
  tag:
    description: 'publish tag: canary,dev,latest. For example, tag === "dev" run => npm install @salutejs/plasma-b2c@dev'
    required: false
  token:
    description: 'A Github Token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Update package-lock's
      shell: bash
      run: |
        npm i --no-audit --no-progress --package-lock-only
        lerna clean -y
        lerna exec --no-private -- npm i --no-audit --no-progress --package-lock-only --ignore-scripts
        # root deps don't update correctly on first regeneration O_o
        npm i --no-audit --no-progress --package-lock-only

    - name: Extract branch name
      id: branch_name
      shell: bash
      run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

    - name: Commit & Push package-lock's
      uses: actions-js/push@master
      with:
        github_token: ${{ inputs.token }}
        message: ${{ inputs.commit-message }}
        branch: ${{ steps.branch_name.outputs.BRANCH }}
        author_name: Salute Frontend Team
        author_email: salute.developers@gmail.com

      # [NOTE]: Временное решение.
      # Как только научим plugin npm для auto изменять версии в приватных пакетах при публикации RC версии данный шаг будет удален
      # Перечисленные пакеты приватные и у них нет в зависимостях приватных пакетов
      # Если мы попробуем установить приватный пакет то получим ошибку
    - name: Update dependencies versions in private packages by dev tag
      if: ${{ inputs.tag == 'dev' }}
      shell: bash
      run: |
        lerna_ls=$(npx lerna ls --json)
        # Получаем и сохраняем версию пакета, например "@salutejs/plasma-core@1.128.0" 
        core=@salutejs/plasma-core@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-core" ) | .version')
        tokens_b2b=@salutejs/plasma-tokens-b2b@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-tokens-b2b" ) | .version')
        tokens_b2c=@salutejs/plasma-tokens-b2c@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-tokens-b2c" ) | .version')
        tokens_web=@salutejs/plasma-tokens-web@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-tokens-web" ) | .version')
        web=@salutejs/plasma-web@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-web" ) | .version')
        tokens=@salutejs/plasma-tokens@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-tokens" ) | .version')
        tokens_utils=@salutejs/plasma-tokens-utils@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-tokens-utils" ) | .version')
        typo=@salutejs/plasma-typo@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-typo" ) | .version')
        b2c=@salutejs/plasma-b2c@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-b2c" ) | .version')
        icons=@salutejs/plasma-icons@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-icons" ) | .version')
        colors=@salutejs/plasma-colors@$(echo $lerna_ls | jq -r -c '.[] | select( .name == "@salutejs/plasma-colors" ) | .version')
                
        npm i $core $tokens_b2b $web --no-audit --no-progress --save-exact --prefix="./utils/plasma-docs-ui"
        npm i $tokens $tokens_utils $typo --no-audit --no-progress --save-exact --prefix="./utils/plasma-tokens-native"
        npm i $b2c $icons $tokens_b2c $typo --no-audit --no-progress --save-exact --legacy-peer-deps --prefix="./website/plasma-website"
        npm i $b2c $colors $icons $tokens_b2b $tokens_b2c $tokens_utils $tokens_web $typo --no-audit --no-progress --save-exact --prefix="./website/plasma-theme-builder"

      # [NOTE]: Временное решение.
    - name: Commit & Push changes files
      if: ${{ inputs.tag == 'dev' }}
      uses: actions-js/push@master
      with:
        github_token: ${{ inputs.token }}
        message: "Update versions"
        branch: ${{ steps.branch_name.outputs.BRANCH }}
        author_name: Salute Frontend Team
        author_email: salute.developers@gmail.com
