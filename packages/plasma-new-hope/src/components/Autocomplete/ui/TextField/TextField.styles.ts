import { styled } from '@linaria/react';

import { textFieldConfig, textFieldTokens } from '../../../TextField';
import { component, mergeConfig } from '../../../../engines';
import { tokens as autocompleteTokens } from '../../Autocomplete.tokens';

const mergedConfig = mergeConfig(textFieldConfig);
const TextField = component(mergedConfig);

export const StyledTextField = styled(TextField)`
    ${textFieldTokens.color}: var(${autocompleteTokens.textFieldColor});
    ${textFieldTokens.backgroundColor}: var(${autocompleteTokens.textFieldBackgroundColor});
    ${textFieldTokens.backgroundColorHover}: var(${autocompleteTokens.textFieldBackgroundColorHover});
    ${textFieldTokens.backgroundColorFocus}: var(${autocompleteTokens.textFieldBackgroundColorFocus});
    ${textFieldTokens.borderColor}: var(${autocompleteTokens.textFieldBorderColor});
    ${textFieldTokens.borderColorHover}: var(${autocompleteTokens.textFieldBorderColorHover});
    ${textFieldTokens.borderColorFocus}: var(${autocompleteTokens.textFieldBorderColorFocus});
    ${textFieldTokens.colorReadOnly}: var(${autocompleteTokens.textFieldColorReadOnly});
    ${textFieldTokens.backgroundColorReadOnly}: var(${autocompleteTokens.textFieldBackgroundColorReadOnly});
    ${textFieldTokens.borderColorReadOnly}: var(${autocompleteTokens.textFieldBorderColorReadOnly});
    ${textFieldTokens.placeholderColorReadOnly}: var(${autocompleteTokens.textFieldPlaceholderColorReadOnly});
    ${textFieldTokens.caretColor}: var(${autocompleteTokens.textFieldCaretColor});
    ${textFieldTokens.placeholderColor}: var(${autocompleteTokens.textFieldPlaceholderColor});
    ${textFieldTokens.height}: var(${autocompleteTokens.textFieldHeight});
    ${textFieldTokens.borderWidth}: var(${autocompleteTokens.textFieldBorderWidth});
    ${textFieldTokens.borderRadius}: var(${autocompleteTokens.textFieldBorderRadius});
    ${textFieldTokens.padding}: var(${autocompleteTokens.textFieldPadding});
    ${textFieldTokens.leftContentMargin}: var(${autocompleteTokens.textFieldLeftContentMargin});
    ${textFieldTokens.rightContentMargin}: var(${autocompleteTokens.textFieldRightContentMargin});
    ${textFieldTokens.fontFamily}: var(${autocompleteTokens.textFieldFontFamily});
    ${textFieldTokens.fontStyle}: var(${autocompleteTokens.textFieldFontStyle});
    ${textFieldTokens.fontSize}: var(${autocompleteTokens.textFieldFontSize});
    ${textFieldTokens.fontWeight}: var(${autocompleteTokens.textFieldFontWeight});
    ${textFieldTokens.letterSpacing}: var(${autocompleteTokens.textFieldLetterSpacing});
    ${textFieldTokens.lineHeight}: var(${autocompleteTokens.textFieldLineHeight});
    ${textFieldTokens.labelColor}: var(${autocompleteTokens.textFieldLabelColor});
    ${textFieldTokens.labelColorReadOnly}: var(${autocompleteTokens.textFieldLabelColorReadOnly});
    ${textFieldTokens.labelOffset}: var(${autocompleteTokens.textFieldLabelOffset});
    ${textFieldTokens.labelFontFamily}: var(${autocompleteTokens.textFieldLabelFontFamily});
    ${textFieldTokens.labelFontStyle}: var(${autocompleteTokens.textFieldLabelFontStyle});
    ${textFieldTokens.labelFontSize}: var(${autocompleteTokens.textFieldLabelFontSize});
    ${textFieldTokens.labelFontWeight}: var(${autocompleteTokens.textFieldLabelFontWeight});
    ${textFieldTokens.labelLetterSpacing}: var(${autocompleteTokens.textFieldLabelLetterSpacing});
    ${textFieldTokens.labelLineHeight}: var(${autocompleteTokens.textFieldLabelLineHeight});
    ${textFieldTokens.labelInnerFontFamily}: var(${autocompleteTokens.textFieldLabelInnerFontFamily});
    ${textFieldTokens.labelInnerFontStyle}: var(${autocompleteTokens.textFieldLabelInnerFontStyle});
    ${textFieldTokens.labelInnerFontSize}: var(${autocompleteTokens.textFieldLabelInnerFontSize});
    ${textFieldTokens.labelInnerFontWeight}: var(${autocompleteTokens.textFieldLabelInnerFontWeight});
    ${textFieldTokens.labelInnerLetterSpacing}: var(${autocompleteTokens.textFieldLabelInnerLetterSpacing});
    ${textFieldTokens.labelInnerLineHeight}: var(${autocompleteTokens.textFieldLabelInnerLineHeight});
    ${textFieldTokens.labelInnerPadding}: var(${autocompleteTokens.textFieldLabelInnerPadding});
    ${textFieldTokens.contentLabelInnerPadding}: var(${autocompleteTokens.textFieldContentLabelInnerPadding});
    ${textFieldTokens.leftHelperColor}: var(${autocompleteTokens.textFieldLeftHelperColor});
    ${textFieldTokens.leftHelperColorReadOnly}: var(${autocompleteTokens.textFieldLeftHelperColorReadOnly});
    ${textFieldTokens.leftHelperOffset}: var(${autocompleteTokens.textFieldLeftHelperOffset});
    ${textFieldTokens.leftHelperFontFamily}: var(${autocompleteTokens.textFieldLeftHelperFontFamily});
    ${textFieldTokens.leftHelperFontStyle}: var(${autocompleteTokens.textFieldLeftHelperFontStyle});
    ${textFieldTokens.leftHelperFontSize}: var(${autocompleteTokens.textFieldLeftHelperFontSize});
    ${textFieldTokens.leftHelperFontWeight}: var(${autocompleteTokens.textFieldLeftHelperFontWeight});
    ${textFieldTokens.leftHelperLetterSpacing}: var(${autocompleteTokens.textFieldLeftHelperLetterSpacing});
    ${textFieldTokens.leftHelperLineHeight}: var(${autocompleteTokens.textFieldLeftHelperLineHeight});
    ${textFieldTokens.textBeforeColor}: var(${autocompleteTokens.textFieldTextBeforeColor});
    ${textFieldTokens.textAfterColor}: var(${autocompleteTokens.textFieldTextAfterColor});
    ${textFieldTokens.textBeforeMargin}: var(${autocompleteTokens.textFieldTextBeforeMargin});
    ${textFieldTokens.textAfterMargin}: var(${autocompleteTokens.textFieldTextAfterMargin});
    ${textFieldTokens.disabledOpacity}: var(${autocompleteTokens.textFieldDisabledOpacity});
    ${textFieldTokens.focusColor}: var(${autocompleteTokens.textFieldFocusColor});
`;
