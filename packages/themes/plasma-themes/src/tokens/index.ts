// Generated by robots, do not change this manually!

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary)';

/** Основной цвет текста */
export const textPrimaryHover = 'var(--text-primary-hover)';

/** Основной цвет текста */
export const textPrimaryActive = 'var(--text-primary-active)';

/** Основной цвет текста */
export const textPrimaryBrightness = 'var(--text-primary-brightness)';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary)';

/** Вторичный цвет текста */
export const textSecondaryHover = 'var(--text-secondary-hover)';

/** Вторичный цвет текста */
export const textSecondaryActive = 'var(--text-secondary-active)';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary)';

/** Третичный цвет текста */
export const textTertiaryHover = 'var(--text-tertiary-hover)';

/** Третичный цвет текста */
export const textTertiaryActive = 'var(--text-tertiary-active)';

/** Сплошной наборный текст */
export const textParagraph = 'var(--text-paragraph)';

/** Сплошной наборный текст */
export const textParagraphHover = 'var(--text-paragraph-hover)';

/** Сплошной наборный текст */
export const textParagraphActive = 'var(--text-paragraph-active)';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent)';

/** Акцентный цвет */
export const textAccentHover = 'var(--text-accent-hover)';

/** Акцентный цвет */
export const textAccentActive = 'var(--text-accent-active)';

/** Акцентный минорный цвет */
export const textAccentMinor = 'var(--text-accent-minor)';

/** Акцентный минорный цвет */
export const textAccentMinorHover = 'var(--text-accent-minor-hover)';

/** Акцентный минорный цвет */
export const textAccentMinorActive = 'var(--text-accent-minor-active)';

/** Цвет успеха */
export const textPositive = 'var(--text-positive)';

/** Цвет успеха */
export const textPositiveHover = 'var(--text-positive-hover)';

/** Цвет успеха */
export const textPositiveActive = 'var(--text-positive-active)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning)';

/** Цвет предупреждения */
export const textWarningHover = 'var(--text-warning-hover)';

/** Цвет предупреждения */
export const textWarningActive = 'var(--text-warning-active)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative)';

/** Цвет ошибки */
export const textNegativeHover = 'var(--text-negative-hover)';

/** Цвет ошибки */
export const textNegativeActive = 'var(--text-negative-active)';

/** Цвет информации */
export const textInfo = 'var(--text-info)';

/** Цвет информации */
export const textInfoHover = 'var(--text-info-hover)';

/** Цвет информации */
export const textInfoActive = 'var(--text-info-active)';

/** Минорный цвет успеха */
export const textPositiveMinor = 'var(--text-positive-minor)';

/** Минорный цвет успеха */
export const textPositiveMinorHover = 'var(--text-positive-minor-hover)';

/** Минорный цвет успеха */
export const textPositiveMinorActive = 'var(--text-positive-minor-active)';

/** Минорный цвет предупреждения */
export const textWarningMinor = 'var(--text-warning-minor)';

/** Минорный цвет предупреждения */
export const textWarningMinorHover = 'var(--text-warning-minor-hover)';

/** Минорный цвет предупреждения */
export const textWarningMinorActive = 'var(--text-warning-minor-active)';

/** Минорный цвет ошибки */
export const textNegativeMinor = 'var(--text-negative-minor)';

/** Минорный цвет ошибки */
export const textNegativeMinorHover = 'var(--text-negative-minor-hover)';

/** Минорный цвет ошибки */
export const textNegativeMinorActive = 'var(--text-negative-minor-active)';

/** Минорный цвет информации */
export const textInfoMinor = 'var(--text-info-minor)';

/** Минорный цвет информации */
export const textInfoMinorHover = 'var(--text-info-minor-hover)';

/** Минорный цвет информации */
export const textInfoMinorActive = 'var(--text-info-minor-active)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryHover = 'var(--on-dark-text-primary-hover)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryActive = 'var(--on-dark-text-primary-active)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryBrightness = 'var(--on-dark-text-primary-brightness)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryHover = 'var(--on-dark-text-secondary-hover)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryActive = 'var(--on-dark-text-secondary-active)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryHover = 'var(--on-dark-text-tertiary-hover)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryActive = 'var(--on-dark-text-tertiary-active)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraph = 'var(--on-dark-text-paragraph)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphHover = 'var(--on-dark-text-paragraph-hover)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphActive = 'var(--on-dark-text-paragraph-active)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccent = 'var(--on-dark-text-accent)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentHover = 'var(--on-dark-text-accent-hover)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentActive = 'var(--on-dark-text-accent-active)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinor = 'var(--on-dark-text-accent-minor)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinorHover = 'var(--on-dark-text-accent-minor-hover)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinorActive = 'var(--on-dark-text-accent-minor-active)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositive = 'var(--on-dark-text-positive)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveHover = 'var(--on-dark-text-positive-hover)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveActive = 'var(--on-dark-text-positive-active)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarning = 'var(--on-dark-text-warning)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningHover = 'var(--on-dark-text-warning-hover)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningActive = 'var(--on-dark-text-warning-active)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegative = 'var(--on-dark-text-negative)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeHover = 'var(--on-dark-text-negative-hover)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeActive = 'var(--on-dark-text-negative-active)';

/** Цвет информации на темном фоне */
export const onDarkTextInfo = 'var(--on-dark-text-info)';

/** Цвет информации на темном фоне */
export const onDarkTextInfoHover = 'var(--on-dark-text-info-hover)';

/** Цвет информации на темном фоне */
export const onDarkTextInfoActive = 'var(--on-dark-text-info-active)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinor = 'var(--on-dark-text-positive-minor)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinorHover = 'var(--on-dark-text-positive-minor-hover)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinorActive = 'var(--on-dark-text-positive-minor-active)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinor = 'var(--on-dark-text-warning-minor)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinorHover = 'var(--on-dark-text-warning-minor-hover)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinorActive = 'var(--on-dark-text-warning-minor-active)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinor = 'var(--on-dark-text-negative-minor)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinorHover = 'var(--on-dark-text-negative-minor-hover)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinorActive = 'var(--on-dark-text-negative-minor-active)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinor = 'var(--on-dark-text-info-minor)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinorHover = 'var(--on-dark-text-info-minor-hover)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinorActive = 'var(--on-dark-text-info-minor-active)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryHover = 'var(--on-light-text-primary-hover)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryActive = 'var(--on-light-text-primary-active)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryBrightness = 'var(--on-light-text-primary-brightness)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryHover = 'var(--on-light-text-secondary-hover)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryActive = 'var(--on-light-text-secondary-active)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryHover = 'var(--on-light-text-tertiary-hover)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryActive = 'var(--on-light-text-tertiary-active)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraph = 'var(--on-light-text-paragraph)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphHover = 'var(--on-light-text-paragraph-hover)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphActive = 'var(--on-light-text-paragraph-active)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccent = 'var(--on-light-text-accent)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentHover = 'var(--on-light-text-accent-hover)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentActive = 'var(--on-light-text-accent-active)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinor = 'var(--on-light-text-accent-minor)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinorHover = 'var(--on-light-text-accent-minor-hover)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinorActive = 'var(--on-light-text-accent-minor-active)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositive = 'var(--on-light-text-positive)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveHover = 'var(--on-light-text-positive-hover)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveActive = 'var(--on-light-text-positive-active)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarning = 'var(--on-light-text-warning)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningHover = 'var(--on-light-text-warning-hover)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningActive = 'var(--on-light-text-warning-active)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegative = 'var(--on-light-text-negative)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeHover = 'var(--on-light-text-negative-hover)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeActive = 'var(--on-light-text-negative-active)';

/** Цвет информации на светлом фоне */
export const onLightTextInfo = 'var(--on-light-text-info)';

/** Цвет информации на светлом фоне */
export const onLightTextInfoHover = 'var(--on-light-text-info-hover)';

/** Цвет информации на светлом фоне */
export const onLightTextInfoActive = 'var(--on-light-text-info-active)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinor = 'var(--on-light-text-positive-minor)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinorHover = 'var(--on-light-text-positive-minor-hover)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinorActive = 'var(--on-light-text-positive-minor-active)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinor = 'var(--on-light-text-warning-minor)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinorHover = 'var(--on-light-text-warning-minor-hover)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinorActive = 'var(--on-light-text-warning-minor-active)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinor = 'var(--on-light-text-negative-minor)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinorHover = 'var(--on-light-text-negative-minor-hover)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinorActive = 'var(--on-light-text-negative-minor-active)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinor = 'var(--on-light-text-info-minor)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinorHover = 'var(--on-light-text-info-minor-hover)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinorActive = 'var(--on-light-text-info-minor-active)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimary = 'var(--inverse-text-primary)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryHover = 'var(--inverse-text-primary-hover)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryActive = 'var(--inverse-text-primary-active)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryBrightness = 'var(--inverse-text-primary-brightness)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondary = 'var(--inverse-text-secondary)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondaryHover = 'var(--inverse-text-secondary-hover)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondaryActive = 'var(--inverse-text-secondary-active)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiary = 'var(--inverse-text-tertiary)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiaryHover = 'var(--inverse-text-tertiary-hover)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiaryActive = 'var(--inverse-text-tertiary-active)';

/** Инвертированный сплошной наборный текст */
export const inverseTextParagraph = 'var(--inverse-text-paragraph)';

/** Инвертированный сплошной наборный текст */
export const inverseTextParagraphHover = 'var(--inverse-text-paragraph-hover)';

/** Инвертированный сплошной наборный текст */
export const inverseTextParagraphActive = 'var(--inverse-text-paragraph-active)';

/** Инвертированный акцентный цвет */
export const inverseTextAccent = 'var(--inverse-text-accent)';

/** Инвертированный акцентный цвет */
export const inverseTextAccentHover = 'var(--inverse-text-accent-hover)';

/** Инвертированный акцентный цвет */
export const inverseTextAccentActive = 'var(--inverse-text-accent-active)';

/** Инвертированный минорный акцентный цвет */
export const inverseTextAccentMinor = 'var(--inverse-text-accent-minor)';

/** Инвертированный минорный акцентный цвет */
export const inverseTextAccentMinorHover = 'var(--inverse-text-accent-minor-hover)';

/** Инвертированный минорный акцентный цвет */
export const inverseTextAccentMinorActive = 'var(--inverse-text-accent-minor-active)';

/** Инвертированный цвет успеха */
export const inverseTextPositive = 'var(--inverse-text-positive)';

/** Инвертированный цвет успеха */
export const inverseTextPositiveHover = 'var(--inverse-text-positive-hover)';

/** Инвертированный цвет успеха */
export const inverseTextPositiveActive = 'var(--inverse-text-positive-active)';

/** Инвертированный цвет предупреждения */
export const inverseTextWarning = 'var(--inverse-text-warning)';

/** Инвертированный цвет предупреждения */
export const inverseTextWarningHover = 'var(--inverse-text-warning-hover)';

/** Инвертированный цвет предупреждения */
export const inverseTextWarningActive = 'var(--inverse-text-warning-active)';

/** Инвертированный цвет ошибки */
export const inverseTextNegative = 'var(--inverse-text-negative)';

/** Инвертированный цвет ошибки */
export const inverseTextNegativeHover = 'var(--inverse-text-negative-hover)';

/** Инвертированный цвет ошибки */
export const inverseTextNegativeActive = 'var(--inverse-text-negative-active)';

/** Инвертированный цвет информации */
export const inverseTextInfo = 'var(--inverse-text-info)';

/** Инвертированный цвет информации */
export const inverseTextInfoHover = 'var(--inverse-text-info-hover)';

/** Инвертированный цвет информации */
export const inverseTextInfoActive = 'var(--inverse-text-info-active)';

/** Инвертированный минорный цвет успеха */
export const inverseTextPositiveMinor = 'var(--inverse-text-positive-minor)';

/** Инвертированный минорный цвет успеха */
export const inverseTextPositiveMinorHover = 'var(--inverse-text-positive-minor-hover)';

/** Инвертированный минорный цвет успеха */
export const inverseTextPositiveMinorActive = 'var(--inverse-text-positive-minor-active)';

/** Инвертированный минорный цвет предупреждения */
export const inverseTextWarningMinor = 'var(--inverse-text-warning-minor)';

/** Инвертированный минорный цвет предупреждения */
export const inverseTextWarningMinorHover = 'var(--inverse-text-warning-minor-hover)';

/** Инвертированный минорный цвет предупреждения */
export const inverseTextWarningMinorActive = 'var(--inverse-text-warning-minor-active)';

/** Инвертированный минорный цвет ошибки */
export const inverseTextNegativeMinor = 'var(--inverse-text-negative-minor)';

/** Инвертированный минорный цвет ошибки */
export const inverseTextNegativeMinorHover = 'var(--inverse-text-negative-minor-hover)';

/** Инвертированный минорный цвет ошибки */
export const inverseTextNegativeMinorActive = 'var(--inverse-text-negative-minor-active)';

/** Инвертированный минорный цвет информации */
export const inverseTextInfoMinor = 'var(--inverse-text-info-minor)';

/** Инвертированный минорный цвет информации */
export const inverseTextInfoMinorHover = 'var(--inverse-text-info-minor-hover)';

/** Инвертированный минорный цвет информации */
export const inverseTextInfoMinorActive = 'var(--inverse-text-info-minor-active)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryHover = 'var(--surface-solid-primary-hover)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryActive = 'var(--surface-solid-primary-active)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryBrightness = 'var(--surface-solid-primary-brightness)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryHover = 'var(--surface-solid-secondary-hover)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryActive = 'var(--surface-solid-secondary-active)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryHover = 'var(--surface-solid-tertiary-hover)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryActive = 'var(--surface-solid-tertiary-active)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card)';

/** Основной фон для карточек */
export const surfaceSolidCardHover = 'var(--surface-solid-card-hover)';

/** Основной фон для карточек */
export const surfaceSolidCardActive = 'var(--surface-solid-card-active)';

/** Основной фон для карточек */
export const surfaceSolidCardBrightness = 'var(--surface-solid-card-brightness)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultHover = 'var(--surface-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultActive = 'var(--surface-solid-default-active)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimary = 'var(--surface-transparent-primary)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryHover = 'var(--surface-transparent-primary-hover)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryActive = 'var(--surface-transparent-primary-active)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondary = 'var(--surface-transparent-secondary)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryHover = 'var(--surface-transparent-secondary-hover)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryActive = 'var(--surface-transparent-secondary-active)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiary = 'var(--surface-transparent-tertiary)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryHover = 'var(--surface-transparent-tertiary-hover)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryActive = 'var(--surface-transparent-tertiary-active)';

/** Глубокий прозрачный фон поверхности/контрола */
export const surfaceTransparentDeep = 'var(--surface-transparent-deep)';

/** Глубокий прозрачный фон поверхности/контрола */
export const surfaceTransparentDeepHover = 'var(--surface-transparent-deep-hover)';

/** Глубокий прозрачный фон поверхности/контрола */
export const surfaceTransparentDeepActive = 'var(--surface-transparent-deep-active)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCard = 'var(--surface-transparent-card)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardHover = 'var(--surface-transparent-card-hover)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardActive = 'var(--surface-transparent-card-active)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardBrightness = 'var(--surface-transparent-card-brightness)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearHover = 'var(--surface-clear-hover)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearActive = 'var(--surface-clear-active)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentHover = 'var(--surface-accent-hover)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentActive = 'var(--surface-accent-active)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinor = 'var(--surface-accent-minor)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinorHover = 'var(--surface-accent-minor-hover)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinorActive = 'var(--surface-accent-minor-active)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccent = 'var(--surface-transparent-accent)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccentHover = 'var(--surface-transparent-accent-hover)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccentActive = 'var(--surface-transparent-accent-active)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveHover = 'var(--surface-positive-hover)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveActive = 'var(--surface-positive-active)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningHover = 'var(--surface-warning-hover)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningActive = 'var(--surface-warning-active)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeHover = 'var(--surface-negative-hover)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeActive = 'var(--surface-negative-active)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfo = 'var(--surface-info)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfoHover = 'var(--surface-info-hover)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfoActive = 'var(--surface-info-active)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinor = 'var(--surface-positive-minor)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinorHover = 'var(--surface-positive-minor-hover)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinorActive = 'var(--surface-positive-minor-active)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinor = 'var(--surface-warning-minor)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinorHover = 'var(--surface-warning-minor-hover)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinorActive = 'var(--surface-warning-minor-active)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinor = 'var(--surface-negative-minor)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinorHover = 'var(--surface-negative-minor-hover)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinorActive = 'var(--surface-negative-minor-active)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinor = 'var(--surface-info-minor)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinorHover = 'var(--surface-info-minor-hover)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinorActive = 'var(--surface-info-minor-active)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositive = 'var(--surface-transparent-positive)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositiveHover = 'var(--surface-transparent-positive-hover)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositiveActive = 'var(--surface-transparent-positive-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarning = 'var(--surface-transparent-warning)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarningHover = 'var(--surface-transparent-warning-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarningActive = 'var(--surface-transparent-warning-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegative = 'var(--surface-transparent-negative)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegativeHover = 'var(--surface-transparent-negative-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegativeActive = 'var(--surface-transparent-negative-active)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfo = 'var(--surface-transparent-info)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfoHover = 'var(--surface-transparent-info-hover)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfoActive = 'var(--surface-transparent-info-active)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryHover = 'var(--on-dark-surface-solid-primary-hover)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryActive = 'var(--on-dark-surface-solid-primary-active)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryBrightness = 'var(--on-dark-surface-solid-primary-brightness)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryHover = 'var(--on-dark-surface-solid-secondary-hover)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryActive = 'var(--on-dark-surface-solid-secondary-active)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryHover = 'var(--on-dark-surface-solid-tertiary-hover)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryActive = 'var(--on-dark-surface-solid-tertiary-active)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardHover = 'var(--on-dark-surface-solid-card-hover)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardActive = 'var(--on-dark-surface-solid-card-active)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardBrightness = 'var(--on-dark-surface-solid-card-brightness)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefaultHover = 'var(--on-dark-surface-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefaultActive = 'var(--on-dark-surface-solid-default-active)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryHover = 'var(--on-dark-surface-transparent-primary-hover)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryActive = 'var(--on-dark-surface-transparent-primary-active)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryHover = 'var(--on-dark-surface-transparent-secondary-hover)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryActive = 'var(--on-dark-surface-transparent-secondary-active)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryHover = 'var(--on-dark-surface-transparent-tertiary-hover)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryActive = 'var(--on-dark-surface-transparent-tertiary-active)';

/** Глубокий прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep)';

/** Глубокий прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentDeepHover = 'var(--on-dark-surface-transparent-deep-hover)';

/** Глубокий прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentDeepActive = 'var(--on-dark-surface-transparent-deep-active)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardHover = 'var(--on-dark-surface-transparent-card-hover)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardActive = 'var(--on-dark-surface-transparent-card-active)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardBrightness = 'var(--on-dark-surface-transparent-card-brightness)';

/** Фон поверхности/контрола без заливки на темном фоне */
export const onDarkSurfaceClear = 'var(--on-dark-surface-clear)';

/** Фон поверхности/контрола без заливки на темном фоне */
export const onDarkSurfaceClearHover = 'var(--on-dark-surface-clear-hover)';

/** Фон поверхности/контрола без заливки на темном фоне */
export const onDarkSurfaceClearActive = 'var(--on-dark-surface-clear-active)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccent = 'var(--on-dark-surface-accent)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentHover = 'var(--on-dark-surface-accent-hover)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentActive = 'var(--on-dark-surface-accent-active)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinor = 'var(--on-dark-surface-accent-minor)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinorHover = 'var(--on-dark-surface-accent-minor-hover)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinorActive = 'var(--on-dark-surface-accent-minor-active)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccent = 'var(--on-dark-surface-transparent-accent)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccentHover = 'var(--on-dark-surface-transparent-accent-hover)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccentActive = 'var(--on-dark-surface-transparent-accent-active)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositive = 'var(--on-dark-surface-positive)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveHover = 'var(--on-dark-surface-positive-hover)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveActive = 'var(--on-dark-surface-positive-active)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarning = 'var(--on-dark-surface-warning)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningHover = 'var(--on-dark-surface-warning-hover)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningActive = 'var(--on-dark-surface-warning-active)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegative = 'var(--on-dark-surface-negative)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeHover = 'var(--on-dark-surface-negative-hover)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeActive = 'var(--on-dark-surface-negative-active)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfo = 'var(--on-dark-surface-info)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoHover = 'var(--on-dark-surface-info-hover)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoActive = 'var(--on-dark-surface-info-active)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinor = 'var(--on-dark-surface-positive-minor)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinorHover = 'var(--on-dark-surface-positive-minor-hover)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinorActive = 'var(--on-dark-surface-positive-minor-active)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinor = 'var(--on-dark-surface-warning-minor)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinorHover = 'var(--on-dark-surface-warning-minor-hover)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinorActive = 'var(--on-dark-surface-warning-minor-active)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinor = 'var(--on-dark-surface-negative-minor)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinorHover = 'var(--on-dark-surface-negative-minor-hover)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinorActive = 'var(--on-dark-surface-negative-minor-active)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinor = 'var(--on-dark-surface-info-minor)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinorHover = 'var(--on-dark-surface-info-minor-hover)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinorActive = 'var(--on-dark-surface-info-minor-active)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositive = 'var(--on-dark-surface-transparent-positive)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositiveHover = 'var(--on-dark-surface-transparent-positive-hover)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositiveActive = 'var(--on-dark-surface-transparent-positive-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarning = 'var(--on-dark-surface-transparent-warning)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarningHover = 'var(--on-dark-surface-transparent-warning-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarningActive = 'var(--on-dark-surface-transparent-warning-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegative = 'var(--on-dark-surface-transparent-negative)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegativeHover = 'var(--on-dark-surface-transparent-negative-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegativeActive = 'var(--on-dark-surface-transparent-negative-active)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfo = 'var(--on-dark-surface-transparent-info)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfoHover = 'var(--on-dark-surface-transparent-info-hover)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfoActive = 'var(--on-dark-surface-transparent-info-active)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryHover = 'var(--on-light-surface-solid-primary-hover)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryActive = 'var(--on-light-surface-solid-primary-active)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryBrightness = 'var(--on-light-surface-solid-primary-brightness)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryHover = 'var(--on-light-surface-solid-secondary-hover)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryActive = 'var(--on-light-surface-solid-secondary-active)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryHover = 'var(--on-light-surface-solid-tertiary-hover)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryActive = 'var(--on-light-surface-solid-tertiary-active)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardHover = 'var(--on-light-surface-solid-card-hover)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardActive = 'var(--on-light-surface-solid-card-active)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardBrightness = 'var(--on-light-surface-solid-card-brightness)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultHover = 'var(--on-light-surface-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultActive = 'var(--on-light-surface-solid-default-active)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryHover = 'var(--on-light-surface-transparent-primary-hover)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryActive = 'var(--on-light-surface-transparent-primary-active)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryHover = 'var(--on-light-surface-transparent-secondary-hover)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryActive = 'var(--on-light-surface-transparent-secondary-active)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryHover = 'var(--on-light-surface-transparent-tertiary-hover)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryActive = 'var(--on-light-surface-transparent-tertiary-active)';

/** Глубокий прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentDeep = 'var(--on-light-surface-transparent-deep)';

/** Глубокий прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentDeepHover = 'var(--on-light-surface-transparent-deep-hover)';

/** Глубокий прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentDeepActive = 'var(--on-light-surface-transparent-deep-active)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardHover = 'var(--on-light-surface-transparent-card-hover)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardActive = 'var(--on-light-surface-transparent-card-active)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardBrightness = 'var(--on-light-surface-transparent-card-brightness)';

/** Фон поверхности/контрола без заливки на светлом фоне */
export const onLightSurfaceClear = 'var(--on-light-surface-clear)';

/** Фон поверхности/контрола без заливки на светлом фоне */
export const onLightSurfaceClearHover = 'var(--on-light-surface-clear-hover)';

/** Фон поверхности/контрола без заливки на светлом фоне */
export const onLightSurfaceClearActive = 'var(--on-light-surface-clear-active)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccent = 'var(--on-light-surface-accent)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentHover = 'var(--on-light-surface-accent-hover)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentActive = 'var(--on-light-surface-accent-active)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinor = 'var(--on-light-surface-accent-minor)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinorHover = 'var(--on-light-surface-accent-minor-hover)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinorActive = 'var(--on-light-surface-accent-minor-active)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccent = 'var(--on-light-surface-transparent-accent)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccentHover = 'var(--on-light-surface-transparent-accent-hover)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccentActive = 'var(--on-light-surface-transparent-accent-active)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositive = 'var(--on-light-surface-positive)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveHover = 'var(--on-light-surface-positive-hover)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveActive = 'var(--on-light-surface-positive-active)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarning = 'var(--on-light-surface-warning)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningHover = 'var(--on-light-surface-warning-hover)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningActive = 'var(--on-light-surface-warning-active)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegative = 'var(--on-light-surface-negative)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeHover = 'var(--on-light-surface-negative-hover)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeActive = 'var(--on-light-surface-negative-active)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfo = 'var(--on-light-surface-info)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoHover = 'var(--on-light-surface-info-hover)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoActive = 'var(--on-light-surface-info-active)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinor = 'var(--on-light-surface-positive-minor)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinorHover = 'var(--on-light-surface-positive-minor-hover)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinorActive = 'var(--on-light-surface-positive-minor-active)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinor = 'var(--on-light-surface-warning-minor)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinorHover = 'var(--on-light-surface-warning-minor-hover)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinorActive = 'var(--on-light-surface-warning-minor-active)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinor = 'var(--on-light-surface-negative-minor)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinorHover = 'var(--on-light-surface-negative-minor-hover)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinorActive = 'var(--on-light-surface-negative-minor-active)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinor = 'var(--on-light-surface-info-minor)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinorHover = 'var(--on-light-surface-info-minor-hover)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinorActive = 'var(--on-light-surface-info-minor-active)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositive = 'var(--on-light-surface-transparent-positive)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositiveHover = 'var(--on-light-surface-transparent-positive-hover)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositiveActive = 'var(--on-light-surface-transparent-positive-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarning = 'var(--on-light-surface-transparent-warning)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarningHover = 'var(--on-light-surface-transparent-warning-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarningActive = 'var(--on-light-surface-transparent-warning-active)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegative = 'var(--on-light-surface-transparent-negative)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegativeHover = 'var(--on-light-surface-transparent-negative-hover)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegativeActive = 'var(--on-light-surface-transparent-negative-active)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfo = 'var(--on-light-surface-transparent-info)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfoHover = 'var(--on-light-surface-transparent-info-hover)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfoActive = 'var(--on-light-surface-transparent-info-active)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimary = 'var(--inverse-surface-solid-primary)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimaryHover = 'var(--inverse-surface-solid-primary-hover)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimaryActive = 'var(--inverse-surface-solid-primary-active)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimaryBrightness = 'var(--inverse-surface-solid-primary-brightness)';

/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidSecondary = 'var(--inverse-surface-solid-secondary)';

/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidSecondaryHover = 'var(--inverse-surface-solid-secondary-hover)';

/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidSecondaryActive = 'var(--inverse-surface-solid-secondary-active)';

/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidTertiary = 'var(--inverse-surface-solid-tertiary)';

/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidTertiaryHover = 'var(--inverse-surface-solid-tertiary-hover)';

/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidTertiaryActive = 'var(--inverse-surface-solid-tertiary-active)';

/** Инвертированный основной фон для карточек */
export const inverseSurfaceSolidCard = 'var(--inverse-surface-solid-card)';

/** Инвертированный основной фон для карточек */
export const inverseSurfaceSolidCardHover = 'var(--inverse-surface-solid-card-hover)';

/** Инвертированный основной фон для карточек */
export const inverseSurfaceSolidCardActive = 'var(--inverse-surface-solid-card-active)';

/** Инвертированный основной фон для карточек */
export const inverseSurfaceSolidCardBrightness = 'var(--inverse-surface-solid-card-brightness)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceSolidDefault = 'var(--inverse-surface-solid-default)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceSolidDefaultHover = 'var(--inverse-surface-solid-default-hover)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceSolidDefaultActive = 'var(--inverse-surface-solid-default-active)';

/** Инвертированный основной прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentPrimary = 'var(--inverse-surface-transparent-primary)';

/** Инвертированный основной прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentPrimaryHover = 'var(--inverse-surface-transparent-primary-hover)';

/** Инвертированный основной прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentPrimaryActive = 'var(--inverse-surface-transparent-primary-active)';

/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentSecondary = 'var(--inverse-surface-transparent-secondary)';

/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentSecondaryHover = 'var(--inverse-surface-transparent-secondary-hover)';

/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentSecondaryActive = 'var(--inverse-surface-transparent-secondary-active)';

/** Инвертированный третичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentTertiary = 'var(--inverse-surface-transparent-tertiary)';

/** Инвертированный третичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentTertiaryHover = 'var(--inverse-surface-transparent-tertiary-hover)';

/** Инвертированный третичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentTertiaryActive = 'var(--inverse-surface-transparent-tertiary-active)';

/** Инвертированный глубокий прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentDeep = 'var(--inverse-surface-transparent-deep)';

/** Инвертированный глубокий прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentDeepHover = 'var(--inverse-surface-transparent-deep-hover)';

/** Инвертированный глубокий прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentDeepActive = 'var(--inverse-surface-transparent-deep-active)';

/** Инвертированный прозрачный фон для карточек */
export const inverseSurfaceTransparentCard = 'var(--inverse-surface-transparent-card)';

/** Инвертированный прозрачный фон для карточек */
export const inverseSurfaceTransparentCardHover = 'var(--inverse-surface-transparent-card-hover)';

/** Инвертированный прозрачный фон для карточек */
export const inverseSurfaceTransparentCardActive = 'var(--inverse-surface-transparent-card-active)';

/** Инвертированный прозрачный фон для карточек */
export const inverseSurfaceTransparentCardBrightness = 'var(--inverse-surface-transparent-card-brightness)';

/** Инвертированный фон поверхности/контрола без заливки */
export const inverseSurfaceClear = 'var(--inverse-surface-clear)';

/** Инвертированный фон поверхности/контрола без заливки */
export const inverseSurfaceClearHover = 'var(--inverse-surface-clear-hover)';

/** Инвертированный фон поверхности/контрола без заливки */
export const inverseSurfaceClearActive = 'var(--inverse-surface-clear-active)';

/** Инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceAccent = 'var(--inverse-surface-accent)';

/** Инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceAccentHover = 'var(--inverse-surface-accent-hover)';

/** Инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceAccentActive = 'var(--inverse-surface-accent-active)';

/** Инвертированный акцентный минорный непрозрачный фон поверхности/контрола */
export const inverseSurfaceAccentMinor = 'var(--inverse-surface-accent-minor)';

/** Инвертированный акцентный минорный непрозрачный фон поверхности/контрола */
export const inverseSurfaceAccentMinorHover = 'var(--inverse-surface-accent-minor-hover)';

/** Инвертированный акцентный минорный непрозрачный фон поверхности/контрола */
export const inverseSurfaceAccentMinorActive = 'var(--inverse-surface-accent-minor-active)';

/** Прозрачный инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceTransparentAccent = 'var(--inverse-surface-transparent-accent)';

/** Прозрачный инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceTransparentAccentHover = 'var(--inverse-surface-transparent-accent-hover)';

/** Прозрачный инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceTransparentAccentActive = 'var(--inverse-surface-transparent-accent-active)';

/** Инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfacePositive = 'var(--inverse-surface-positive)';

/** Инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfacePositiveHover = 'var(--inverse-surface-positive-hover)';

/** Инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfacePositiveActive = 'var(--inverse-surface-positive-active)';

/** Инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarning = 'var(--inverse-surface-warning)';

/** Инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarningHover = 'var(--inverse-surface-warning-hover)';

/** Инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarningActive = 'var(--inverse-surface-warning-active)';

/** Инвертированный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegative = 'var(--inverse-surface-negative)';

/** Инвертированный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegativeHover = 'var(--inverse-surface-negative-hover)';

/** Инвертированный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegativeActive = 'var(--inverse-surface-negative-active)';

/** Инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfo = 'var(--inverse-surface-info)';

/** Инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfoHover = 'var(--inverse-surface-info-hover)';

/** Инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfoActive = 'var(--inverse-surface-info-active)';

/** Инвертированный минорный цвет фона поверхности/контрола успех */
export const inverseSurfacePositiveMinor = 'var(--inverse-surface-positive-minor)';

/** Инвертированный минорный цвет фона поверхности/контрола успех */
export const inverseSurfacePositiveMinorHover = 'var(--inverse-surface-positive-minor-hover)';

/** Инвертированный минорный цвет фона поверхности/контрола успех */
export const inverseSurfacePositiveMinorActive = 'var(--inverse-surface-positive-minor-active)';

/** Инвертированный минорный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarningMinor = 'var(--inverse-surface-warning-minor)';

/** Инвертированный минорный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarningMinorHover = 'var(--inverse-surface-warning-minor-hover)';

/** Инвертированный минорный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarningMinorActive = 'var(--inverse-surface-warning-minor-active)';

/** Инвертированный минорный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegativeMinor = 'var(--inverse-surface-negative-minor)';

/** Инвертированный минорный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegativeMinorHover = 'var(--inverse-surface-negative-minor-hover)';

/** Инвертированный минорный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegativeMinorActive = 'var(--inverse-surface-negative-minor-active)';

/** Инвертированный минорный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfoMinor = 'var(--inverse-surface-info-minor)';

/** Инвертированный минорный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfoMinorHover = 'var(--inverse-surface-info-minor-hover)';

/** Инвертированный минорный цвет фона поверхности/контрола информация */
export const inverseSurfaceInfoMinorActive = 'var(--inverse-surface-info-minor-active)';

/** Прозрачный инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfaceTransparentPositive = 'var(--inverse-surface-transparent-positive)';

/** Прозрачный инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfaceTransparentPositiveHover = 'var(--inverse-surface-transparent-positive-hover)';

/** Прозрачный инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfaceTransparentPositiveActive = 'var(--inverse-surface-transparent-positive-active)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentWarning = 'var(--inverse-surface-transparent-warning)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentWarningHover = 'var(--inverse-surface-transparent-warning-hover)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentWarningActive = 'var(--inverse-surface-transparent-warning-active)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentNegative = 'var(--inverse-surface-transparent-negative)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentNegativeHover = 'var(--inverse-surface-transparent-negative-hover)';

/** Прозрачный инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceTransparentNegativeActive = 'var(--inverse-surface-transparent-negative-active)';

/** Прозрачный инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceTransparentInfo = 'var(--inverse-surface-transparent-info)';

/** Прозрачный инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceTransparentInfoHover = 'var(--inverse-surface-transparent-info-hover)';

/** Прозрачный инвертированный цвет фона поверхности/контрола информация */
export const inverseSurfaceTransparentInfoActive = 'var(--inverse-surface-transparent-info-active)';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary)';

/** Основной фон на темном фоне */
export const darkBackgroundPrimary = 'var(--dark-background-primary)';

/** Основной фон на светлом фоне */
export const lightBackgroundPrimary = 'var(--light-background-primary)';

/** Инвертированный основной фон */
export const inverseBackgroundPrimary = 'var(--inverse-background-primary)';

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft)';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard)';

/** Цвет фона паранжи размытый */
export const overlayBlur = 'var(--overlay-blur)';

/** Цвет фона паранжи светлый на темном фоне */
export const onDarkOverlaySoft = 'var(--on-dark-overlay-soft)';

/** Цвет фона паранжи темный на темном фоне */
export const onDarkOverlayHard = 'var(--on-dark-overlay-hard)';

/** Цвет фона паранжи размытый на темном фоне */
export const onDarkOverlayBlur = 'var(--on-dark-overlay-blur)';

/** Цвет фона паранжи светлый на светлом фоне */
export const onLightOverlaySoft = 'var(--on-light-overlay-soft)';

/** Цвет фона паранжи темный на светлом фоне */
export const onLightOverlayHard = 'var(--on-light-overlay-hard)';

/** Цвет фона паранжи размытый на светлом фоне */
export const onLightOverlayBlur = 'var(--on-light-overlay-blur)';

/** Инвертированный цвет фона паранжи светлый */
export const inverseOverlaySoft = 'var(--inverse-overlay-soft)';

/** Инвертированный цвет фона паранжи темный */
export const inverseOverlayHard = 'var(--inverse-overlay-hard)';

/** Инвертированный цвет фона паранжи размытый */
export const inverseOverlayBlur = 'var(--inverse-overlay-blur)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimary = 'var(--outline-solid-primary)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimaryHover = 'var(--outline-solid-primary-hover)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimaryActive = 'var(--outline-solid-primary-active)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondary = 'var(--outline-solid-secondary)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondaryHover = 'var(--outline-solid-secondary-hover)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondaryActive = 'var(--outline-solid-secondary-active)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiary = 'var(--outline-solid-tertiary)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiaryHover = 'var(--outline-solid-tertiary-hover)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiaryActive = 'var(--outline-solid-tertiary-active)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const outlineSolidDefault = 'var(--outline-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const outlineSolidDefaultHover = 'var(--outline-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const outlineSolidDefaultActive = 'var(--outline-solid-default-active)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimary = 'var(--outline-transparent-primary)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimaryHover = 'var(--outline-transparent-primary-hover)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimaryActive = 'var(--outline-transparent-primary-active)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondary = 'var(--outline-transparent-secondary)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondaryHover = 'var(--outline-transparent-secondary-hover)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondaryActive = 'var(--outline-transparent-secondary-active)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiary = 'var(--outline-transparent-tertiary)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiaryHover = 'var(--outline-transparent-tertiary-hover)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiaryActive = 'var(--outline-transparent-tertiary-active)';

/** Бесцветная обводка */
export const outlineClear = 'var(--outline-clear)';

/** Бесцветная обводка */
export const outlineClearHover = 'var(--outline-clear-hover)';

/** Бесцветная обводка */
export const outlineClearActive = 'var(--outline-clear-active)';

/** Акцентный цвет обводки */
export const outlineAccent = 'var(--outline-accent)';

/** Акцентный цвет обводки */
export const outlineAccentHover = 'var(--outline-accent-hover)';

/** Акцентный цвет обводки */
export const outlineAccentActive = 'var(--outline-accent-active)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinor = 'var(--outline-accent-minor)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinorHover = 'var(--outline-accent-minor-hover)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinorActive = 'var(--outline-accent-minor-active)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccent = 'var(--outline-transparent-accent)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccentHover = 'var(--outline-transparent-accent-hover)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccentActive = 'var(--outline-transparent-accent-active)';

/** Цвет обводки успех */
export const outlinePositive = 'var(--outline-positive)';

/** Цвет обводки успех */
export const outlinePositiveHover = 'var(--outline-positive-hover)';

/** Цвет обводки успех */
export const outlinePositiveActive = 'var(--outline-positive-active)';

/** Цвет обводки предупреждение */
export const outlineWarning = 'var(--outline-warning)';

/** Цвет обводки предупреждение */
export const outlineWarningHover = 'var(--outline-warning-hover)';

/** Цвет обводки предупреждение */
export const outlineWarningActive = 'var(--outline-warning-active)';

/** Цвет обводки ошибка */
export const outlineNegative = 'var(--outline-negative)';

/** Цвет обводки ошибка */
export const outlineNegativeHover = 'var(--outline-negative-hover)';

/** Цвет обводки ошибка */
export const outlineNegativeActive = 'var(--outline-negative-active)';

/** Цвет обводки информация */
export const outlineInfo = 'var(--outline-info)';

/** Цвет обводки информация */
export const outlineInfoHover = 'var(--outline-info-hover)';

/** Цвет обводки информация */
export const outlineInfoActive = 'var(--outline-info-active)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinor = 'var(--outline-positive-minor)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinorHover = 'var(--outline-positive-minor-hover)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinorActive = 'var(--outline-positive-minor-active)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinor = 'var(--outline-warning-minor)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinorHover = 'var(--outline-warning-minor-hover)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinorActive = 'var(--outline-warning-minor-active)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinor = 'var(--outline-negative-minor)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinorHover = 'var(--outline-negative-minor-hover)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinorActive = 'var(--outline-negative-minor-active)';

/** Минорный цвет обводки информация */
export const outlineInfoMinor = 'var(--outline-info-minor)';

/** Минорный цвет обводки информация */
export const outlineInfoMinorHover = 'var(--outline-info-minor-hover)';

/** Минорный цвет обводки информация */
export const outlineInfoMinorActive = 'var(--outline-info-minor-active)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositive = 'var(--outline-transparent-positive)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositiveHover = 'var(--outline-transparent-positive-hover)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositiveActive = 'var(--outline-transparent-positive-active)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarning = 'var(--outline-transparent-warning)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarningHover = 'var(--outline-transparent-warning-hover)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarningActive = 'var(--outline-transparent-warning-active)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegative = 'var(--outline-transparent-negative)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegativeHover = 'var(--outline-transparent-negative-hover)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegativeActive = 'var(--outline-transparent-negative-active)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfo = 'var(--outline-transparent-info)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfoHover = 'var(--outline-transparent-info-hover)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfoActive = 'var(--outline-transparent-info-active)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimary = 'var(--on-dark-outline-solid-primary)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimaryHover = 'var(--on-dark-outline-solid-primary-hover)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimaryActive = 'var(--on-dark-outline-solid-primary-active)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondary = 'var(--on-dark-outline-solid-secondary)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondaryHover = 'var(--on-dark-outline-solid-secondary-hover)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondaryActive = 'var(--on-dark-outline-solid-secondary-active)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiary = 'var(--on-dark-outline-solid-tertiary)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiaryHover = 'var(--on-dark-outline-solid-tertiary-hover)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiaryActive = 'var(--on-dark-outline-solid-tertiary-active)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkOutlineSolidDefault = 'var(--on-dark-outline-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkOutlineSolidDefaultHover = 'var(--on-dark-outline-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkOutlineSolidDefaultActive = 'var(--on-dark-outline-solid-default-active)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimary = 'var(--on-dark-outline-transparent-primary)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimaryHover = 'var(--on-dark-outline-transparent-primary-hover)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimaryActive = 'var(--on-dark-outline-transparent-primary-active)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondary = 'var(--on-dark-outline-transparent-secondary)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondaryHover = 'var(--on-dark-outline-transparent-secondary-hover)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondaryActive = 'var(--on-dark-outline-transparent-secondary-active)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiary = 'var(--on-dark-outline-transparent-tertiary)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiaryHover = 'var(--on-dark-outline-transparent-tertiary-hover)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiaryActive = 'var(--on-dark-outline-transparent-tertiary-active)';

/** Бесцветная обводка на темном фоне */
export const onDarkOutlineClear = 'var(--on-dark-outline-clear)';

/** Бесцветная обводка на темном фоне */
export const onDarkOutlineClearHover = 'var(--on-dark-outline-clear-hover)';

/** Бесцветная обводка на темном фоне */
export const onDarkOutlineClearActive = 'var(--on-dark-outline-clear-active)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccent = 'var(--on-dark-outline-accent)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccentHover = 'var(--on-dark-outline-accent-hover)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccentActive = 'var(--on-dark-outline-accent-active)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinor = 'var(--on-dark-outline-accent-minor)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinorHover = 'var(--on-dark-outline-accent-minor-hover)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinorActive = 'var(--on-dark-outline-accent-minor-active)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccent = 'var(--on-dark-outline-transparent-accent)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccentHover = 'var(--on-dark-outline-transparent-accent-hover)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccentActive = 'var(--on-dark-outline-transparent-accent-active)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositive = 'var(--on-dark-outline-positive)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveHover = 'var(--on-dark-outline-positive-hover)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveActive = 'var(--on-dark-outline-positive-active)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarning = 'var(--on-dark-outline-warning)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningHover = 'var(--on-dark-outline-warning-hover)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningActive = 'var(--on-dark-outline-warning-active)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegative = 'var(--on-dark-outline-negative)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeHover = 'var(--on-dark-outline-negative-hover)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeActive = 'var(--on-dark-outline-negative-active)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfo = 'var(--on-dark-outline-info)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfoHover = 'var(--on-dark-outline-info-hover)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfoActive = 'var(--on-dark-outline-info-active)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinor = 'var(--on-dark-outline-positive-minor)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinorHover = 'var(--on-dark-outline-positive-minor-hover)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinorActive = 'var(--on-dark-outline-positive-minor-active)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinor = 'var(--on-dark-outline-warning-minor)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinorHover = 'var(--on-dark-outline-warning-minor-hover)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinorActive = 'var(--on-dark-outline-warning-minor-active)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinor = 'var(--on-dark-outline-negative-minor)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinorHover = 'var(--on-dark-outline-negative-minor-hover)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinorActive = 'var(--on-dark-outline-negative-minor-active)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinor = 'var(--on-dark-outline-info-minor)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinorHover = 'var(--on-dark-outline-info-minor-hover)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinorActive = 'var(--on-dark-outline-info-minor-active)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositive = 'var(--on-dark-outline-transparent-positive)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositiveHover = 'var(--on-dark-outline-transparent-positive-hover)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositiveActive = 'var(--on-dark-outline-transparent-positive-active)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarning = 'var(--on-dark-outline-transparent-warning)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarningHover = 'var(--on-dark-outline-transparent-warning-hover)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarningActive = 'var(--on-dark-outline-transparent-warning-active)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegative = 'var(--on-dark-outline-transparent-negative)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegativeHover = 'var(--on-dark-outline-transparent-negative-hover)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegativeActive = 'var(--on-dark-outline-transparent-negative-active)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfo = 'var(--on-dark-outline-transparent-info)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfoHover = 'var(--on-dark-outline-transparent-info-hover)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfoActive = 'var(--on-dark-outline-transparent-info-active)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimary = 'var(--on-light-outline-solid-primary)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimaryHover = 'var(--on-light-outline-solid-primary-hover)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimaryActive = 'var(--on-light-outline-solid-primary-active)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondary = 'var(--on-light-outline-solid-secondary)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondaryHover = 'var(--on-light-outline-solid-secondary-hover)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondaryActive = 'var(--on-light-outline-solid-secondary-active)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiary = 'var(--on-light-outline-solid-tertiary)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiaryHover = 'var(--on-light-outline-solid-tertiary-hover)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiaryActive = 'var(--on-light-outline-solid-tertiary-active)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightOutlineSolidDefault = 'var(--on-light-outline-solid-default)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightOutlineSolidDefaultHover = 'var(--on-light-outline-solid-default-hover)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightOutlineSolidDefaultActive = 'var(--on-light-outline-solid-default-active)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimary = 'var(--on-light-outline-transparent-primary)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimaryHover = 'var(--on-light-outline-transparent-primary-hover)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimaryActive = 'var(--on-light-outline-transparent-primary-active)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondary = 'var(--on-light-outline-transparent-secondary)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondaryHover = 'var(--on-light-outline-transparent-secondary-hover)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondaryActive = 'var(--on-light-outline-transparent-secondary-active)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiary = 'var(--on-light-outline-transparent-tertiary)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiaryHover = 'var(--on-light-outline-transparent-tertiary-hover)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiaryActive = 'var(--on-light-outline-transparent-tertiary-active)';

/** Бесцветная обводка на светлом фоне */
export const onLightOutlineClear = 'var(--on-light-outline-clear)';

/** Бесцветная обводка на светлом фоне */
export const onLightOutlineClearHover = 'var(--on-light-outline-clear-hover)';

/** Бесцветная обводка на светлом фоне */
export const onLightOutlineClearActive = 'var(--on-light-outline-clear-active)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccent = 'var(--on-light-outline-accent)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccentHover = 'var(--on-light-outline-accent-hover)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccentActive = 'var(--on-light-outline-accent-active)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinor = 'var(--on-light-outline-accent-minor)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinorHover = 'var(--on-light-outline-accent-minor-hover)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinorActive = 'var(--on-light-outline-accent-minor-active)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccent = 'var(--on-light-outline-transparent-accent)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccentHover = 'var(--on-light-outline-transparent-accent-hover)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccentActive = 'var(--on-light-outline-transparent-accent-active)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositive = 'var(--on-light-outline-positive)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveHover = 'var(--on-light-outline-positive-hover)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveActive = 'var(--on-light-outline-positive-active)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarning = 'var(--on-light-outline-warning)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningHover = 'var(--on-light-outline-warning-hover)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningActive = 'var(--on-light-outline-warning-active)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegative = 'var(--on-light-outline-negative)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeHover = 'var(--on-light-outline-negative-hover)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeActive = 'var(--on-light-outline-negative-active)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfo = 'var(--on-light-outline-info)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfoHover = 'var(--on-light-outline-info-hover)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfoActive = 'var(--on-light-outline-info-active)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinor = 'var(--on-light-outline-positive-minor)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinorHover = 'var(--on-light-outline-positive-minor-hover)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinorActive = 'var(--on-light-outline-positive-minor-active)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinor = 'var(--on-light-outline-warning-minor)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinorHover = 'var(--on-light-outline-warning-minor-hover)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinorActive = 'var(--on-light-outline-warning-minor-active)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinor = 'var(--on-light-outline-negative-minor)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinorHover = 'var(--on-light-outline-negative-minor-hover)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinorActive = 'var(--on-light-outline-negative-minor-active)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinor = 'var(--on-light-outline-info-minor)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinorHover = 'var(--on-light-outline-info-minor-hover)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinorActive = 'var(--on-light-outline-info-minor-active)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositive = 'var(--on-light-outline-transparent-positive)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositiveHover = 'var(--on-light-outline-transparent-positive-hover)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositiveActive = 'var(--on-light-outline-transparent-positive-active)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarning = 'var(--on-light-outline-transparent-warning)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarningHover = 'var(--on-light-outline-transparent-warning-hover)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarningActive = 'var(--on-light-outline-transparent-warning-active)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegative = 'var(--on-light-outline-transparent-negative)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegativeHover = 'var(--on-light-outline-transparent-negative-hover)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegativeActive = 'var(--on-light-outline-transparent-negative-active)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfo = 'var(--on-light-outline-transparent-info)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfoHover = 'var(--on-light-outline-transparent-info-hover)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfoActive = 'var(--on-light-outline-transparent-info-active)';

/** Инвертированный основной непрозрачный цвет обводки */
export const inverseOutlineSolidPrimary = 'var(--inverse-outline-solid-primary)';

/** Инвертированный основной непрозрачный цвет обводки */
export const inverseOutlineSolidPrimaryHover = 'var(--inverse-outline-solid-primary-hover)';

/** Инвертированный основной непрозрачный цвет обводки */
export const inverseOutlineSolidPrimaryActive = 'var(--inverse-outline-solid-primary-active)';

/** Инвертированный вторичный непрозрачный цвет обводки */
export const inverseOutlineSolidSecondary = 'var(--inverse-outline-solid-secondary)';

/** Инвертированный вторичный непрозрачный цвет обводки */
export const inverseOutlineSolidSecondaryHover = 'var(--inverse-outline-solid-secondary-hover)';

/** Инвертированный вторичный непрозрачный цвет обводки */
export const inverseOutlineSolidSecondaryActive = 'var(--inverse-outline-solid-secondary-active)';

/** Инвертированный третичный непрозрачный цвет обводки */
export const inverseOutlineSolidTertiary = 'var(--inverse-outline-solid-tertiary)';

/** Инвертированный третичный непрозрачный цвет обводки */
export const inverseOutlineSolidTertiaryHover = 'var(--inverse-outline-solid-tertiary-hover)';

/** Инвертированный третичный непрозрачный цвет обводки */
export const inverseOutlineSolidTertiaryActive = 'var(--inverse-outline-solid-tertiary-active)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseOutlineSolidDefault = 'var(--inverse-outline-solid-default)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseOutlineSolidDefaultHover = 'var(--inverse-outline-solid-default-hover)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseOutlineSolidDefaultActive = 'var(--inverse-outline-solid-default-active)';

/** Инвертированный основной прозрачный цвет обводки */
export const inverseOutlineTransparentPrimary = 'var(--inverse-outline-transparent-primary)';

/** Инвертированный основной прозрачный цвет обводки */
export const inverseOutlineTransparentPrimaryHover = 'var(--inverse-outline-transparent-primary-hover)';

/** Инвертированный основной прозрачный цвет обводки */
export const inverseOutlineTransparentPrimaryActive = 'var(--inverse-outline-transparent-primary-active)';

/** Инвертированный вторичный прозрачный цвет обводки */
export const inverseOutlineTransparentSecondary = 'var(--inverse-outline-transparent-secondary)';

/** Инвертированный вторичный прозрачный цвет обводки */
export const inverseOutlineTransparentSecondaryHover = 'var(--inverse-outline-transparent-secondary-hover)';

/** Инвертированный вторичный прозрачный цвет обводки */
export const inverseOutlineTransparentSecondaryActive = 'var(--inverse-outline-transparent-secondary-active)';

/** Инвертированный третичный прозрачный цвет обводки */
export const inverseOutlineTransparentTertiary = 'var(--inverse-outline-transparent-tertiary)';

/** Инвертированный третичный прозрачный цвет обводки */
export const inverseOutlineTransparentTertiaryHover = 'var(--inverse-outline-transparent-tertiary-hover)';

/** Инвертированный третичный прозрачный цвет обводки */
export const inverseOutlineTransparentTertiaryActive = 'var(--inverse-outline-transparent-tertiary-active)';

/** Инвертированная бесцветная обводка */
export const inverseOutlineClear = 'var(--inverse-outline-clear)';

/** Инвертированная бесцветная обводка */
export const inverseOutlineClearHover = 'var(--inverse-outline-clear-hover)';

/** Инвертированная бесцветная обводка */
export const inverseOutlineClearActive = 'var(--inverse-outline-clear-active)';

/** Инвертированный акцентный цвет обводки */
export const inverseOutlineAccent = 'var(--inverse-outline-accent)';

/** Инвертированный акцентный цвет обводки */
export const inverseOutlineAccentHover = 'var(--inverse-outline-accent-hover)';

/** Инвертированный акцентный цвет обводки */
export const inverseOutlineAccentActive = 'var(--inverse-outline-accent-active)';

/** Инвертированный акцентный минорный непрозрачный цвет обводки */
export const inverseOutlineAccentMinor = 'var(--inverse-outline-accent-minor)';

/** Инвертированный акцентный минорный непрозрачный цвет обводки */
export const inverseOutlineAccentMinorHover = 'var(--inverse-outline-accent-minor-hover)';

/** Инвертированный акцентный минорный непрозрачный цвет обводки */
export const inverseOutlineAccentMinorActive = 'var(--inverse-outline-accent-minor-active)';

/** Прозрачный инвертированный акцентный цвет обводки */
export const inverseOutlineTransparentAccent = 'var(--inverse-outline-transparent-accent)';

/** Прозрачный инвертированный акцентный цвет обводки */
export const inverseOutlineTransparentAccentHover = 'var(--inverse-outline-transparent-accent-hover)';

/** Прозрачный инвертированный акцентный цвет обводки */
export const inverseOutlineTransparentAccentActive = 'var(--inverse-outline-transparent-accent-active)';

/** Инвертированный цвет обводки успех */
export const inverseOutlinePositive = 'var(--inverse-outline-positive)';

/** Инвертированный цвет обводки успех */
export const inverseOutlinePositiveHover = 'var(--inverse-outline-positive-hover)';

/** Инвертированный цвет обводки успех */
export const inverseOutlinePositiveActive = 'var(--inverse-outline-positive-active)';

/** Инвертированный цвет обводки предупреждение */
export const inverseOutlineWarning = 'var(--inverse-outline-warning)';

/** Инвертированный цвет обводки предупреждение */
export const inverseOutlineWarningHover = 'var(--inverse-outline-warning-hover)';

/** Инвертированный цвет обводки предупреждение */
export const inverseOutlineWarningActive = 'var(--inverse-outline-warning-active)';

/** Инвертированный цвет обводки ошибка */
export const inverseOutlineNegative = 'var(--inverse-outline-negative)';

/** Инвертированный цвет обводки ошибка */
export const inverseOutlineNegativeHover = 'var(--inverse-outline-negative-hover)';

/** Инвертированный цвет обводки ошибка */
export const inverseOutlineNegativeActive = 'var(--inverse-outline-negative-active)';

/** Инвертированный цвет обводки информация */
export const inverseOutlineInfo = 'var(--inverse-outline-info)';

/** Инвертированный цвет обводки информация */
export const inverseOutlineInfoHover = 'var(--inverse-outline-info-hover)';

/** Инвертированный цвет обводки информация */
export const inverseOutlineInfoActive = 'var(--inverse-outline-info-active)';

/** Инвертированный минорный цвет обводки успех */
export const inverseOutlinePositiveMinor = 'var(--inverse-outline-positive-minor)';

/** Инвертированный минорный цвет обводки успех */
export const inverseOutlinePositiveMinorHover = 'var(--inverse-outline-positive-minor-hover)';

/** Инвертированный минорный цвет обводки успех */
export const inverseOutlinePositiveMinorActive = 'var(--inverse-outline-positive-minor-active)';

/** Инвертированный минорный цвет обводки предупреждение */
export const inverseOutlineWarningMinor = 'var(--inverse-outline-warning-minor)';

/** Инвертированный минорный цвет обводки предупреждение */
export const inverseOutlineWarningMinorHover = 'var(--inverse-outline-warning-minor-hover)';

/** Инвертированный минорный цвет обводки предупреждение */
export const inverseOutlineWarningMinorActive = 'var(--inverse-outline-warning-minor-active)';

/** Инвертированный минорный цвет обводки ошибка */
export const inverseOutlineNegativeMinor = 'var(--inverse-outline-negative-minor)';

/** Инвертированный минорный цвет обводки ошибка */
export const inverseOutlineNegativeMinorHover = 'var(--inverse-outline-negative-minor-hover)';

/** Инвертированный минорный цвет обводки ошибка */
export const inverseOutlineNegativeMinorActive = 'var(--inverse-outline-negative-minor-active)';

/** Инвертированный минорный цвет обводки информация */
export const inverseOutlineInfoMinor = 'var(--inverse-outline-info-minor)';

/** Инвертированный минорный цвет обводки информация */
export const inverseOutlineInfoMinorHover = 'var(--inverse-outline-info-minor-hover)';

/** Инвертированный минорный цвет обводки информация */
export const inverseOutlineInfoMinorActive = 'var(--inverse-outline-info-minor-active)';

/** Прозрачный инвертированный цвет обводки успех */
export const inverseOutlineTransparentPositive = 'var(--inverse-outline-transparent-positive)';

/** Прозрачный инвертированный цвет обводки успех */
export const inverseOutlineTransparentPositiveHover = 'var(--inverse-outline-transparent-positive-hover)';

/** Прозрачный инвертированный цвет обводки успех */
export const inverseOutlineTransparentPositiveActive = 'var(--inverse-outline-transparent-positive-active)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentWarning = 'var(--inverse-outline-transparent-warning)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentWarningHover = 'var(--inverse-outline-transparent-warning-hover)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentWarningActive = 'var(--inverse-outline-transparent-warning-active)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentNegative = 'var(--inverse-outline-transparent-negative)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentNegativeHover = 'var(--inverse-outline-transparent-negative-hover)';

/** Прозрачный инвертированный цвет обводки предупреждение */
export const inverseOutlineTransparentNegativeActive = 'var(--inverse-outline-transparent-negative-active)';

/** Прозрачный инвертированный цвет обводки информация */
export const inverseOutlineTransparentInfo = 'var(--inverse-outline-transparent-info)';

/** Прозрачный инвертированный цвет обводки информация */
export const inverseOutlineTransparentInfoHover = 'var(--inverse-outline-transparent-info-hover)';

/** Прозрачный инвертированный цвет обводки информация */
export const inverseOutlineTransparentInfoActive = 'var(--inverse-outline-transparent-info-active)';

/** Фон для скелетона */
export const surfaceSkeletonGradient = 'var(--surface-skeleton-gradient)';

/** Фон для скелетона */
export const surfaceSkeletonGradientHover = 'var(--surface-skeleton-gradient-hover)';

/** Фон для скелетона */
export const surfaceSkeletonGradientActive = 'var(--surface-skeleton-gradient-active)';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradient = 'var(--surface-skeleton-deep-gradient)';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradientHover = 'var(--surface-skeleton-deep-gradient-hover)';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradientActive = 'var(--surface-skeleton-deep-gradient-active)';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradient = 'var(--on-dark-surface-skeleton-gradient)';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradientHover = 'var(--on-dark-surface-skeleton-gradient-hover)';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradientActive = 'var(--on-dark-surface-skeleton-gradient-active)';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradient = 'var(--on-dark-surface-skeleton-deep-gradient)';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradientHover = 'var(--on-dark-surface-skeleton-deep-gradient-hover)';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradientActive = 'var(--on-dark-surface-skeleton-deep-gradient-active)';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradient = 'var(--on-light-surface-skeleton-gradient)';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradientHover = 'var(--on-light-surface-skeleton-gradient-hover)';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradientActive = 'var(--on-light-surface-skeleton-gradient-active)';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradient = 'var(--on-light-surface-skeleton-deep-gradient)';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradientHover = 'var(--on-light-surface-skeleton-deep-gradient-hover)';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradientActive = 'var(--on-light-surface-skeleton-deep-gradient-active)';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradient = 'var(--inverse-surface-skeleton-gradient)';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradientHover = 'var(--inverse-surface-skeleton-gradient-hover)';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradientActive = 'var(--inverse-surface-skeleton-gradient-active)';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradient = 'var(--inverse-surface-skeleton-deep-gradient)';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradientHover = 'var(--inverse-surface-skeleton-deep-gradient-hover)';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradientActive = 'var(--inverse-surface-skeleton-deep-gradient-active)';

/** shadow down soft s */
export const shadowDownSoftS = 'var(--shadow-down-soft-s)';

/** shadow down soft m */
export const shadowDownSoftM = 'var(--shadow-down-soft-m)';

/** shadow down soft l */
export const shadowDownSoftL = 'var(--shadow-down-soft-l)';

/** shadow down hard s */
export const shadowDownHardS = 'var(--shadow-down-hard-s)';

/** shadow down hard m */
export const shadowDownHardM = 'var(--shadow-down-hard-m)';

/** shadow down hard l */
export const shadowDownHardL = 'var(--shadow-down-hard-l)';

/** shadow up soft s */
export const shadowUpSoftS = 'var(--shadow-up-soft-s)';

/** shadow up soft m */
export const shadowUpSoftM = 'var(--shadow-up-soft-m)';

/** shadow up soft l */
export const shadowUpSoftL = 'var(--shadow-up-soft-l)';

/** shadow up hard s */
export const shadowUpHardS = 'var(--shadow-up-hard-s)';

/** shadow up hard m */
export const shadowUpHardM = 'var(--shadow-up-hard-m)';

/** shadow up hard l */
export const shadowUpHardL = 'var(--shadow-up-hard-l)';

/** borderRadius xxs */
export const borderRadiusXxs = 'var(--border-radius-xxs)';

/** borderRadius xs */
export const borderRadiusXs = 'var(--border-radius-xs)';

/** borderRadius s */
export const borderRadiusS = 'var(--border-radius-s)';

/** borderRadius m */
export const borderRadiusM = 'var(--border-radius-m)';

/** borderRadius l */
export const borderRadiusL = 'var(--border-radius-l)';

/** borderRadius xl */
export const borderRadiusXl = 'var(--border-radius-xl)';

/** borderRadius xxl */
export const borderRadiusXxl = 'var(--border-radius-xxl)';

/** spacing 0x */
export const spacing0x = 'var(--spacing-0x)';

/** spacing 1x */
export const spacing1x = 'var(--spacing-1x)';

/** spacing 2x */
export const spacing2x = 'var(--spacing-2x)';

/** spacing 3x */
export const spacing3x = 'var(--spacing-3x)';

/** spacing 4x */
export const spacing4x = 'var(--spacing-4x)';

/** spacing 6x */
export const spacing6x = 'var(--spacing-6x)';

/** spacing 8x */
export const spacing8x = 'var(--spacing-8x)';

/** spacing 10x */
export const spacing10x = 'var(--spacing-10x)';

/** spacing 12x */
export const spacing12x = 'var(--spacing-12x)';

/** spacing 16x */
export const spacing16x = 'var(--spacing-16x)';

/** spacing 20x */
export const spacing20x = 'var(--spacing-20x)';

/** spacing 24x */
export const spacing24x = 'var(--spacing-24x)';

/** spacing 32x */
export const spacing32x = 'var(--spacing-32x)';

/** spacing 40x */
export const spacing40x = 'var(--spacing-40x)';

/** spacing 60x */
export const spacing60x = 'var(--spacing-60x)';

/** typography s display-l */
export const dsplL = {
    fontFamily: 'var(--plasma-typo-dspl-l-font-family)',
    fontSize: 'var(--plasma-typo-dspl-l-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-l-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-l-line-height)',
};

/** typography s display-l-bold */
export const dsplLBold = {
    fontFamily: 'var(--plasma-typo-dspl-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-l-bold-line-height)',
};

/** typography s display-m */
export const dsplM = {
    fontFamily: 'var(--plasma-typo-dspl-m-font-family)',
    fontSize: 'var(--plasma-typo-dspl-m-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-m-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-m-line-height)',
};

/** typography s display-m-bold */
export const dsplMBold = {
    fontFamily: 'var(--plasma-typo-dspl-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-m-bold-line-height)',
};

/** typography s display-s */
export const dsplS = {
    fontFamily: 'var(--plasma-typo-dspl-s-font-family)',
    fontSize: 'var(--plasma-typo-dspl-s-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-s-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-s-line-height)',
};

/** typography s display-s-bold */
export const dsplSBold = {
    fontFamily: 'var(--plasma-typo-dspl-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-s-bold-line-height)',
};

/** typography s header-h1 */
export const h1 = {
    fontFamily: 'var(--plasma-typo-h1-font-family)',
    fontSize: 'var(--plasma-typo-h1-font-size)',
    fontStyle: 'var(--plasma-typo-h1-font-style)',
    fontWeight: 'var(--plasma-typo-h1-font-weight)',
    letterSpacing: 'var(--plasma-typo-h1-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h1-line-height)',
};

/** typography s header-h1-bold */
export const h1Bold = {
    fontFamily: 'var(--plasma-typo-h1-bold-font-family)',
    fontSize: 'var(--plasma-typo-h1-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h1-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h1-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h1-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h1-bold-line-height)',
};

/** typography s header-h2 */
export const h2 = {
    fontFamily: 'var(--plasma-typo-h2-font-family)',
    fontSize: 'var(--plasma-typo-h2-font-size)',
    fontStyle: 'var(--plasma-typo-h2-font-style)',
    fontWeight: 'var(--plasma-typo-h2-font-weight)',
    letterSpacing: 'var(--plasma-typo-h2-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h2-line-height)',
};

/** typography s header-h2-bold */
export const h2Bold = {
    fontFamily: 'var(--plasma-typo-h2-bold-font-family)',
    fontSize: 'var(--plasma-typo-h2-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h2-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h2-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h2-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h2-bold-line-height)',
};

/** typography s header-h3 */
export const h3 = {
    fontFamily: 'var(--plasma-typo-h3-font-family)',
    fontSize: 'var(--plasma-typo-h3-font-size)',
    fontStyle: 'var(--plasma-typo-h3-font-style)',
    fontWeight: 'var(--plasma-typo-h3-font-weight)',
    letterSpacing: 'var(--plasma-typo-h3-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h3-line-height)',
};

/** typography s header-h3-bold */
export const h3Bold = {
    fontFamily: 'var(--plasma-typo-h3-bold-font-family)',
    fontSize: 'var(--plasma-typo-h3-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h3-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h3-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h3-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h3-bold-line-height)',
};

/** typography s header-h4 */
export const h4 = {
    fontFamily: 'var(--plasma-typo-h4-font-family)',
    fontSize: 'var(--plasma-typo-h4-font-size)',
    fontStyle: 'var(--plasma-typo-h4-font-style)',
    fontWeight: 'var(--plasma-typo-h4-font-weight)',
    letterSpacing: 'var(--plasma-typo-h4-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h4-line-height)',
};

/** typography s header-h4-bold */
export const h4Bold = {
    fontFamily: 'var(--plasma-typo-h4-bold-font-family)',
    fontSize: 'var(--plasma-typo-h4-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h4-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h4-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h4-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h4-bold-line-height)',
};

/** typography s header-h5 */
export const h5 = {
    fontFamily: 'var(--plasma-typo-h5-font-family)',
    fontSize: 'var(--plasma-typo-h5-font-size)',
    fontStyle: 'var(--plasma-typo-h5-font-style)',
    fontWeight: 'var(--plasma-typo-h5-font-weight)',
    letterSpacing: 'var(--plasma-typo-h5-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h5-line-height)',
};

/** typography s header-h5-bold */
export const h5Bold = {
    fontFamily: 'var(--plasma-typo-h5-bold-font-family)',
    fontSize: 'var(--plasma-typo-h5-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h5-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h5-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h5-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h5-bold-line-height)',
};

/** typography s body-l */
export const bodyL = {
    fontFamily: 'var(--plasma-typo-body-l-font-family)',
    fontSize: 'var(--plasma-typo-body-l-font-size)',
    fontStyle: 'var(--plasma-typo-body-l-font-style)',
    fontWeight: 'var(--plasma-typo-body-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-l-line-height)',
};

/** typography s body-l-bold */
export const bodyLBold = {
    fontFamily: 'var(--plasma-typo-body-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-l-bold-line-height)',
};

/** typography s body-m */
export const bodyM = {
    fontFamily: 'var(--plasma-typo-body-m-font-family)',
    fontSize: 'var(--plasma-typo-body-m-font-size)',
    fontStyle: 'var(--plasma-typo-body-m-font-style)',
    fontWeight: 'var(--plasma-typo-body-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-m-line-height)',
};

/** typography s body-m-bold */
export const bodyMBold = {
    fontFamily: 'var(--plasma-typo-body-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-m-bold-line-height)',
};

/** typography s body-s */
export const bodyS = {
    fontFamily: 'var(--plasma-typo-body-s-font-family)',
    fontSize: 'var(--plasma-typo-body-s-font-size)',
    fontStyle: 'var(--plasma-typo-body-s-font-style)',
    fontWeight: 'var(--plasma-typo-body-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-s-line-height)',
};

/** typography s body-s-bold */
export const bodySBold = {
    fontFamily: 'var(--plasma-typo-body-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-s-bold-line-height)',
};

/** typography s body-xs */
export const bodyXS = {
    fontFamily: 'var(--plasma-typo-body-xs-font-family)',
    fontSize: 'var(--plasma-typo-body-xs-font-size)',
    fontStyle: 'var(--plasma-typo-body-xs-font-style)',
    fontWeight: 'var(--plasma-typo-body-xs-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xs-line-height)',
};

/** typography s body-xs-bold */
export const bodyXSBold = {
    fontFamily: 'var(--plasma-typo-body-xs-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-xs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-xs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-xs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xs-bold-line-height)',
};

/** typography s body-xxs */
export const bodyXXS = {
    fontFamily: 'var(--plasma-typo-body-xxs-font-family)',
    fontSize: 'var(--plasma-typo-body-xxs-font-size)',
    fontStyle: 'var(--plasma-typo-body-xxs-font-style)',
    fontWeight: 'var(--plasma-typo-body-xxs-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xxs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xxs-line-height)',
};

/** typography s body-xxs-bold */
export const bodyXXSBold = {
    fontFamily: 'var(--plasma-typo-body-xxs-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-xxs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-xxs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-xxs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xxs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xxs-bold-line-height)',
};

/** typography s text-l */
export const textL = {
    fontFamily: 'var(--plasma-typo-text-l-font-family)',
    fontSize: 'var(--plasma-typo-text-l-font-size)',
    fontStyle: 'var(--plasma-typo-text-l-font-style)',
    fontWeight: 'var(--plasma-typo-text-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-l-line-height)',
};

/** typography s text-l-bold */
export const textLBold = {
    fontFamily: 'var(--plasma-typo-text-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-l-bold-line-height)',
};

/** typography s text-m */
export const textM = {
    fontFamily: 'var(--plasma-typo-text-m-font-family)',
    fontSize: 'var(--plasma-typo-text-m-font-size)',
    fontStyle: 'var(--plasma-typo-text-m-font-style)',
    fontWeight: 'var(--plasma-typo-text-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-m-line-height)',
};

/** typography s text-m-bold */
export const textMBold = {
    fontFamily: 'var(--plasma-typo-text-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-m-bold-line-height)',
};

/** typography s text-s */
export const textS = {
    fontFamily: 'var(--plasma-typo-text-s-font-family)',
    fontSize: 'var(--plasma-typo-text-s-font-size)',
    fontStyle: 'var(--plasma-typo-text-s-font-style)',
    fontWeight: 'var(--plasma-typo-text-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-s-line-height)',
};

/** typography s text-s-bold */
export const textSBold = {
    fontFamily: 'var(--plasma-typo-text-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-s-bold-line-height)',
};

/** typography s text-xs */
export const textXS = {
    fontFamily: 'var(--plasma-typo-text-xs-font-family)',
    fontSize: 'var(--plasma-typo-text-xs-font-size)',
    fontStyle: 'var(--plasma-typo-text-xs-font-style)',
    fontWeight: 'var(--plasma-typo-text-xs-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-xs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-xs-line-height)',
};

/** typography s text-xs-bold */
export const textXSBold = {
    fontFamily: 'var(--plasma-typo-text-xs-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-xs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-xs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-xs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-xs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-xs-bold-line-height)',
};
