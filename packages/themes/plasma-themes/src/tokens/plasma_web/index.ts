// Generated by robots, do not change this manually!

/** Основной цвет текста */
export const textPrimaryHover = 'var(--text-primary-hover, #FFFFFF93)';

/** Основной цвет текста */
export const textPrimaryActive = 'var(--text-primary-active, #FFFFFFC4)';

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary, #FFFFFFF5)';

/** Основной цвет текста */
export const textPrimaryBrightness = 'var(--text-primary-brightness, #FFFFFFF5)';

/** Вторичный цвет текста */
export const textSecondaryHover = 'var(--text-secondary-hover, #FFFFFFFF)';

/** Вторичный цвет текста */
export const textSecondaryActive = 'var(--text-secondary-active, #FFFFFFAB)';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary, #FFFFFF8F)';

/** Третичный цвет текста */
export const textTertiaryHover = 'var(--text-tertiary-hover, #FFFFFFFF)';

/** Третичный цвет текста */
export const textTertiaryActive = 'var(--text-tertiary-active, #FFFFFF56)';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary, #FFFFFF47)';

/** Сплошной наборный текст */
export const textParagraphHover = 'var(--text-paragraph-hover, #FFFFFF7A)';

/** Сплошной наборный текст */
export const textParagraphActive = 'var(--text-paragraph-active, #FFFFFFA3)';

/** Сплошной наборный текст */
export const textParagraph = 'var(--text-paragraph, #FFFFFFCC)';

/** Акцентный цвет */
export const textAccentHover = 'var(--text-accent-hover, #A3C3FFFF)';

/** Акцентный цвет */
export const textAccentActive = 'var(--text-accent-active, #337AFFFF)';

/** Акцентный минорный цвет */
export const textAccentMinorHover = 'var(--text-accent-minor-hover, #FFFFFFFF)';

/** Акцентный минорный цвет */
export const textAccentMinorActive = 'var(--text-accent-minor-active, #1C62E3FF)';

/** Цвет успеха */
export const textPositiveHover = 'var(--text-positive-hover, #2ACB47FF)';

/** Цвет успеха */
export const textPositiveActive = 'var(--text-positive-active, #1F9835FF)';

/** Цвет предупреждения */
export const textWarningHover = 'var(--text-warning-hover, #FF8442FF)';

/** Цвет предупреждения */
export const textWarningActive = 'var(--text-warning-active, #FF5D05FF)';

/** Цвет ошибки */
export const textNegativeHover = 'var(--text-negative-hover, #FF5C6CFF)';

/** Цвет ошибки */
export const textNegativeActive = 'var(--text-negative-active, #FF1F35FF)';

/** Цвет информации */
export const textInfoHover = 'var(--text-info-hover, #A3C3FFFF)';

/** Цвет информации */
export const textInfoActive = 'var(--text-info-active, #337AFFFF)';

/** Минорный цвет успеха */
export const textPositiveMinorHover = 'var(--text-positive-minor-hover, #0F9527FF)';

/** Минорный цвет успеха */
export const textPositiveMinorActive = 'var(--text-positive-minor-active, #0C7920FF)';

/** Минорный цвет предупреждения */
export const textWarningMinorHover = 'var(--text-warning-minor-hover, #BB4F11FF)';

/** Минорный цвет предупреждения */
export const textWarningMinorActive = 'var(--text-warning-minor-active, #9F440FFF)';

/** Минорный цвет ошибки */
export const textNegativeMinorHover = 'var(--text-negative-minor-hover, #B91828FF)';

/** Минорный цвет ошибки */
export const textNegativeMinorActive = 'var(--text-negative-minor-active, #83111CFF)';

/** Минорный цвет информации */
export const textInfoMinorHover = 'var(--text-info-minor-hover, #FFFFFFFF)';

/** Минорный цвет информации */
export const textInfoMinorActive = 'var(--text-info-minor-active, #1C62E3FF)';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent, #528EFF)';

/** Акцентный минорный цвет */
export const textAccentMinor = 'var(--text-accent-minor, #1549AB)';

/** Цвет успеха */
export const textPositive = 'var(--text-positive, #24B23E)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning, #FF7024)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative, #FF3D51)';

/** Минорный цвет успеха */
export const textPositiveMinor = 'var(--text-positive-minor, #095C18)';

/** Минорный цвет предупреждения */
export const textWarningMinor = 'var(--text-warning-minor, #85380C)';

/** Минорный цвет ошибки */
export const textNegativeMinor = 'var(--text-negative-minor, #9C1422)';

/** Цвет информации */
export const textInfo = 'var(--text-info, #528EFF)';

/** Минорный цвет информации */
export const textInfoMinor = 'var(--text-info-minor, #1549AB)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryHover = 'var(--on-dark-text-primary-hover, #FFFFFF93)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryActive = 'var(--on-dark-text-primary-active, #FFFFFFC4)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary, #FFFFFFF5)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryBrightness = 'var(--on-dark-text-primary-brightness, #FFFFFFF5)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryHover = 'var(--on-dark-text-secondary-hover, #FFFFFFFF)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryActive = 'var(--on-dark-text-secondary-active, #FFFFFFAB)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary, #FFFFFF8F)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryHover = 'var(--on-dark-text-tertiary-hover, #FFFFFFFF)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryActive = 'var(--on-dark-text-tertiary-active, #FFFFFF56)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary, #FFFFFF47)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphHover = 'var(--on-dark-text-paragraph-hover, #FFFFFF7A)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphActive = 'var(--on-dark-text-paragraph-active, #FFFFFFA3)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraph = 'var(--on-dark-text-paragraph, #FFFFFFCC)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentHover = 'var(--on-dark-text-accent-hover, #90B6FEFF)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentActive = 'var(--on-dark-text-accent-active, #216EFDFF)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccent = 'var(--on-dark-text-accent, #3F81FD)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinorHover = 'var(--on-dark-text-accent-minor-hover, #FFFFFFFF)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinorActive = 'var(--on-dark-text-accent-minor-active, #1C62E3FF)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveHover = 'var(--on-dark-text-positive-hover, #2ACB47FF)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveActive = 'var(--on-dark-text-positive-active, #1F9835FF)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningHover = 'var(--on-dark-text-warning-hover, #FF8442FF)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningActive = 'var(--on-dark-text-warning-active, #FF5D05FF)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeHover = 'var(--on-dark-text-negative-hover, #FF5C6CFF)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeActive = 'var(--on-dark-text-negative-active, #FF1F35FF)';

/** Цвет информации на темном фоне */
export const onDarkTextInfoHover = 'var(--on-dark-text-info-hover, #A3C3FFFF)';

/** Цвет информации на темном фоне */
export const onDarkTextInfoActive = 'var(--on-dark-text-info-active, #337AFFFF)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinorHover = 'var(--on-dark-text-positive-minor-hover, #0F9527FF)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinorActive = 'var(--on-dark-text-positive-minor-active, #0C7920FF)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinorHover = 'var(--on-dark-text-warning-minor-hover, #BB4F11FF)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinorActive = 'var(--on-dark-text-warning-minor-active, #9F440FFF)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinorHover = 'var(--on-dark-text-negative-minor-hover, #B91828FF)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinorActive = 'var(--on-dark-text-negative-minor-active, #83111CFF)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinorHover = 'var(--on-dark-text-info-minor-hover, #FFFFFFFF)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinorActive = 'var(--on-dark-text-info-minor-active, #1C62E3FF)';

/** Акцентный минорный цвет на темном фоне */
export const onDarkTextAccentMinor = 'var(--on-dark-text-accent-minor, #1549AB)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositive = 'var(--on-dark-text-positive, #24B23E)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarning = 'var(--on-dark-text-warning, #FF7024)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegative = 'var(--on-dark-text-negative, #FF3D51)';

/** Минорный цвет успеха на темном фоне */
export const onDarkTextPositiveMinor = 'var(--on-dark-text-positive-minor, #095C18)';

/** Минорный цвет предупреждения на темном фоне */
export const onDarkTextWarningMinor = 'var(--on-dark-text-warning-minor, #85380C)';

/** Минорный цвет ошибки на темном фоне */
export const onDarkTextNegativeMinor = 'var(--on-dark-text-negative-minor, #9C1422)';

/** Цвет информации на темном фоне */
export const onDarkTextInfo = 'var(--on-dark-text-info, #528EFF)';

/** Минорный цвет информации на темном фоне */
export const onDarkTextInfoMinor = 'var(--on-dark-text-info-minor, #1549AB)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryHover = 'var(--on-light-text-primary-hover, #08080893)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryActive = 'var(--on-light-text-primary-active, #080808C4)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary, #080808F5)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryBrightness = 'var(--on-light-text-primary-brightness, #080808F5)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryHover = 'var(--on-light-text-secondary-hover, #080808FF)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryActive = 'var(--on-light-text-secondary-active, #080808AB)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary, #0808088F)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryHover = 'var(--on-light-text-tertiary-hover, #080808FF)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryActive = 'var(--on-light-text-tertiary-active, #08080856)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary, #08080847)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphHover = 'var(--on-light-text-paragraph-hover, #0808087A)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphActive = 'var(--on-light-text-paragraph-active, #080808A3)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraph = 'var(--on-light-text-paragraph, #080808CC)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentHover = 'var(--on-light-text-accent-hover, #79A7FBFF)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentActive = 'var(--on-light-text-accent-active, #0D5FF8FF)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccent = 'var(--on-light-text-accent, #2A72F8)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinorHover = 'var(--on-light-text-accent-minor-hover, #DCE8FEFF)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinorActive = 'var(--on-light-text-accent-minor-active, #6FA0FBFF)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveHover = 'var(--on-light-text-positive-hover, #13AA2CFF)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveActive = 'var(--on-light-text-positive-active, #0D731EFF)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningHover = 'var(--on-light-text-warning-hover, #FD650DFF)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningActive = 'var(--on-light-text-warning-active, #CA4B02FF)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeHover = 'var(--on-light-text-negative-hover, #F5384BFF)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeActive = 'var(--on-light-text-negative-active, #E40C22FF)';

/** Цвет информации на светлом фоне */
export const onLightTextInfoHover = 'var(--on-light-text-info-hover, #79A7FBFF)';

/** Цвет информации на светлом фоне */
export const onLightTextInfoActive = 'var(--on-light-text-info-active, #0D5FF8FF)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinorHover = 'var(--on-light-text-positive-minor-hover, #3EDA5BFF)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinorActive = 'var(--on-light-text-positive-minor-active, #23B83EFF)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinorHover = 'var(--on-light-text-warning-minor-hover, #FDB086FF)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinorActive = 'var(--on-light-text-warning-minor-active, #FC884AFF)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinorHover = 'var(--on-light-text-negative-minor-hover, #FFADB6FF)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinorActive = 'var(--on-light-text-negative-minor-active, #FF707EFF)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinorHover = 'var(--on-light-text-info-minor-hover, #DCE8FEFF)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinorActive = 'var(--on-light-text-info-minor-active, #6FA0FBFF)';

/** Акцентный минорный цвет на светлом фоне */
export const onLightTextAccentMinor = 'var(--on-light-text-accent-minor, #8BB2FC)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositive = 'var(--on-light-text-positive, #108E26)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarning = 'var(--on-light-text-warning, #E85702)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegative = 'var(--on-light-text-negative, #F31B31)';

/** Минорный цвет успеха на светлом фоне */
export const onLightTextPositiveMinor = 'var(--on-light-text-positive-minor, #28D247)';

/** Минорный цвет предупреждения на светлом фоне */
export const onLightTextWarningMinor = 'var(--on-light-text-warning-minor, #FD9C68)';

/** Минорный цвет ошибки на светлом фоне */
export const onLightTextNegativeMinor = 'var(--on-light-text-negative-minor, #FF8F9A)';

/** Цвет информации на светлом фоне */
export const onLightTextInfo = 'var(--on-light-text-info, #2A72F8)';

/** Минорный цвет информации на светлом фоне */
export const onLightTextInfoMinor = 'var(--on-light-text-info-minor, #8BB2FC)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryHover = 'var(--inverse-text-primary-hover, #08080893)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryActive = 'var(--inverse-text-primary-active, #080808C4)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimary = 'var(--inverse-text-primary, #080808F5)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimaryBrightness = 'var(--inverse-text-primary-brightness, #080808F5)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondaryHover = 'var(--inverse-text-secondary-hover, #080808FF)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondaryActive = 'var(--inverse-text-secondary-active, #080808AB)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondary = 'var(--inverse-text-secondary, #0808088F)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiaryHover = 'var(--inverse-text-tertiary-hover, #080808FF)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiaryActive = 'var(--inverse-text-tertiary-active, #08080856)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiary = 'var(--inverse-text-tertiary, #08080847)';

/** Инвертированный cплошной наборный текст */
export const inverseTextParagraphHover = 'var(--inverse-text-paragraph-hover, #0808087A)';

/** Инвертированный cплошной наборный текст */
export const inverseTextParagraphActive = 'var(--inverse-text-paragraph-active, #080808A3)';

/** Инвертированный cплошной наборный текст */
export const inverseTextParagraph = 'var(--inverse-text-paragraph, #080808CC)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryHover = 'var(--surface-solid-primary-hover, #1C1C1CFF)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryActive = 'var(--surface-solid-primary-active, #121212FF)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary, #171717)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryBrightness = 'var(--surface-solid-primary-brightness, #262626FF)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryHover = 'var(--surface-solid-secondary-hover, #303030FF)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryActive = 'var(--surface-solid-secondary-active, #212121FF)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary, #262626)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryHover = 'var(--surface-solid-tertiary-hover, #404040FF)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryActive = 'var(--surface-solid-tertiary-active, #303030FF)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary, #363636)';

/** Основной фон для карточек */
export const surfaceSolidCardHover = 'var(--surface-solid-card-hover, #1C1C1CFF)';

/** Основной фон для карточек */
export const surfaceSolidCardActive = 'var(--surface-solid-card-active, #121212FF)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card, #171717)';

/** Основной фон для карточек */
export const surfaceSolidCardBrightness = 'var(--surface-solid-card-brightness, #262626FF)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultHover = 'var(--surface-solid-default-hover, #FFFFFFFF)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultActive = 'var(--surface-solid-default-active, #FFFFFFFF)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default, #FFFFFFFF)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryHover = 'var(--surface-transparent-primary-hover, #FFFFFF1F)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryActive = 'var(--surface-transparent-primary-active, #FFFFFF0A)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimary = 'var(--surface-transparent-primary, #FFFFFF0F)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryHover = 'var(--surface-transparent-secondary-hover, #FFFFFF3D)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryActive = 'var(--surface-transparent-secondary-active, #FFFFFF0F)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondary = 'var(--surface-transparent-secondary, #FFFFFF1F)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryHover = 'var(--surface-transparent-tertiary-hover, #FFFFFF52)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryActive = 'var(--surface-transparent-tertiary-active, #FFFFFF24)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, #FFFFFF33)';

/** dark surface default surfaceTransparentDeepHover */
export const surfaceTransparentDeepHover = 'var(--surface-transparent-deep-hover, #FFFFFFC2)';

/** dark surface default surfaceTransparentDeepActive */
export const surfaceTransparentDeepActive = 'var(--surface-transparent-deep-active, #FFFFFF94)';

/** dark surface default surfaceTransparentDeep */
export const surfaceTransparentDeep = 'var(--surface-transparent-deep, #FFFFFFA3)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardHover = 'var(--surface-transparent-card-hover, #FFFFFF3D)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardActive = 'var(--surface-transparent-card-active, #FFFFFF0F)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCard = 'var(--surface-transparent-card, #FFFFFF1F)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardBrightness = 'var(--surface-transparent-card-brightness, #FFFFFF1F)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearHover = 'var(--surface-clear-hover, #FFFFFF00)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearActive = 'var(--surface-clear-active, #FFFFFF00)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear, #FFFFFF00)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentHover = 'var(--surface-accent-hover, #5D95FDFF)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentActive = 'var(--surface-accent-active, #357BFDFF)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent, #3F81FD)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinorHover = 'var(--surface-accent-minor-hover, #0A2A67FF)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinorActive = 'var(--surface-accent-minor-active, #071F4BFF)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccentHover = 'var(--surface-transparent-accent-hover, #3F82FD52)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccentActive = 'var(--surface-transparent-accent-active, #3F82FD24)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveHover = 'var(--surface-positive-hover, #1DAF37FF)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveActive = 'var(--surface-positive-active, #18952FFF)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningHover = 'var(--surface-warning-hover, #FB7223FF)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningActive = 'var(--surface-warning-active, #F05B05FF)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeHover = 'var(--surface-negative-hover, #FF475AFF)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeActive = 'var(--surface-negative-active, #FF1F35FF)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative, #FF293E)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfoHover = 'var(--surface-info-hover, #5D95FDFF)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfoActive = 'var(--surface-info-active, #357BFDFF)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinorHover = 'var(--surface-positive-minor-hover, #0E3A16FF)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinorActive = 'var(--surface-positive-minor-active, #08210CFF)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinorHover = 'var(--surface-warning-minor-hover, #4F250DFF)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinorActive = 'var(--surface-warning-minor-active, #351909FF)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinorHover = 'var(--surface-negative-minor-hover, #5B1018FF)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinorActive = 'var(--surface-negative-minor-active, #410B11FF)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinorHover = 'var(--surface-info-minor-hover, #0A2A67FF)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinorActive = 'var(--surface-info-minor-active, #071F4BFF)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositiveHover = 'var(--surface-transparent-positive-hover, #1A9E3252)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositiveActive = 'var(--surface-transparent-positive-active, #1A9E3224)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarningHover = 'var(--surface-transparent-warning-hover, #FA5F0552)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarningActive = 'var(--surface-transparent-warning-active, #FA5F0524)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegativeHover = 'var(--surface-transparent-negative-hover, #FF293E52)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegativeActive = 'var(--surface-transparent-negative-active, #FF293E24)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfoHover = 'var(--surface-transparent-info-hover, #3F82FD52)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfoActive = 'var(--surface-transparent-info-active, #3F82FD24)';

/** Акцентный минорный непрозрачный фон поверхности/контрола */
export const surfaceAccentMinor = 'var(--surface-accent-minor, #082254)';

/** Минорный цвет фона поверхности/контрола успех */
export const surfacePositiveMinor = 'var(--surface-positive-minor, #0A2B10)';

/** Минорный цвет фона поверхности/контрола предупреждение */
export const surfaceWarningMinor = 'var(--surface-warning-minor, #3D1D0A)';

/** Минорный цвет фона поверхности/контрола ошибка */
export const surfaceNegativeMinor = 'var(--surface-negative-minor, #4A0D13)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositive = 'var(--surface-transparent-positive, #1A9E3233)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarning = 'var(--surface-transparent-warning, #FA5F0533)';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentNegative = 'var(--surface-transparent-negative, #FF293E33)';

/** Цвет фона поверхности/контрола информация */
export const surfaceInfo = 'var(--surface-info, #3F81FD)';

/** Минорный цвет фона поверхности/контрола информация */
export const surfaceInfoMinor = 'var(--surface-info-minor, #082254)';

/** Прозрачный акцентный фон поверхности/контрола */
export const surfaceTransparentAccent = 'var(--surface-transparent-accent, #3F81FD33)';

/** Прозрачный цвет фона поверхности/контрола информация */
export const surfaceTransparentInfo = 'var(--surface-transparent-info, #3F81FD33)';

/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryHover = 'var(--on-dark-surface-solid-primary-hover, #1C1C1CFF)';

/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryActive = 'var(--on-dark-surface-solid-primary-active, #121212FF)';

/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #171717)';

/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryBrightness = 'var(--on-dark-surface-solid-primary-brightness, #262626FF)';

/** Вторичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryHover = 'var(--on-dark-surface-solid-secondary-hover, #303030FF)';

/** Вторичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryActive = 'var(--on-dark-surface-solid-secondary-active, #212121FF)';

/** Вторичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #262626)';

/** Третичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryHover = 'var(--on-dark-surface-solid-tertiary-hover, #404040FF)';

/** Третичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryActive = 'var(--on-dark-surface-solid-tertiary-active, #303030FF)';

/** Третичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #363636)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardHover = 'var(--on-dark-surface-solid-card-hover, #1C1C1CFF)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardActive = 'var(--on-dark-surface-solid-card-active, #121212FF)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #171717)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardBrightness = 'var(--on-dark-surface-solid-card-brightness, #262626FF)';

/** Непр. фон поверхности/контрола по умолчанию на тем. фоне */
export const onDarkSurfaceSolidDefaultHover = 'var(--on-dark-surface-solid-default-hover, #FFFFFFFF)';

/** Непр. фон поверхности/контрола по умолчанию на тем. фоне */
export const onDarkSurfaceSolidDefaultActive = 'var(--on-dark-surface-solid-default-active, #FFFFFFFF)';

/** Непр. фон поверхности/контрола по умолчанию на тем. фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFFFF)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryHover = 'var(--on-dark-surface-transparent-primary-hover, #FFFFFF1F)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryActive = 'var(--on-dark-surface-transparent-primary-active, #FFFFFF0A)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, #FFFFFF0F)';

/** Вторичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryHover = 'var(--on-dark-surface-transparent-secondary-hover, #FFFFFF3D)';

/** Вторичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryActive = 'var(--on-dark-surface-transparent-secondary-active, #FFFFFF0F)';

/** Вторичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, #FFFFFF1F)';

/** Третичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryHover = 'var(--on-dark-surface-transparent-tertiary-hover, #FFFFFF52)';

/** Третичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryActive = 'var(--on-dark-surface-transparent-tertiary-active, #FFFFFF24)';

/** Третичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, #FFFFFF33)';

/** dark surface onDark surfaceTransparentDeepHover */
export const onDarkSurfaceTransparentDeepHover = 'var(--on-dark-surface-transparent-deep-hover, #FFFFFFC2)';

/** dark surface onDark surfaceTransparentDeepActive */
export const onDarkSurfaceTransparentDeepActive = 'var(--on-dark-surface-transparent-deep-active, #FFFFFF94)';

/** dark surface onDark surfaceTransparentDeep */
export const onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep, #FFFFFFA3)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardHover = 'var(--on-dark-surface-transparent-card-hover, #FFFFFF3D)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardActive = 'var(--on-dark-surface-transparent-card-active, #FFFFFF0F)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, #FFFFFF1F)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardBrightness = 'var(--on-dark-surface-transparent-card-brightness, #FFFFFF1F)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentHover = 'var(--on-dark-surface-accent-hover, #5D95FDFF)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentActive = 'var(--on-dark-surface-accent-active, #357BFDFF)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #3F81FD)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinorHover = 'var(--on-dark-surface-accent-minor-hover, #0A2A67FF)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinorActive = 'var(--on-dark-surface-accent-minor-active, #071F4BFF)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccentHover = 'var(--on-dark-surface-transparent-accent-hover, #3F82FD52)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccentActive = 'var(--on-dark-surface-transparent-accent-active, #3F82FD24)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveHover = 'var(--on-dark-surface-positive-hover, #1DAF37FF)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveActive = 'var(--on-dark-surface-positive-active, #18952FFF)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';

/** Цвет фона поверхн./контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningHover = 'var(--on-dark-surface-warning-hover, #FB7223FF)';

/** Цвет фона поверхн./контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningActive = 'var(--on-dark-surface-warning-active, #F05B05FF)';

/** Цвет фона поверхн./контрола предупреждение на темном фоне */
export const onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeHover = 'var(--on-dark-surface-negative-hover, #FF475AFF)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeActive = 'var(--on-dark-surface-negative-active, #FF1F35FF)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoHover = 'var(--on-dark-surface-info-hover, #5D95FDFF)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoActive = 'var(--on-dark-surface-info-active, #357BFDFF)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinorHover = 'var(--on-dark-surface-positive-minor-hover, #0E3A16FF)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinorActive = 'var(--on-dark-surface-positive-minor-active, #08210CFF)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinorHover = 'var(--on-dark-surface-warning-minor-hover, #4F250DFF)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinorActive = 'var(--on-dark-surface-warning-minor-active, #351909FF)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinorHover = 'var(--on-dark-surface-negative-minor-hover, #5B1018FF)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinorActive = 'var(--on-dark-surface-negative-minor-active, #410B11FF)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinorHover = 'var(--on-dark-surface-info-minor-hover, #0A2A67FF)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinorActive = 'var(--on-dark-surface-info-minor-active, #071F4BFF)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositiveHover = 'var(--on-dark-surface-transparent-positive-hover, #1A9E3252)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositiveActive = 'var(--on-dark-surface-transparent-positive-active, #1A9E3224)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarningHover = 'var(--on-dark-surface-transparent-warning-hover, #FA5F0552)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarningActive = 'var(--on-dark-surface-transparent-warning-active, #FA5F0524)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegativeHover = 'var(--on-dark-surface-transparent-negative-hover, #FF293E52)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegativeActive = 'var(--on-dark-surface-transparent-negative-active, #FF293E24)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfoHover = 'var(--on-dark-surface-transparent-info-hover, #3F82FD52)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfoActive = 'var(--on-dark-surface-transparent-info-active, #3F82FD24)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentMinor = 'var(--on-dark-surface-accent-minor, #082254)';

/** Прозрачный акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentAccent = 'var(--on-dark-surface-transparent-accent, #3F81FD33)';

/** Минорный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveMinor = 'var(--on-dark-surface-positive-minor, #0A2B10)';

/** Минорный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningMinor = 'var(--on-dark-surface-warning-minor, #3D1D0A)';

/** Минорный цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeMinor = 'var(--on-dark-surface-negative-minor, #4A0D13)';

/** Прозрачный цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfaceTransparentPositive = 'var(--on-dark-surface-transparent-positive, #1A9E3233)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentWarning = 'var(--on-dark-surface-transparent-warning, #FA5F0533)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceTransparentNegative = 'var(--on-dark-surface-transparent-negative, #FF293E33)';

/** Цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfo = 'var(--on-dark-surface-info, #3F81FD)';

/** Минорный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceInfoMinor = 'var(--on-dark-surface-info-minor, #082254)';

/** Прозрачный цвет фона поверхности/контрола информация на темном фоне */
export const onDarkSurfaceTransparentInfo = 'var(--on-dark-surface-transparent-info, #3F81FD33)';

/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryHover = 'var(--on-light-surface-solid-primary-hover, #FAFAFAFF)';

/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryActive = 'var(--on-light-surface-solid-primary-active, #F0F0F0FF)';

/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F5F5F5)';

/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryBrightness = 'var(--on-light-surface-solid-primary-brightness, #FFFFFFFF)';

/** Втор. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryHover = 'var(--on-light-surface-solid-secondary-hover, #F7F7F7FF)';

/** Втор. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryActive = 'var(--on-light-surface-solid-secondary-active, #E8E8E8FF)';

/** Втор. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #ECECEC)';

/** Третичный непр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryHover = 'var(--on-light-surface-solid-tertiary-hover, #E8E8E8FF)';

/** Третичный непр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryActive = 'var(--on-light-surface-solid-tertiary-active, #D9D9D9FF)';

/** Третичный непр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #DDDDDD)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardHover = 'var(--on-light-surface-solid-card-hover, #FFFFFFFF)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardActive = 'var(--on-light-surface-solid-card-active, #FFFFFFFF)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #FFFFFFFF)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardBrightness = 'var(--on-light-surface-solid-card-brightness, #FFFFFFFF)';

/** Непр. фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultHover = 'var(--on-light-surface-solid-default-hover, #0D0D0DFF)';

/** Непр. фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultActive = 'var(--on-light-surface-solid-default-active, #030303FF)';

/** Непр. фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';

/** Основной прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryHover = 'var(--on-light-surface-transparent-primary-hover, #08080812)';

/** Основной прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryActive = 'var(--on-light-surface-transparent-primary-active, #08080803)';

/** Основной прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, #08080808)';

/** Вторичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryHover = 'var(--on-light-surface-transparent-secondary-hover, #0808081F)';

/** Вторичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryActive =
    'var(--on-light-surface-transparent-secondary-active, #0808080A)';

/** Вторичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, #0808080F)';

/** Третичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryHover = 'var(--on-light-surface-transparent-tertiary-hover, #0808083D)';

/** Третичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryActive = 'var(--on-light-surface-transparent-tertiary-active, #0808080F)';

/** Третичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, #0808081F)';

/** dark surface onLight surfaceTransparentDeepHover */
export const onLightSurfaceTransparentDeepHover = 'var(--on-light-surface-transparent-deep-hover, #080808C2)';

/** dark surface onLight surfaceTransparentDeepActive */
export const onLightSurfaceTransparentDeepActive = 'var(--on-light-surface-transparent-deep-active, #08080894)';

/** dark surface onLight surfaceTransparentDeep */
export const onLightSurfaceTransparentDeep = 'var(--on-light-surface-transparent-deep, #080808A3)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardHover = 'var(--on-light-surface-transparent-card-hover, #FFFFFFFF)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardActive = 'var(--on-light-surface-transparent-card-active, #FFFFFFFF)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, #FFFFFFFF)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardBrightness = 'var(--on-light-surface-transparent-card-brightness, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentHover = 'var(--on-light-surface-accent-hover, #4886F9FF)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentActive = 'var(--on-light-surface-accent-active, #206CF8FF)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccent = 'var(--on-light-surface-accent, #2A72F8)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinorHover = 'var(--on-light-surface-accent-minor-hover, #EBF1FFFF)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinorActive = 'var(--on-light-surface-accent-minor-active, #D6E4FFFF)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccentHover = 'var(--on-light-surface-transparent-accent-hover, #2A72F83D)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccentActive = 'var(--on-light-surface-transparent-accent-active, #2A72F80F)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveHover = 'var(--on-light-surface-positive-hover, #12A12AFF)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveActive = 'var(--on-light-surface-positive-active, #0F8523FF)';

/** Цвет фона поверхн./контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningHover = 'var(--on-light-surface-warning-hover, #FC5E03FF)';

/** Цвет фона поверхн./контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningActive = 'var(--on-light-surface-warning-active, #DE5302FF)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeHover = 'var(--on-light-surface-negative-hover, #F5384BFF)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeActive = 'var(--on-light-surface-negative-active, #F31228FF)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoHover = 'var(--on-light-surface-info-hover, #4886F9FF)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoActive = 'var(--on-light-surface-info-active, #206CF8FF)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinorHover = 'var(--on-light-surface-positive-minor-hover, #B1FBBFFF)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinorActive = 'var(--on-light-surface-positive-minor-active, #94F9A7FF)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinorHover = 'var(--on-light-surface-warning-minor-hover, #FEE9DCFF)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinorActive = 'var(--on-light-surface-warning-minor-active, #FEDCC8FF)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinorHover = 'var(--on-light-surface-negative-minor-hover, #FFEBEDFF)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinorActive = 'var(--on-light-surface-negative-minor-active, #FFD6DAFF)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinorHover = 'var(--on-light-surface-info-minor-hover, #EBF1FFFF)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinorActive = 'var(--on-light-surface-info-minor-active, #D6E4FFFF)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositiveHover = 'var(--on-light-surface-transparent-positive-hover, #108E253D)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositiveActive = 'var(--on-light-surface-transparent-positive-active, #108E250F)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarningHover = 'var(--on-light-surface-transparent-warning-hover, #E857023D)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarningActive = 'var(--on-light-surface-transparent-warning-active, #E857020F)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegativeHover = 'var(--on-light-surface-transparent-negative-hover, #F31B313D)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegativeActive = 'var(--on-light-surface-transparent-negative-active, #F31B310F)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfoHover = 'var(--on-light-surface-transparent-info-hover, #2A72F83D)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfoActive = 'var(--on-light-surface-transparent-info-active, #2A72F80F)';

/** Акцентный минорный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentMinor = 'var(--on-light-surface-accent-minor, #DEE9FF)';

/** Прозрачный акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentAccent = 'var(--on-light-surface-transparent-accent, #2A72F81F)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositive = 'var(--on-light-surface-positive, #108E26)';

/** Цвет фона поверхн./контрола предупреждение на светлом фоне */
export const onLightSurfaceWarning = 'var(--on-light-surface-warning, #E85702)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegative = 'var(--on-light-surface-negative, #F31B31)';

/** Минорный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveMinor = 'var(--on-light-surface-positive-minor, #9EFAAF)';

/** Минорный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningMinor = 'var(--on-light-surface-warning-minor, #FEE2D2)';

/** Минорный цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeMinor = 'var(--on-light-surface-negative-minor, #FFE0E3)';

/** Прозрачный цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfaceTransparentPositive = 'var(--on-light-surface-transparent-positive, #108E261F)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentWarning = 'var(--on-light-surface-transparent-warning, #E857021F)';

/** Прозрачный цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceTransparentNegative = 'var(--on-light-surface-transparent-negative, #F31B311F)';

/** Цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfo = 'var(--on-light-surface-info, #2A72F8)';

/** Минорный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceInfoMinor = 'var(--on-light-surface-info-minor, #DEE9FF)';

/** Прозрачный цвет фона поверхности/контрола информация на светлом фоне */
export const onLightSurfaceTransparentInfo = 'var(--on-light-surface-transparent-info, #2A72F81F)';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary, #080808)';

/** Основной фон */
export const backgroundPrimaryBrightness = 'var(--background-primary-brightness, #171717FF)';

/** Основной фон на темном фоне */
export const darkBackgroundPrimary = 'var(--dark-background-primary, #080808)';

/** Основной фон на светлом фоне */
export const lightBackgroundPrimary = 'var(--light-background-primary, #F9F9F9)';

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft, #0808088F)';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard, #080808F5)';

/** dark overlay default overlayBlur */
export const overlayBlur = 'var(--overlay-blur, #08080847)';

/** Цвет фона паранжи светлый на темном фоне */
export const onDarkOverlaySoft = 'var(--on-dark-overlay-soft, #0808088F)';

/** Цвет фона паранжи темный на темном фоне */
export const onDarkOverlayHard = 'var(--on-dark-overlay-hard, #080808F5)';

/** dark overlay onDark overlayBlur */
export const onDarkOverlayBlur = 'var(--on-dark-overlay-blur, #08080847)';

/** Цвет фона паранжи светлый на светлом фоне */
export const onLightOverlaySoft = 'var(--on-light-overlay-soft, #F9F9F98F)';

/** Цвет фона паранжи темный на светлом фоне */
export const onLightOverlayHard = 'var(--on-light-overlay-hard, #F9F9F9F5)';

/** dark overlay onLight overlayBlur */
export const onLightOverlayBlur = 'var(--on-light-overlay-blur, #F9F9F947)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimaryHover = 'var(--outline-solid-primary-hover, #303030FF)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimaryActive = 'var(--outline-solid-primary-active, #212121FF)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondaryHover = 'var(--outline-solid-secondary-hover, #595959FF)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondaryActive = 'var(--outline-solid-secondary-active, #4A4A4AFF)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiaryHover = 'var(--outline-solid-tertiary-hover, #7A7A7AFF)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiaryActive = 'var(--outline-solid-tertiary-active, #6B6B6BFF)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimaryHover = 'var(--outline-transparent-primary-hover, #FFFFFF3D)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimaryActive = 'var(--outline-transparent-primary-active, #FFFFFF0F)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondaryHover = 'var(--outline-transparent-secondary-hover, #FFFFFF52)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondaryActive = 'var(--outline-transparent-secondary-active, #FFFFFF24)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiaryHover = 'var(--outline-transparent-tertiary-hover, #FFFFFF85)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiaryActive = 'var(--outline-transparent-tertiary-active, #FFFFFF57)';

/** Бесцветная обводка */
export const outlineClearHover = 'var(--outline-clear-hover, #FFFFFF00)';

/** Бесцветная обводка */
export const outlineClearActive = 'var(--outline-clear-active, #FFFFFF00)';

/** Акцентный цвет обводки */
export const outlineAccentHover = 'var(--outline-accent-hover, #5D95FDFF)';

/** Акцентный цвет обводки */
export const outlineAccentActive = 'var(--outline-accent-active, #357BFDFF)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinorHover = 'var(--outline-accent-minor-hover, #1852BFFF)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinorActive = 'var(--outline-accent-minor-active, #1446A3FF)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccentHover = 'var(--outline-transparent-accent-hover, #528EFF66)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccentActive = 'var(--outline-transparent-accent-active, #528EFF38)';

/** Цвет обводки успех */
export const outlinePositiveHover = 'var(--outline-positive-hover, #28C344FF)';

/** Цвет обводки успех */
export const outlinePositiveActive = 'var(--outline-positive-active, #23A93BFF)';

/** Цвет обводки предупреждение */
export const outlineWarningHover = 'var(--outline-warning-hover, #FF8442FF)';

/** Цвет обводки предупреждение */
export const outlineWarningActive = 'var(--outline-warning-active, #FF6A1AFF)';

/** Цвет обводки ошибка */
export const outlineNegativeHover = 'var(--outline-negative-hover, #FF5C6CFF)';

/** Цвет обводки ошибка */
export const outlineNegativeActive = 'var(--outline-negative-active, #FF3347FF)';

/** Цвет обводки информация */
export const outlineInfoHover = 'var(--outline-info-hover, #70A2FFFF)';

/** Цвет обводки информация */
export const outlineInfoActive = 'var(--outline-info-active, #4788FFFF)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinorHover = 'var(--outline-positive-minor-hover, #0B6F1DFF)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinorActive = 'var(--outline-positive-minor-active, #085416FF)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinorHover = 'var(--outline-warning-minor-hover, #95400EFF)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinorActive = 'var(--outline-warning-minor-active, #79340BFF)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinorHover = 'var(--outline-negative-minor-hover, #B01726FF)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinorActive = 'var(--outline-negative-minor-active, #951320FF)';

/** Минорный цвет обводки информация */
export const outlineInfoMinorHover = 'var(--outline-info-minor-hover, #1852BFFF)';

/** Минорный цвет обводки информация */
export const outlineInfoMinorActive = 'var(--outline-info-minor-active, #1446A3FF)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositiveHover = 'var(--outline-transparent-positive-hover, #24B23E66)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositiveActive = 'var(--outline-transparent-positive-active, #24B23E38)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarningHover = 'var(--outline-transparent-warning-hover, #FF702466)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarningActive = 'var(--outline-transparent-warning-active, #FF702438)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegativeHover = 'var(--outline-transparent-negative-hover, #FF3D5166)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegativeActive = 'var(--outline-transparent-negative-active, #FF3D5138)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfoHover = 'var(--outline-transparent-info-hover, #528EFF66)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfoActive = 'var(--outline-transparent-info-active, #528EFF38)';

/** Основной непрозрачный цвет обводки */
export const outlineSolidPrimary = 'var(--outline-solid-primary, #262626)';

/** Вторичный непрозрачный цвет обводки */
export const outlineSolidSecondary = 'var(--outline-solid-secondary, #4E4E4E)';

/** Третичный непрозрачный цвет обводки */
export const outlineSolidTertiary = 'var(--outline-solid-tertiary, #707070)';

/** dark outline default outlineDefault */
export const outlineDefault = 'var(--outline-default, #F9F9F9)';

/** dark outline default outlineDefaultHover */
export const outlineDefaultHover = 'var(--outline-default-hover, #FFFFFFFF)';

/** dark outline default outlineDefaultActive */
export const outlineDefaultActive = 'var(--outline-default-active, #F5F5F5FF)';

/** Основной прозрачный цвет обводки */
export const outlineTransparentPrimary = 'var(--outline-transparent-primary, #FFFFFF1F)';

/** Вторичный прозрачный цвет обводки */
export const outlineTransparentSecondary = 'var(--outline-transparent-secondary, #FFFFFF33)';

/** Третичный прозрачный цвет обводки */
export const outlineTransparentTertiary = 'var(--outline-transparent-tertiary, #FFFFFF66)';

/** Бесцветная обводка */
export const outlineClear = 'var(--outline-clear, #FFFFFF00)';

/** Акцентный цвет обводки */
export const outlineAccent = 'var(--outline-accent, #3F81FD)';

/** Акцентный минорный непрозрачный цвет обводки */
export const outlineAccentMinor = 'var(--outline-accent-minor, #1549AB)';

/** Прозрачный акцентный цвет обводки */
export const outlineTransparentAccent = 'var(--outline-transparent-accent, #528EFF47)';

/** Цвет обводки успех */
export const outlinePositive = 'var(--outline-positive, #24B23E)';

/** Цвет обводки предупреждение */
export const outlineWarning = 'var(--outline-warning, #FF7024)';

/** Цвет обводки ошибка */
export const outlineNegative = 'var(--outline-negative, #FF3D51)';

/** Минорный цвет обводки успех */
export const outlinePositiveMinor = 'var(--outline-positive-minor, #095C18)';

/** Минорный цвет обводки предупреждение */
export const outlineWarningMinor = 'var(--outline-warning-minor, #85380C)';

/** Минорный цвет обводки ошибка */
export const outlineNegativeMinor = 'var(--outline-negative-minor, #9C1422)';

/** Прозрачный цвет обводки успех */
export const outlineTransparentPositive = 'var(--outline-transparent-positive, #24B23E47)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentWarning = 'var(--outline-transparent-warning, #FF702447)';

/** Прозрачный цвет обводки предупреждение */
export const outlineTransparentNegative = 'var(--outline-transparent-negative, #FF3D5147)';

/** Цвет обводки информация */
export const outlineInfo = 'var(--outline-info, #528EFF)';

/** Минорный цвет обводки информация */
export const outlineInfoMinor = 'var(--outline-info-minor, #1549AB)';

/** Прозрачный цвет обводки информация */
export const outlineTransparentInfo = 'var(--outline-transparent-info, #528EFF47)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimaryHover = 'var(--on-dark-outline-solid-primary-hover, #303030FF)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimaryActive = 'var(--on-dark-outline-solid-primary-active, #212121FF)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondaryHover = 'var(--on-dark-outline-solid-secondary-hover, #595959FF)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondaryActive = 'var(--on-dark-outline-solid-secondary-active, #4A4A4AFF)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiaryHover = 'var(--on-dark-outline-solid-tertiary-hover, #7A7A7AFF)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiaryActive = 'var(--on-dark-outline-solid-tertiary-active, #6B6B6BFF)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimaryHover = 'var(--on-dark-outline-transparent-primary-hover, #FFFFFF3D)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimaryActive = 'var(--on-dark-outline-transparent-primary-active, #FFFFFF0F)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondaryHover = 'var(--on-dark-outline-transparent-secondary-hover, #FFFFFF52)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondaryActive = 'var(--on-dark-outline-transparent-secondary-active, #FFFFFF24)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiaryHover = 'var(--on-dark-outline-transparent-tertiary-hover, #FFFFFF85)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiaryActive = 'var(--on-dark-outline-transparent-tertiary-active, #FFFFFF57)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccentHover = 'var(--on-dark-outline-accent-hover, #5D95FDFF)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccentActive = 'var(--on-dark-outline-accent-active, #357BFDFF)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinorHover = 'var(--on-dark-outline-accent-minor-hover, #1852BFFF)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinorActive = 'var(--on-dark-outline-accent-minor-active, #1446A3FF)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccentHover = 'var(--on-dark-outline-transparent-accent-hover, #528EFF66)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccentActive = 'var(--on-dark-outline-transparent-accent-active, #528EFF38)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveHover = 'var(--on-dark-outline-positive-hover, #28C344FF)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveActive = 'var(--on-dark-outline-positive-active, #23A93BFF)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningHover = 'var(--on-dark-outline-warning-hover, #FF8442FF)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningActive = 'var(--on-dark-outline-warning-active, #FF6A1AFF)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeHover = 'var(--on-dark-outline-negative-hover, #FF5C6CFF)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeActive = 'var(--on-dark-outline-negative-active, #FF3347FF)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfoHover = 'var(--on-dark-outline-info-hover, #70A2FFFF)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfoActive = 'var(--on-dark-outline-info-active, #4788FFFF)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinorHover = 'var(--on-dark-outline-positive-minor-hover, #0B6F1DFF)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinorActive = 'var(--on-dark-outline-positive-minor-active, #085416FF)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinorHover = 'var(--on-dark-outline-warning-minor-hover, #95400EFF)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinorActive = 'var(--on-dark-outline-warning-minor-active, #79340BFF)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinorHover = 'var(--on-dark-outline-negative-minor-hover, #B01726FF)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinorActive = 'var(--on-dark-outline-negative-minor-active, #951320FF)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinorHover = 'var(--on-dark-outline-info-minor-hover, #1852BFFF)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinorActive = 'var(--on-dark-outline-info-minor-active, #1446A3FF)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositiveHover = 'var(--on-dark-outline-transparent-positive-hover, #24B23E66)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositiveActive = 'var(--on-dark-outline-transparent-positive-active, #24B23E38)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarningHover = 'var(--on-dark-outline-transparent-warning-hover, #FF702466)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarningActive = 'var(--on-dark-outline-transparent-warning-active, #FF702438)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegativeHover = 'var(--on-dark-outline-transparent-negative-hover, #FF3D5166)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegativeActive = 'var(--on-dark-outline-transparent-negative-active, #FF3D5138)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfoHover = 'var(--on-dark-outline-transparent-info-hover, #528EFF66)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfoActive = 'var(--on-dark-outline-transparent-info-active, #528EFF38)';

/** dark outline onDark outlineDefaultHover */
export const onDarkOutlineDefaultHover = 'var(--on-dark-outline-default-hover, #FFFFFFFF)';

/** dark outline onDark outlineDefaultActive */
export const onDarkOutlineDefaultActive = 'var(--on-dark-outline-default-active, #F5F5F5FF)';

/** Основной непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidPrimary = 'var(--on-dark-outline-solid-primary, #262626)';

/** Вторичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidSecondary = 'var(--on-dark-outline-solid-secondary, #4E4E4E)';

/** Третичный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineSolidTertiary = 'var(--on-dark-outline-solid-tertiary, #707070)';

/** dark outline onDark outlineDefault */
export const onDarkOutlineDefault = 'var(--on-dark-outline-default, #F9F9F9)';

/** Основной прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentPrimary = 'var(--on-dark-outline-transparent-primary, #FFFFFF1F)';

/** Вторичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentSecondary = 'var(--on-dark-outline-transparent-secondary, #FFFFFF33)';

/** Третичный прозрачный цвет обводки на темном фоне */
export const onDarkOutlineTransparentTertiary = 'var(--on-dark-outline-transparent-tertiary, #FFFFFF66)';

/** Акцентный цвет обводки на темном фоне */
export const onDarkOutlineAccent = 'var(--on-dark-outline-accent, #3F81FD)';

/** Акцентный минорный непрозрачный цвет обводки на темном фоне */
export const onDarkOutlineAccentMinor = 'var(--on-dark-outline-accent-minor, #1549AB)';

/** Прозрачный акцентный цвет обводки на темном фоне */
export const onDarkOutlineTransparentAccent = 'var(--on-dark-outline-transparent-accent, #528EFF47)';

/** Цвет обводки успех на темном фоне */
export const onDarkOutlinePositive = 'var(--on-dark-outline-positive, #24B23E)';

/** Цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarning = 'var(--on-dark-outline-warning, #FF7024)';

/** Цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegative = 'var(--on-dark-outline-negative, #FF3D51)';

/** Минорный цвет обводки успех на темном фоне */
export const onDarkOutlinePositiveMinor = 'var(--on-dark-outline-positive-minor, #095C18)';

/** Минорный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineWarningMinor = 'var(--on-dark-outline-warning-minor, #85380C)';

/** Минорный цвет обводки ошибка на темном фоне */
export const onDarkOutlineNegativeMinor = 'var(--on-dark-outline-negative-minor, #9C1422)';

/** Прозрачный цвет обводки успех на темном фоне */
export const onDarkOutlineTransparentPositive = 'var(--on-dark-outline-transparent-positive, #24B23E47)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentWarning = 'var(--on-dark-outline-transparent-warning, #FF702447)';

/** Прозрачный цвет обводки предупреждение на темном фоне */
export const onDarkOutlineTransparentNegative = 'var(--on-dark-outline-transparent-negative, #FF3D5147)';

/** Цвет обводки информация на темном фоне */
export const onDarkOutlineInfo = 'var(--on-dark-outline-info, #528EFF)';

/** Минорный цвет обводки информация на темном фоне */
export const onDarkOutlineInfoMinor = 'var(--on-dark-outline-info-minor, #1549AB)';

/** Прозрачный цвет обводки информация на темном фоне */
export const onDarkOutlineTransparentInfo = 'var(--on-dark-outline-transparent-info, #528EFF47)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimaryHover = 'var(--on-light-outline-solid-primary-hover, #E8E8E8FF)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimaryActive = 'var(--on-light-outline-solid-primary-active, #D9D9D9FF)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondaryHover = 'var(--on-light-outline-solid-secondary-hover, #9E9E9EFF)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondaryActive = 'var(--on-light-outline-solid-secondary-active, #8F8F8FFF)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiaryHover = 'var(--on-light-outline-solid-tertiary-hover, #7A7A7AFF)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiaryActive = 'var(--on-light-outline-solid-tertiary-active, #6B6B6BFF)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimaryHover = 'var(--on-light-outline-transparent-primary-hover, #08080852)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimaryActive = 'var(--on-light-outline-transparent-primary-active, #08080824)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondaryHover = 'var(--on-light-outline-transparent-secondary-hover, #08080885)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondaryActive =
    'var(--on-light-outline-transparent-secondary-active, #08080857)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiaryHover = 'var(--on-light-outline-transparent-tertiary-hover, #080808AD)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiaryActive = 'var(--on-light-outline-transparent-tertiary-active, #08080880)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccentHover = 'var(--on-light-outline-accent-hover, #4886F9FF)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccentActive = 'var(--on-light-outline-accent-active, #206CF8FF)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinorHover = 'var(--on-light-outline-accent-minor-hover, #A1C1FDFF)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinorActive = 'var(--on-light-outline-accent-minor-active, #83ADFCFF)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccentHover = 'var(--on-light-outline-transparent-accent-hover, #2A72F852)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccentActive = 'var(--on-light-outline-transparent-accent-active, #2A72F824)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveHover = 'var(--on-light-outline-positive-hover, #12A12AFF)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveActive = 'var(--on-light-outline-positive-active, #0F8523FF)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningHover = 'var(--on-light-outline-warning-hover, #FC5E03FF)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningActive = 'var(--on-light-outline-warning-active, #DE5302FF)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeHover = 'var(--on-light-outline-negative-hover, #F5384BFF)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeActive = 'var(--on-light-outline-negative-active, #F31228FF)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfoHover = 'var(--on-light-outline-info-hover, #4886F9FF)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfoActive = 'var(--on-light-outline-info-active, #206CF8FF)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinorHover = 'var(--on-light-outline-positive-minor-hover, #36D954FF)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinorActive = 'var(--on-light-outline-positive-minor-active, #26C944FF)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinorHover = 'var(--on-light-outline-warning-minor-hover, #FDA97CFF)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinorActive = 'var(--on-light-outline-warning-minor-active, #FD965EFF)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinorHover = 'var(--on-light-outline-negative-minor-hover, #FFA3ACFF)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinorActive = 'var(--on-light-outline-negative-minor-active, #FF8591FF)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinorHover = 'var(--on-light-outline-info-minor-hover, #A1C1FDFF)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinorActive = 'var(--on-light-outline-info-minor-active, #83ADFCFF)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositiveHover = 'var(--on-light-outline-transparent-positive-hover, #108E2552)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositiveActive = 'var(--on-light-outline-transparent-positive-active, #108E2524)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarningHover = 'var(--on-light-outline-transparent-warning-hover, #E8570252)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarningActive = 'var(--on-light-outline-transparent-warning-active, #E8570224)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegativeHover = 'var(--on-light-outline-transparent-negative-hover, #F31B3152)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegativeActive = 'var(--on-light-outline-transparent-negative-active, #F31B3124)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfoHover = 'var(--on-light-outline-transparent-info-hover, #2A72F852)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfoActive = 'var(--on-light-outline-transparent-info-active, #2A72F824)';

/** dark outline onLight outlineDefaultHover */
export const onLightOutlineDefaultHover = 'var(--on-light-outline-default-hover, #0D0D0DFF)';

/** dark outline onLight outlineDefaultActive */
export const onLightOutlineDefaultActive = 'var(--on-light-outline-default-active, #030303FF)';

/** Основной непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidPrimary = 'var(--on-light-outline-solid-primary, #DDDDDD)';

/** Вторичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidSecondary = 'var(--on-light-outline-solid-secondary, #949494)';

/** Третичный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineSolidTertiary = 'var(--on-light-outline-solid-tertiary, #707070)';

/** dark outline onLight outlineDefault */
export const onLightOutlineDefault = 'var(--on-light-outline-default, #080808)';

/** Основной прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentPrimary = 'var(--on-light-outline-transparent-primary, #08080833)';

/** Вторичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentSecondary = 'var(--on-light-outline-transparent-secondary, #08080866)';

/** Третичный прозрачный цвет обводки на светлом фоне */
export const onLightOutlineTransparentTertiary = 'var(--on-light-outline-transparent-tertiary, #0808088F)';

/** Акцентный цвет обводки на светлом фоне */
export const onLightOutlineAccent = 'var(--on-light-outline-accent, #2A72F8)';

/** Акцентный минорный непрозрачный цвет обводки на светлом фоне */
export const onLightOutlineAccentMinor = 'var(--on-light-outline-accent-minor, #8BB2FC)';

/** Прозрачный акцентный цвет обводки на светлом фоне */
export const onLightOutlineTransparentAccent = 'var(--on-light-outline-transparent-accent, #2A72F833)';

/** Цвет обводки успех на светлом фоне */
export const onLightOutlinePositive = 'var(--on-light-outline-positive, #108E26)';

/** Цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarning = 'var(--on-light-outline-warning, #E85702)';

/** Цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegative = 'var(--on-light-outline-negative, #F31B31)';

/** Минорный цвет обводки успех на светлом фоне */
export const onLightOutlinePositiveMinor = 'var(--on-light-outline-positive-minor, #28D247)';

/** Минорный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineWarningMinor = 'var(--on-light-outline-warning-minor, #FD9C68)';

/** Минорный цвет обводки ошибка на светлом фоне */
export const onLightOutlineNegativeMinor = 'var(--on-light-outline-negative-minor, #FF8F9A)';

/** Прозрачный цвет обводки успех на светлом фоне */
export const onLightOutlineTransparentPositive = 'var(--on-light-outline-transparent-positive, #108E2633)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentWarning = 'var(--on-light-outline-transparent-warning, #E8570233)';

/** Прозрачный цвет обводки предупреждение на светлом фоне */
export const onLightOutlineTransparentNegative = 'var(--on-light-outline-transparent-negative, #F31B3133)';

/** Цвет обводки информация на светлом фоне */
export const onLightOutlineInfo = 'var(--on-light-outline-info, #2A72F8)';

/** Минорный цвет обводки информация на светлом фоне */
export const onLightOutlineInfoMinor = 'var(--on-light-outline-info-minor, #8BB2FC)';

/** Прозрачный цвет обводки информация на светлом фоне */
export const onLightOutlineTransparentInfo = 'var(--on-light-outline-transparent-info, #2A72F833)';

/** @deprecated instead use onDarkTextPrimary */
export const whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';

/** @deprecated instead use onDarkTextSecondary */
export const whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';

/** @deprecated instead use onDarkTextTertiary */
export const whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';

/** @deprecated instead use onLightTextPrimary */
export const blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';

/** @deprecated instead use onLightTextSecondary */
export const blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';

/** @deprecated instead use onLightTextTertiary */
export const blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';

/** @deprecated instead use onLightSurfaceSolidDefault */
export const buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';

/** @deprecated instead use onLightSurfaceTransparentSecondary */
export const buttonBlackSecondary =
    'var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))';

/** @deprecated instead use onDarkSurfaceSolidDefault */
export const buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';

/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export const buttonWhiteSecondary =
    'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';

/** @deprecated instead use textPrimary */
export const text = 'var(--plasma-colors-text, var(--text-primary))';

/** @deprecated instead use textPrimary */
export const primary = 'var(--plasma-colors-primary, var(--text-primary))';

/** @deprecated instead use textSecondary */
export const secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';

/** @deprecated instead use textTertiary */
export const tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';

/** @deprecated instead use textParagraph */
export const paragraph = 'var(--plasma-colors-paragraph, var(--text-paragraph))';

/** @deprecated instead use backgroundPrimary */
export const background = 'var(--plasma-colors-background, var(--background-primary))';

/** @deprecated instead use textAccent */
export const accent = 'var(--plasma-colors-accent, var(--text-accent))';

/** @deprecated instead use textPositive */
export const success = 'var(--plasma-colors-success, var(--text-positive))';

/** @deprecated instead use textWarning */
export const warning = 'var(--plasma-colors-warning, var(--text-warning))';

/** @deprecated instead use textNegative */
export const critical = 'var(--plasma-colors-critical, var(--text-negative))';

/** @deprecated instead use overlaySoft */
export const overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';

/** @deprecated instead use surfaceTransparentPrimary */
export const surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))';

/** @deprecated instead use surfaceTransparentSecondary */
export const surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))';

/** @deprecated instead use surfaceTransparentTertiary */
export const surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))';

/** @deprecated instead use surfaceSolidPrimary */
export const surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';

/** @deprecated instead use surfaceSolidSecondary */
export const surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';

/** @deprecated instead use surfaceSolidTertiary */
export const surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';

/** @deprecated instead use surfaceTransparentCard */
export const surfaceCard = 'var(--plasma-colors-surface-card, var(--surface-transparent-card))';

/** @deprecated instead use surfaceTransparentSecondary */
export const buttonSecondary = 'var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))';

/** @deprecated instead use textAccent */
export const buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';

/** @deprecated instead use surfacePositive */
export const buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';

/** @deprecated instead use surfaceWarning */
export const buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';

/** @deprecated instead use surfaceNegative */
export const buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';

/** Акцентный цвет с градиентом */
export const textAccentGradientHover = 'var(--text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом */
export const textAccentGradientActive = 'var(--text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом */
export const textAccentGradient =
    'var(--text-accent-gradient, linear-gradient(89.83deg, #5E94FFFF 0%, #43DBFAFF 100%))';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradientHover = 'var(--on-dark-text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradientActive = 'var(--on-dark-text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradient =
    'var(--on-dark-text-accent-gradient, linear-gradient(89.83deg, #5E94FFFF 0%, #43DBFAFF 100%))';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradientHover = 'var(--on-light-text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradientActive = 'var(--on-light-text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradient =
    'var(--on-light-text-accent-gradient, linear-gradient(93.97deg, #3E79F0FF 6.49%, #27C6E5FF 93.51%))';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradientHover = 'var(--surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradientActive = 'var(--surface-accent-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradient =
    'var(--surface-accent-gradient, linear-gradient(93.97deg, #3E79F0FF 6.49%, #27C6E5FF 93.51%),linear-gradient(89.83deg, #5E94FFFF 0%, #43DBFAFF 100%))';

/** Фон для скелетона */
export const surfaceSkeletonGradient =
    'var(--surface-skeleton-gradient, linear-gradient(90deg, #FFFFFF17 0%, #FFFFFF14 6.25%, #FFFFFF0D 12.5%, #FFFFFF03 25%, #FFFFFF0D 37.5%, #FFFFFF14 43.75%, #FFFFFF17 50%, #FFFFFF14 56.25%, #FFFFFF0D 62.5%, #FFFFFF03 75%, #FFFFFF0D 87.5%, #FFFFFF14 93.75%, #FFFFFF17 100%))';

/** Фон для скелетона */
export const surfaceSkeletonGradientHover = 'var(--surface-skeleton-gradient-hover, #FFFFFFFF)';

/** Фон для скелетона */
export const surfaceSkeletonGradientActive = 'var(--surface-skeleton-gradient-active, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradient =
    'var(--surface-skeleton-deep-gradient, linear-gradient(90deg, #FFFFFF5C 0%, #FFFFFF52 6.25%, #FFFFFF33 12.5%, #FFFFFF0A 25%, #FFFFFF33 37.5%, #FFFFFF52 43.75%, #FFFFFF5C 50%, #FFFFFF14 56.25%, #FFFFFF33 62.5%, #FFFFFF0A 75%, #FFFFFF33 87.5%, #FFFFFF52 93.75%, #FFFFFF5C 100%))';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradientHover = 'var(--surface-skeleton-deep-gradient-hover, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const surfaceSkeletonDeepGradientActive = 'var(--surface-skeleton-deep-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхн./контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradientHover = 'var(--on-dark-surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцентный фон поверхн./контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradientActive = 'var(--on-dark-surface-accent-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхн./контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradient =
    'var(--on-dark-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0FF 6.49%, #27C6E5FF 93.51%))';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradient =
    'var(--on-dark-surface-skeleton-gradient, linear-gradient(90deg, #FFFFFF17 0%, #FFFFFF14 6.25%, #FFFFFF0D 12.5%, #FFFFFF03 25%, #FFFFFF0D 37.5%, #FFFFFF14 43.75%, #FFFFFF17 50%, #FFFFFF14 56.25%, #FFFFFF0D 62.5%, #FFFFFF03 75%, #FFFFFF0D 87.5%, #FFFFFF14 93.75%, #FFFFFF17 100%))';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradientHover = 'var(--on-dark-surface-skeleton-gradient-hover, #FFFFFFFF)';

/** Фон для скелетона */
export const onDarkSurfaceSkeletonGradientActive = 'var(--on-dark-surface-skeleton-gradient-active, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradient =
    'var(--on-dark-surface-skeleton-deep-gradient, linear-gradient(90deg, #FFFFFF5C 0%, #FFFFFF52 6.25%, #FFFFFF33 12.5%, #FFFFFF0A 25%, #FFFFFF33 37.5%, #FFFFFF52 43.75%, #FFFFFF5C 50%, #FFFFFF14 56.25%, #FFFFFF33 62.5%, #FFFFFF0A 75%, #FFFFFF33 87.5%, #FFFFFF52 93.75%, #FFFFFF5C 100%))';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradientHover = 'var(--on-dark-surface-skeleton-deep-gradient-hover, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const onDarkSurfaceSkeletonDeepGradientActive =
    'var(--on-dark-surface-skeleton-deep-gradient-active, #FFFFFFFF)';

/** Акцент. фон поверхн./контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradientHover = 'var(--on-light-surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцент. фон поверхн./контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradientActive = 'var(--on-light-surface-accent-gradient-active, #FFFFFFFF)';

/** Акцент. фон поверхн./контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradient =
    'var(--on-light-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0FF 6.49%, #27C6E5FF 93.51%))';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradient =
    'var(--on-light-surface-skeleton-gradient, linear-gradient(90deg, #08080817 0%, #08080814 6.25%, #0808080D 12.5%, #08080803 25%, #0808080D 37.5%, #08080814 43.75%, #08080817 50%, #08080814 56.25%, #0808080D 62.5%, #08080803 75%, #0808080D 87.5%, #08080814 93.75%, #08080817 100%))';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradientHover = 'var(--on-light-surface-skeleton-gradient-hover, #FFFFFFFF)';

/** Фон для скелетона */
export const onLightSurfaceSkeletonGradientActive = 'var(--on-light-surface-skeleton-gradient-active, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradient =
    'var(--on-light-surface-skeleton-deep-gradient, linear-gradient(90deg, #0808085C 0%, #08080852 6.25%, #08080833 12.5%, #0808080A 25%, #08080833 37.5%, #08080852 43.75%, #0808085C 50%, #08080814 56.25%, #08080833 62.5%, #0808080A 75%, #08080833 87.5%, #08080852 93.75%, #0808085C 100%))';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradientHover =
    'var(--on-light-surface-skeleton-deep-gradient-hover, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const onLightSurfaceSkeletonDeepGradientActive =
    'var(--on-light-surface-skeleton-deep-gradient-active, #FFFFFFFF)';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradient =
    'var(--inverse-surface-skeleton-gradient, linear-gradient(90deg, #08080817 0%, #08080814 6.25%, #0808080D 12.5%, #08080803 25%, #0808080D 37.5%, #08080814 43.75%, #08080817 50%, #08080814 56.25%, #0808080D 62.5%, #08080803 75%, #0808080D 87.5%, #08080814 93.75%, #08080817 100%))';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradientHover = 'var(--inverse-surface-skeleton-gradient-hover, #FFFFFFFF)';

/** Фон для скелетона */
export const inverseSurfaceSkeletonGradientActive = 'var(--inverse-surface-skeleton-gradient-active, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradient =
    'var(--inverse-surface-skeleton-deep-gradient, linear-gradient(90deg, #0808085C 0%, #08080852 6.25%, #08080833 12.5%, #0808080A 25%, #08080833 37.5%, #08080852 43.75%, #0808085C 50%, #08080814 56.25%, #08080833 62.5%, #0808080A 75%, #08080833 87.5%, #08080852 93.75%, #0808085C 100%))';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradientHover = 'var(--inverse-surface-skeleton-deep-gradient-hover, #FFFFFFFF)';

/** Яркий фон для скелетона */
export const inverseSurfaceSkeletonDeepGradientActive =
    'var(--inverse-surface-skeleton-deep-gradient-active, #FFFFFFFF)';

/** shadow down soft s */
export const shadowDownSoftS = 'var(--shadow-down-soft-s, 0px 4px 14px -4px #08080814,0px 1px 4px -1px #0000000A)';

/** shadow down soft m */
export const shadowDownSoftM = 'var(--shadow-down-soft-m, 0px 24px 48px -8px #00000014)';

/** shadow down soft l */
export const shadowDownSoftL = 'var(--shadow-down-soft-l, 0px 60px 112px -8px #00000014)';

/** shadow down hard s */
export const shadowDownHardS = 'var(--shadow-down-hard-s, 0px 4px 12px -3px #08080829,0px 1px 4px -2px #00000014)';

/** shadow down hard m */
export const shadowDownHardM = 'var(--shadow-down-hard-m, 0px 16px 32px -8px #0000003D)';

/** shadow down hard l */
export const shadowDownHardL = 'var(--shadow-down-hard-l, 0px 60px 112px -8px #00000066)';

/** shadow up soft s */
export const shadowUpSoftS = 'var(--shadow-up-soft-s, 0px -4px 14px -4px #08080814,0px -1px 4px -1px #00000008)';

/** shadow up soft m */
export const shadowUpSoftM = 'var(--shadow-up-soft-m, 0px -24px 48px -8px #00000014)';

/** shadow up soft l */
export const shadowUpSoftL = 'var(--shadow-up-soft-l, 0px -60px 112px -8px #00000014)';

/** shadow up hard s */
export const shadowUpHardS = 'var(--shadow-up-hard-s, 0px -4px 12px -3px #08080833,0px -1px 4px -1px #00000008)';

/** shadow up hard m */
export const shadowUpHardM = 'var(--shadow-up-hard-m, 0px -16px 32px -8px #0000003D)';

/** shadow up hard l */
export const shadowUpHardL = 'var(--shadow-up-hard-l, 0px -60px 112px -8px #00000066)';

/** borderRadius xxs */
export const borderRadiusXxs = 'var(--border-radius-xxs, 4px)';

/** borderRadius xs */
export const borderRadiusXs = 'var(--border-radius-xs, 8px)';

/** borderRadius s */
export const borderRadiusS = 'var(--border-radius-s, 12px)';

/** borderRadius m */
export const borderRadiusM = 'var(--border-radius-m, 16px)';

/** borderRadius l */
export const borderRadiusL = 'var(--border-radius-l, 20px)';

/** borderRadius xl */
export const borderRadiusXl = 'var(--border-radius-xl, 24px)';

/** borderRadius xxl */
export const borderRadiusXxl = 'var(--border-radius-xxl, 32px)';

/** typography s display-l */
export const dsplL = {
    fontFamily: 'var(--plasma-typo-dspl-l-font-family)',
    fontSize: 'var(--plasma-typo-dspl-l-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-l-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-l-line-height)',
};

/** typography s display-l-bold */
export const dsplLBold = {
    fontFamily: 'var(--plasma-typo-dspl-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-l-bold-line-height)',
};

/** typography s display-m */
export const dsplM = {
    fontFamily: 'var(--plasma-typo-dspl-m-font-family)',
    fontSize: 'var(--plasma-typo-dspl-m-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-m-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-m-line-height)',
};

/** typography s display-m-bold */
export const dsplMBold = {
    fontFamily: 'var(--plasma-typo-dspl-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-m-bold-line-height)',
};

/** typography s display-s */
export const dsplS = {
    fontFamily: 'var(--plasma-typo-dspl-s-font-family)',
    fontSize: 'var(--plasma-typo-dspl-s-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-s-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-s-line-height)',
};

/** typography s display-s-bold */
export const dsplSBold = {
    fontFamily: 'var(--plasma-typo-dspl-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-dspl-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-dspl-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-dspl-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-dspl-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-dspl-s-bold-line-height)',
};

/** typography s header-h1 */
export const h1 = {
    fontFamily: 'var(--plasma-typo-h1-font-family)',
    fontSize: 'var(--plasma-typo-h1-font-size)',
    fontStyle: 'var(--plasma-typo-h1-font-style)',
    fontWeight: 'var(--plasma-typo-h1-font-weight)',
    letterSpacing: 'var(--plasma-typo-h1-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h1-line-height)',
};

/** typography s header-h1-bold */
export const h1Bold = {
    fontFamily: 'var(--plasma-typo-h1-bold-font-family)',
    fontSize: 'var(--plasma-typo-h1-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h1-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h1-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h1-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h1-bold-line-height)',
};

/** typography s header-h2 */
export const h2 = {
    fontFamily: 'var(--plasma-typo-h2-font-family)',
    fontSize: 'var(--plasma-typo-h2-font-size)',
    fontStyle: 'var(--plasma-typo-h2-font-style)',
    fontWeight: 'var(--plasma-typo-h2-font-weight)',
    letterSpacing: 'var(--plasma-typo-h2-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h2-line-height)',
};

/** typography s header-h2-bold */
export const h2Bold = {
    fontFamily: 'var(--plasma-typo-h2-bold-font-family)',
    fontSize: 'var(--plasma-typo-h2-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h2-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h2-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h2-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h2-bold-line-height)',
};

/** typography s header-h3 */
export const h3 = {
    fontFamily: 'var(--plasma-typo-h3-font-family)',
    fontSize: 'var(--plasma-typo-h3-font-size)',
    fontStyle: 'var(--plasma-typo-h3-font-style)',
    fontWeight: 'var(--plasma-typo-h3-font-weight)',
    letterSpacing: 'var(--plasma-typo-h3-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h3-line-height)',
};

/** typography s header-h3-bold */
export const h3Bold = {
    fontFamily: 'var(--plasma-typo-h3-bold-font-family)',
    fontSize: 'var(--plasma-typo-h3-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h3-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h3-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h3-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h3-bold-line-height)',
};

/** typography s header-h4 */
export const h4 = {
    fontFamily: 'var(--plasma-typo-h4-font-family)',
    fontSize: 'var(--plasma-typo-h4-font-size)',
    fontStyle: 'var(--plasma-typo-h4-font-style)',
    fontWeight: 'var(--plasma-typo-h4-font-weight)',
    letterSpacing: 'var(--plasma-typo-h4-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h4-line-height)',
};

/** typography s header-h4-bold */
export const h4Bold = {
    fontFamily: 'var(--plasma-typo-h4-bold-font-family)',
    fontSize: 'var(--plasma-typo-h4-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h4-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h4-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h4-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h4-bold-line-height)',
};

/** typography s header-h5 */
export const h5 = {
    fontFamily: 'var(--plasma-typo-h5-font-family)',
    fontSize: 'var(--plasma-typo-h5-font-size)',
    fontStyle: 'var(--plasma-typo-h5-font-style)',
    fontWeight: 'var(--plasma-typo-h5-font-weight)',
    letterSpacing: 'var(--plasma-typo-h5-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h5-line-height)',
};

/** typography s header-h5-bold */
export const h5Bold = {
    fontFamily: 'var(--plasma-typo-h5-bold-font-family)',
    fontSize: 'var(--plasma-typo-h5-bold-font-size)',
    fontStyle: 'var(--plasma-typo-h5-bold-font-style)',
    fontWeight: 'var(--plasma-typo-h5-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-h5-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-h5-bold-line-height)',
};

/** typography s body-l */
export const bodyL = {
    fontFamily: 'var(--plasma-typo-body-l-font-family)',
    fontSize: 'var(--plasma-typo-body-l-font-size)',
    fontStyle: 'var(--plasma-typo-body-l-font-style)',
    fontWeight: 'var(--plasma-typo-body-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-l-line-height)',
};

/** typography s body-l-bold */
export const bodyLBold = {
    fontFamily: 'var(--plasma-typo-body-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-l-bold-line-height)',
};

/** typography s body-m */
export const bodyM = {
    fontFamily: 'var(--plasma-typo-body-m-font-family)',
    fontSize: 'var(--plasma-typo-body-m-font-size)',
    fontStyle: 'var(--plasma-typo-body-m-font-style)',
    fontWeight: 'var(--plasma-typo-body-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-m-line-height)',
};

/** typography s body-m-bold */
export const bodyMBold = {
    fontFamily: 'var(--plasma-typo-body-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-m-bold-line-height)',
};

/** typography s body-s */
export const bodyS = {
    fontFamily: 'var(--plasma-typo-body-s-font-family)',
    fontSize: 'var(--plasma-typo-body-s-font-size)',
    fontStyle: 'var(--plasma-typo-body-s-font-style)',
    fontWeight: 'var(--plasma-typo-body-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-s-line-height)',
};

/** typography s body-s-bold */
export const bodySBold = {
    fontFamily: 'var(--plasma-typo-body-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-s-bold-line-height)',
};

/** typography s body-xs */
export const bodyXS = {
    fontFamily: 'var(--plasma-typo-body-xs-font-family)',
    fontSize: 'var(--plasma-typo-body-xs-font-size)',
    fontStyle: 'var(--plasma-typo-body-xs-font-style)',
    fontWeight: 'var(--plasma-typo-body-xs-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xs-line-height)',
};

/** typography s body-xs-bold */
export const bodyXSBold = {
    fontFamily: 'var(--plasma-typo-body-xs-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-xs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-xs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-xs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xs-bold-line-height)',
};

/** typography s body-xxs */
export const bodyXXS = {
    fontFamily: 'var(--plasma-typo-body-xxs-font-family)',
    fontSize: 'var(--plasma-typo-body-xxs-font-size)',
    fontStyle: 'var(--plasma-typo-body-xxs-font-style)',
    fontWeight: 'var(--plasma-typo-body-xxs-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xxs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xxs-line-height)',
};

/** typography s body-xxs-bold */
export const bodyXXSBold = {
    fontFamily: 'var(--plasma-typo-body-xxs-bold-font-family)',
    fontSize: 'var(--plasma-typo-body-xxs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-body-xxs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-body-xxs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-body-xxs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-body-xxs-bold-line-height)',
};

/** typography s text-l */
export const textL = {
    fontFamily: 'var(--plasma-typo-text-l-font-family)',
    fontSize: 'var(--plasma-typo-text-l-font-size)',
    fontStyle: 'var(--plasma-typo-text-l-font-style)',
    fontWeight: 'var(--plasma-typo-text-l-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-l-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-l-line-height)',
};

/** typography s text-l-bold */
export const textLBold = {
    fontFamily: 'var(--plasma-typo-text-l-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-l-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-l-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-l-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-l-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-l-bold-line-height)',
};

/** typography s text-m */
export const textM = {
    fontFamily: 'var(--plasma-typo-text-m-font-family)',
    fontSize: 'var(--plasma-typo-text-m-font-size)',
    fontStyle: 'var(--plasma-typo-text-m-font-style)',
    fontWeight: 'var(--plasma-typo-text-m-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-m-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-m-line-height)',
};

/** typography s text-m-bold */
export const textMBold = {
    fontFamily: 'var(--plasma-typo-text-m-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-m-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-m-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-m-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-m-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-m-bold-line-height)',
};

/** typography s text-s */
export const textS = {
    fontFamily: 'var(--plasma-typo-text-s-font-family)',
    fontSize: 'var(--plasma-typo-text-s-font-size)',
    fontStyle: 'var(--plasma-typo-text-s-font-style)',
    fontWeight: 'var(--plasma-typo-text-s-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-s-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-s-line-height)',
};

/** typography s text-s-bold */
export const textSBold = {
    fontFamily: 'var(--plasma-typo-text-s-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-s-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-s-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-s-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-s-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-s-bold-line-height)',
};

/** typography s text-xs */
export const textXS = {
    fontFamily: 'var(--plasma-typo-text-xs-font-family)',
    fontSize: 'var(--plasma-typo-text-xs-font-size)',
    fontStyle: 'var(--plasma-typo-text-xs-font-style)',
    fontWeight: 'var(--plasma-typo-text-xs-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-xs-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-xs-line-height)',
};

/** typography s text-xs-bold */
export const textXSBold = {
    fontFamily: 'var(--plasma-typo-text-xs-bold-font-family)',
    fontSize: 'var(--plasma-typo-text-xs-bold-font-size)',
    fontStyle: 'var(--plasma-typo-text-xs-bold-font-style)',
    fontWeight: 'var(--plasma-typo-text-xs-bold-font-weight)',
    letterSpacing: 'var(--plasma-typo-text-xs-bold-letter-spacing)',
    lineHeight: 'var(--plasma-typo-text-xs-bold-line-height)',
};
