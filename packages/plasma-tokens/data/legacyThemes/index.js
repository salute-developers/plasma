// This file was generated with Diez - https://diez.org
// Do not edit this file directly.

module.exports = {};

if (typeof process === 'undefined' || !process) {
    process = { env: {} };
} else if (!process.env) {
    Object.defineProperty(process, 'env', {
        value: {},
    });
}

const Environment = {
    serverUrl: process.env.DIEZ_SERVER_URL || '/diez',
    isHot: process.env.DIEZ_IS_HOT,
};

const diezHTMLExtensions = [];

class Diez {
    constructor(componentType) {
        if (typeof document !== 'undefined') {
            this.iframe = document.createElement('iframe');
        } else {
            this.iframe = {};
        }

        this.componentType = componentType;
        this.component = new this.componentType();
        this.subscribers = [];
    }

    static applyHTMLExtensions() {
        diezHTMLExtensions.forEach((extension) => {
            if (extension instanceof Function) {
                extension();
            }
        });
    }

    broadcast() {
        for (const subscriber of this.subscribers) {
            subscriber(this.component);
        }
    }

    subscribe(subscriber) {
        this.subscribers.push(subscriber);
    }

    attach(subscriber) {
        subscriber(this.component);
        if (!Environment.isHot) {
            return;
        }
        this.subscribe(subscriber);
        if (this.iframe.contentWindow) {
            return;
        }
        this.iframe.src = `${Environment.serverUrl}/components/${this.component.constructor.name}`;
        this.iframe.width = '0';
        this.iframe.height = '0';
        this.iframe.style.display = 'none';

        if (typeof document !== 'undefined') {
            document.body.appendChild(this.iframe);
            window.addEventListener('message', (event) => {
                if (event.source === this.iframe.contentWindow && event.origin.startsWith(Environment.serverUrl)) {
                    this.component = new this.componentType(JSON.parse(event.data));
                    this.broadcast();
                }
            });
        }
    }
}

module.exports.Diez = Diez;

/**
 * A component encapsulating color, including alpha transparency.
 *
 * You can use the provided static constructors [[Color.rgb]], [[Color.rgba]], [[Color.hsl]], [[Color.hsla]], and
 * [[Color.hex]] to conveniently create color primitives using familiar patterns for color specification.
 *
 */
class Color {
    constructor({ h, s, l, a }) {
        /**
         * Provides simple hue-saturation-lightness-alpha color data.
         *
         * 0
         */
        this.h = h;
        /**
         * Provides simple hue-saturation-lightness-alpha color data.
         *
         * 0
         */
        this.s = s;
        /**
         * Provides simple hue-saturation-lightness-alpha color data.
         *
         * 1
         */
        this.l = l;
        /**
         * Provides simple hue-saturation-lightness-alpha color data.
         *
         * 0.9599999785423279
         */
        this.a = a;
    }
}

module.exports.Color = Color;

const { colorToCss, colorToLowFidelityCss } = require('@diez/web-sdk-common');

Object.defineProperties(Color.prototype, {
    color: {
        get() {
            return colorToCss(this);
        },
    },
    lowFidelityColor: {
        get() {
            return colorToLowFidelityCss(this);
        },
    },
    colorStyle: {
        get() {
            return {
                color: this.color,
            };
        },
    },
    backgroundColorStyle: {
        get() {
            return {
                backgroundColor: this.color,
            };
        },
    },
    borderColorStyle: {
        get() {
            return {
                borderColor: this.color,
            };
        },
    },
    outlineColorStyle: {
        get() {
            return {
                outlineColor: this.color,
            };
        },
    },
});

class Theme {
    constructor({
        dark_primary = { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
        dark_secondary = { h: 0, s: 0, l: 1, a: 0.5600000023841858 },
        dark_tertiary = { h: 0, s: 0, l: 1, a: 0.2800000011920929 },
        dark_paragraph = { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
        dark_inverse = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        dark_success = { h: 0.363849765258216, s: 0.663551401869159, l: 0.41960784313725485, a: 1 },
        dark_warning = { h: 0.058868501529051986, s: 0.956140350877193, l: 0.5529411764705883, a: 1 },
        dark_critical = { h: 0.9840823970037453, s: 1, l: 0.6509803921568628, a: 1 },
        dark_sber = { h: 0.363849765258216, s: 0.663551401869159, l: 0.41960784313725485, a: 1 },
        dark_eva = { h: 0.5668103448275862, s: 0.9586776859504132, l: 0.5254901960784314, a: 1 },
        dark_joy = { h: 0.7669082125603864, s: 0.9324324324324325, l: 0.7098039215686274, a: 1 },
        dark_brand = { h: 0.608433734939759, s: 1, l: 0.6745098039215687, a: 1 },
        dark_b2e = { h: 0.363849765258216, s: 0.663551401869159, l: 0.41960784313725485, a: 1 },
        dark_bg = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        dark_overlay = { h: 0, s: 0, l: 0, a: 0.8 },
        dark_bg_primary = { h: 0, s: 0, l: 0.09019607843137255, a: 1 },
        dark_bg_secondary = { h: 0, s: 0, l: 0.13725490196078433, a: 1 },
        dark_bg_tertiary = { h: 0, s: 0, l: 0.21176470588235294, a: 1 },
        dark_surface_Liquid01 = { h: 0, s: 0, l: 1, a: 0.06 },
        dark_surface_Liquid02 = { h: 0, s: 0, l: 1, a: 0.12 },
        dark_surface_Liquid03 = { h: 0, s: 0, l: 1, a: 0.2 },
        dark_surface_solid01 = { h: 0, s: 0, l: 0.09019607843137255, a: 1 },
        dark_surface_solid02 = { h: 0, s: 0, l: 0.13725490196078433, a: 1 },
        dark_surface_solid03 = { h: 0, s: 0, l: 0.21176470588235294, a: 1 },
        dark_surface_card = { h: 0, s: 0, l: 1, a: 0.12 },
        dark_button_sber = { h: 0.36351706036745407, s: 0.6580310880829016, l: 0.3784313725490196, a: 1 },
        dark_button_eva = { h: 0.5671191553544496, s: 0.9404255319148936, l: 0.4607843137254902, a: 1 },
        dark_button_joy = { h: 0.7662337662337663, s: 0.8651685393258426, l: 0.6509803921568627, a: 1 },
        dark_button_brand = { h: 0.6087719298245614, s: 0.9793814432989691, l: 0.6196078431372549, a: 1 },
        dark_button_b2e = { h: 0.36351706036745407, s: 0.6580310880829016, l: 0.3784313725490196, a: 1 },
        dark_button_primary = { h: 0, s: 0, l: 1, a: 1 },
        dark_button_secondary = { h: 0, s: 0, l: 1, a: 0.11999999731779099 },
        dark_button_success = { h: 0.36351706036745407, s: 0.6580310880829016, l: 0.3784313725490196, a: 1 },
        dark_button_warning = { h: 0.06148148148148147, s: 0.9825327510917031, l: 0.4490196078431372, a: 1 },
        dark_button_critical = { h: 0.9832535885167464, s: 1, l: 0.5901960784313726, a: 1 },
        dark_button_checked = { h: 0, s: 0, l: 1, a: 1 },
        dark_focus_sber = { h: 0.36351706036745407, s: 0.6580310880829016, l: 0.3784313725490196, a: 1 },
        dark_focus_eva = { h: 0.5671191553544496, s: 0.9404255319148936, l: 0.4607843137254902, a: 1 },
        dark_focus_joy = { h: 0.7662337662337663, s: 0.8651685393258426, l: 0.6509803921568627, a: 1 },
        dark_focus_brand = { h: 0.6087719298245614, s: 0.9793814432989691, l: 0.6196078431372549, a: 1 },
        dark_focus_b2e = { h: 0.36351706036745407, s: 0.6580310880829016, l: 0.3784313725490196, a: 1 },
        dark_speech_bubble_sent = { h: 0, s: 0, l: 0, a: 0.28 },
        dark_speech_bubble_received = { h: 0, s: 0, l: 1, a: 0.12 },
        light_primary = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        light_secondary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.5600000023841858 },
        light_tertiary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.2800000011920929 },
        light_paragraph = { h: 0, s: 0, l: 0.03137254901960784, a: 0.800000011920929 },
        light_inverse = { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
        light_success = { h: 0.36388888888888893, s: 0.821917808219178, l: 0.2862745098039216, a: 1 },
        light_warning = { h: 0.06140350877192982, s: 1, l: 0.40980392156862744, a: 1 },
        light_critical = { h: 0.9832535885167464, s: 0.8530612244897959, l: 0.48039215686274506, a: 1 },
        light_sber = { h: 0.36388888888888893, s: 0.821917808219178, l: 0.2862745098039216, a: 1 },
        light_eva = { h: 0.5664621676891616, s: 0.8190954773869348, l: 0.39019607843137255, a: 1 },
        light_joy = { h: 0.7674418604651163, s: 0.7678571428571428, l: 0.5607843137254902, a: 1 },
        light_brand = { h: 0.6093189964157706, s: 0.7685950413223139, l: 0.5254901960784314, a: 1 },
        light_b2e = { h: 0.36388888888888893, s: 0.821917808219178, l: 0.2862745098039216, a: 1 },
        light_bg = { h: 0, s: 0, l: 1, a: 1 },
        light_overlay = { h: 0, s: 0, l: 0, a: 0.8 },
        light_bg_primary = { h: 0, s: 0, l: 1, a: 1 },
        light_bg_secondary = { h: 0, s: 0, l: 1, a: 1 },
        light_bg_tertiary = { h: 0, s: 0, l: 1, a: 1 },
        light_surface_Liquid01 = { h: 0, s: 0, l: 0.03137254901960784, a: 0.02 },
        light_surface_Liquid02 = { h: 0, s: 0, l: 0.03137254901960784, a: 0.06 },
        light_surface_Liquid03 = { h: 0, s: 0, l: 0.03137254901960784, a: 0.12 },
        light_surface_solid01 = { h: 0, s: 0, l: 0.9803921568627451, a: 1 },
        light_surface_solid02 = { h: 0, s: 0, l: 0.9411764705882353, a: 1 },
        light_surface_solid03 = { h: 0, s: 0, l: 0.8823529411764706, a: 1 },
        light_surface_card = { h: 0, s: 0, l: 1, a: 1 },
        light_button_sber = { h: 0.36449864498644985, s: 0.7546012269938651, l: 0.3196078431372549, a: 1 },
        light_button_eva = { h: 0.5664983164983165, s: 0.9428571428571428, l: 0.411764705882353, a: 1 },
        light_button_joy = { h: 0.7662942271880819, s: 0.8994974874371859, l: 0.6098039215686275, a: 1 },
        light_button_brand = { h: 0.6084142394822006, s: 0.9363636363636365, l: 0.5686274509803921, a: 1 },
        light_button_b2e = { h: 0.36449864498644985, s: 0.7546012269938651, l: 0.3196078431372549, a: 1 },
        light_button_primary = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        light_button_secondary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.05999999865889549 },
        light_button_success = { h: 0.36449864498644985, s: 0.7546012269938651, l: 0.3196078431372549, a: 1 },
        light_button_warning = { h: 0.06148148148148147, s: 0.9825327510917031, l: 0.4490196078431372, a: 1 },
        light_button_critical = { h: 0.9830246913580246, s: 0.8999999999999999, l: 0.5294117647058824, a: 1 },
        light_button_checked = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        light_focus_sber = { h: 0.36449864498644985, s: 0.7546012269938651, l: 0.3196078431372549, a: 1 },
        light_focus_eva = { h: 0.5664983164983165, s: 0.9428571428571428, l: 0.411764705882353, a: 1 },
        light_focus_joy = { h: 0.7662942271880819, s: 0.8994974874371859, l: 0.6098039215686275, a: 1 },
        light_focus_brand = { h: 0.6084142394822006, s: 0.9363636363636365, l: 0.5686274509803921, a: 1 },
        light_focus_b2e = { h: 0.36449864498644985, s: 0.7546012269938651, l: 0.3196078431372549, a: 1 },
        light_speech_bubble_sent = { h: 0, s: 0, l: 0.03137254901960784, a: 0.4 },
        light_speech_bubble_received = { h: 0, s: 0, l: 0, a: 0.02 },
    } = {}) {
        /**
         * `PlasmaStylesColors.textIconsPrimary1` ( hsla(0, 0, 1, 0.96) )
         */
        this.dark_primary = new Color(dark_primary);
        /**
         * `PlasmaStylesColors.textIconsSecondary1` ( hsla(0, 0, 1, 0.56) )
         */
        this.dark_secondary = new Color(dark_secondary);
        /**
         * `PlasmaStylesColors.textIconsTertiary` ( hsla(0, 0, 1, 0.28) )
         */
        this.dark_tertiary = new Color(dark_tertiary);
        /**
         * `PlasmaStylesColors.textIconsParagraph1` ( hsla(0, 0, 1, 0.96) )
         */
        this.dark_paragraph = new Color(dark_paragraph);
        /**
         * `PlasmaStylesColors.textIconsInverse1` ( hsla(0, 0, 0.03, 1) )
         */
        this.dark_inverse = new Color(dark_inverse);
        /**
         * `PlasmaStylesColors.textIconsStatusSuccess1` ( hsla(0.36, 0.66, 0.42, 1) )
         */
        this.dark_success = new Color(dark_success);
        /**
         * `PlasmaStylesColors.textIconsStatusWarning1` ( hsla(0.06, 0.96, 0.55, 1) )
         */
        this.dark_warning = new Color(dark_warning);
        /**
         * `PlasmaStylesColors.textIconsStatusCritical1` ( hsla(0.98, 1, 0.65, 1) )
         */
        this.dark_critical = new Color(dark_critical);
        /**
         * `PlasmaStylesColors.textIconsAccentSber1` ( hsla(0.36, 0.66, 0.42, 1) )
         */
        this.dark_sber = new Color(dark_sber);
        /**
         * `PlasmaStylesColors.textIconsAccentAthena1` ( hsla(0.57, 0.96, 0.53, 1) )
         */
        this.dark_eva = new Color(dark_eva);
        /**
         * `PlasmaStylesColors.textIconsAccentJoy1` ( hsla(0.77, 0.93, 0.71, 1) )
         */
        this.dark_joy = new Color(dark_joy);
        /**
         * `PlasmaStylesColors.textIconsAccentBrand1` ( hsla(0.61, 1, 0.67, 1) )
         */
        this.dark_brand = new Color(dark_brand);
        /**
         * `PlasmaStylesColors.textIconsAccentB2E1` ( hsla(0.36, 0.66, 0.42, 1) )
         */
        this.dark_b2e = new Color(dark_b2e);
        /**
         * `PlasmaStylesColors.backgroundDefault` ( hsla(0, 0, 0.03, 1) )
         */
        this.dark_bg = new Color(dark_bg);
        /**
         * hsla(0, 0, 0, 0.8)
         */
        this.dark_overlay = new Color(dark_overlay);
        /**
         * hsla(0, 0, 0.09, 1)
         */
        this.dark_bg_primary = new Color(dark_bg_primary);
        /**
         * hsla(0, 0, 0.14, 1)
         */
        this.dark_bg_secondary = new Color(dark_bg_secondary);
        /**
         * hsla(0, 0, 0.21, 1)
         */
        this.dark_bg_tertiary = new Color(dark_bg_tertiary);
        /**
         * hsla(0, 0, 1, 0.06)
         */
        this.dark_surface_Liquid01 = new Color(dark_surface_Liquid01);
        /**
         * hsla(0, 0, 1, 0.12)
         */
        this.dark_surface_Liquid02 = new Color(dark_surface_Liquid02);
        /**
         * hsla(0, 0, 1, 0.2)
         */
        this.dark_surface_Liquid03 = new Color(dark_surface_Liquid03);
        /**
         * hsla(0, 0, 0.09, 1)
         */
        this.dark_surface_solid01 = new Color(dark_surface_solid01);
        /**
         * hsla(0, 0, 0.14, 1)
         */
        this.dark_surface_solid02 = new Color(dark_surface_solid02);
        /**
         * hsla(0, 0, 0.21, 1)
         */
        this.dark_surface_solid03 = new Color(dark_surface_solid03);
        /**
         * hsla(0, 0, 1, 0.12)
         */
        this.dark_surface_card = new Color(dark_surface_card);
        /**
         * `PlasmaStylesColors.buttonPrimarySber1` ( hsla(0.36, 0.66, 0.38, 1) )
         */
        this.dark_button_sber = new Color(dark_button_sber);
        /**
         * `PlasmaStylesColors.buttonPrimaryAthena1` ( hsla(0.57, 0.94, 0.46, 1) )
         */
        this.dark_button_eva = new Color(dark_button_eva);
        /**
         * `PlasmaStylesColors.buttonPrimaryJoy1` ( hsla(0.77, 0.87, 0.65, 1) )
         */
        this.dark_button_joy = new Color(dark_button_joy);
        /**
         * `PlasmaStylesColors.buttonPrimaryBrand1` ( hsla(0.61, 0.98, 0.62, 1) )
         */
        this.dark_button_brand = new Color(dark_button_brand);
        /**
         * `PlasmaStylesColors.buttonPrimaryB2E1` ( hsla(0.36, 0.66, 0.38, 1) )
         */
        this.dark_button_b2e = new Color(dark_button_b2e);
        /**
         * `PlasmaStylesColors.buttonPrimaryDefault1` ( hsla(0, 0, 1, 1) )
         */
        this.dark_button_primary = new Color(dark_button_primary);
        /**
         * `PlasmaStylesColors.buttonSecondaryDefault1` ( hsla(0, 0, 1, 0.12) )
         */
        this.dark_button_secondary = new Color(dark_button_secondary);
        /**
         * `PlasmaStylesColors.buttonStatusSuccess1` ( hsla(0.36, 0.66, 0.38, 1) )
         */
        this.dark_button_success = new Color(dark_button_success);
        /**
         * `PlasmaStylesColors.buttonStatusWarning` ( hsla(0.06, 0.98, 0.45, 1) )
         */
        this.dark_button_warning = new Color(dark_button_warning);
        /**
         * `PlasmaStylesColors.buttonStatusCritical1` ( hsla(0.98, 1, 0.59, 1) )
         */
        this.dark_button_critical = new Color(dark_button_critical);
        /**
         * `PlasmaStylesColors.buttonStatusChecked1` ( hsla(0, 0, 1, 1) )
         */
        this.dark_button_checked = new Color(dark_button_checked);
        /**
         * `PlasmaStylesColors.buttonPrimarySber1` ( hsla(0.36, 0.66, 0.38, 1) )
         */
        this.dark_focus_sber = new Color(dark_focus_sber);
        /**
         * `PlasmaStylesColors.buttonPrimaryAthena1` ( hsla(0.57, 0.94, 0.46, 1) )
         */
        this.dark_focus_eva = new Color(dark_focus_eva);
        /**
         * `PlasmaStylesColors.buttonPrimaryJoy1` ( hsla(0.77, 0.87, 0.65, 1) )
         */
        this.dark_focus_joy = new Color(dark_focus_joy);
        /**
         * `PlasmaStylesColors.buttonPrimaryBrand1` ( hsla(0.61, 0.98, 0.62, 1) )
         */
        this.dark_focus_brand = new Color(dark_focus_brand);
        /**
         * `PlasmaStylesColors.buttonPrimaryB2E1` ( hsla(0.36, 0.66, 0.38, 1) )
         */
        this.dark_focus_b2e = new Color(dark_focus_b2e);
        /**
         * hsla(0, 0, 0, 0.28)
         */
        this.dark_speech_bubble_sent = new Color(dark_speech_bubble_sent);
        /**
         * hsla(0, 0, 1, 0.12)
         */
        this.dark_speech_bubble_received = new Color(dark_speech_bubble_received);
        /**
         * `PlasmaStylesColors.textIconsPrimary4` ( hsla(0, 0, 0.03, 1) )
         */
        this.light_primary = new Color(light_primary);
        /**
         * `PlasmaStylesColors.textIconsSecondary4` ( hsla(0, 0, 0.03, 0.56) )
         */
        this.light_secondary = new Color(light_secondary);
        /**
         * `PlasmaStylesColors.textIconsTertiary1` ( hsla(0, 0, 0.03, 0.28) )
         */
        this.light_tertiary = new Color(light_tertiary);
        /**
         * `PlasmaStylesColors.textIconsParagraph` ( hsla(0, 0, 0.03, 0.8) )
         */
        this.light_paragraph = new Color(light_paragraph);
        /**
         * `PlasmaStylesColors.textIconsInverse` ( hsla(0, 0, 1, 0.96) )
         */
        this.light_inverse = new Color(light_inverse);
        /**
         * `PlasmaStylesColors.textIconsStatusSuccess` ( hsla(0.36, 0.82, 0.29, 1) )
         */
        this.light_success = new Color(light_success);
        /**
         * `PlasmaStylesColors.textIconsStatusWarning` ( hsla(0.06, 1, 0.41, 1) )
         */
        this.light_warning = new Color(light_warning);
        /**
         * `PlasmaStylesColors.textIconsStatusCritical` ( hsla(0.98, 0.85, 0.48, 1) )
         */
        this.light_critical = new Color(light_critical);
        /**
         * `PlasmaStylesColors.textIconsAccentSber` ( hsla(0.36, 0.82, 0.29, 1) )
         */
        this.light_sber = new Color(light_sber);
        /**
         * `PlasmaStylesColors.textIconsAccentAthena` ( hsla(0.57, 0.82, 0.39, 1) )
         */
        this.light_eva = new Color(light_eva);
        /**
         * `PlasmaStylesColors.textIconsAccentJoy` ( hsla(0.77, 0.77, 0.56, 1) )
         */
        this.light_joy = new Color(light_joy);
        /**
         * `PlasmaStylesColors.textIconsAccentBrand` ( hsla(0.61, 0.77, 0.53, 1) )
         */
        this.light_brand = new Color(light_brand);
        /**
         * `PlasmaStylesColors.textIconsAccentB2E` ( hsla(0.36, 0.82, 0.29, 1) )
         */
        this.light_b2e = new Color(light_b2e);
        /**
         * hsla(0, 0, 1, 1)
         */
        this.light_bg = new Color(light_bg);
        /**
         * hsla(0, 0, 0, 0.8)
         */
        this.light_overlay = new Color(light_overlay);
        /**
         * hsla(0, 0, 1, 1)
         */
        this.light_bg_primary = new Color(light_bg_primary);
        /**
         * hsla(0, 0, 1, 1)
         */
        this.light_bg_secondary = new Color(light_bg_secondary);
        /**
         * hsla(0, 0, 1, 1)
         */
        this.light_bg_tertiary = new Color(light_bg_tertiary);
        /**
         * hsla(0, 0, 0.03, 0.02)
         */
        this.light_surface_Liquid01 = new Color(light_surface_Liquid01);
        /**
         * hsla(0, 0, 0.03, 0.06)
         */
        this.light_surface_Liquid02 = new Color(light_surface_Liquid02);
        /**
         * hsla(0, 0, 0.03, 0.12)
         */
        this.light_surface_Liquid03 = new Color(light_surface_Liquid03);
        /**
         * hsla(0, 0, 0.98, 1)
         */
        this.light_surface_solid01 = new Color(light_surface_solid01);
        /**
         * hsla(0, 0, 0.94, 1)
         */
        this.light_surface_solid02 = new Color(light_surface_solid02);
        /**
         * hsla(0, 0, 0.88, 1)
         */
        this.light_surface_solid03 = new Color(light_surface_solid03);
        /**
         * hsla(0, 0, 1, 1)
         */
        this.light_surface_card = new Color(light_surface_card);
        /**
         * `PlasmaStylesColors.buttonPrimarySber` ( hsla(0.36, 0.75, 0.32, 1) )
         */
        this.light_button_sber = new Color(light_button_sber);
        /**
         * `PlasmaStylesColors.buttonPrimaryAthena` ( hsla(0.57, 0.94, 0.41, 1) )
         */
        this.light_button_eva = new Color(light_button_eva);
        /**
         * `PlasmaStylesColors.buttonPrimaryJoy` ( hsla(0.77, 0.9, 0.61, 1) )
         */
        this.light_button_joy = new Color(light_button_joy);
        /**
         * `PlasmaStylesColors.buttonPrimaryBrand` ( hsla(0.61, 0.94, 0.57, 1) )
         */
        this.light_button_brand = new Color(light_button_brand);
        /**
         * `PlasmaStylesColors.buttonPrimaryB2E` ( hsla(0.36, 0.75, 0.32, 1) )
         */
        this.light_button_b2e = new Color(light_button_b2e);
        /**
         * `PlasmaStylesColors.buttonPrimaryDefault` ( hsla(0, 0, 0.03, 1) )
         */
        this.light_button_primary = new Color(light_button_primary);
        /**
         * `PlasmaStylesColors.buttonSecondaryDefault` ( hsla(0, 0, 0.03, 0.06) )
         */
        this.light_button_secondary = new Color(light_button_secondary);
        /**
         * `PlasmaStylesColors.buttonStatusSuccess` ( hsla(0.36, 0.75, 0.32, 1) )
         */
        this.light_button_success = new Color(light_button_success);
        /**
         * `PlasmaStylesColors.buttonStatusWarning` ( hsla(0.06, 0.98, 0.45, 1) )
         */
        this.light_button_warning = new Color(light_button_warning);
        /**
         * `PlasmaStylesColors.buttonStatusCritical` ( hsla(0.98, 0.9, 0.53, 1) )
         */
        this.light_button_critical = new Color(light_button_critical);
        /**
         * `PlasmaStylesColors.buttonStatusChecked` ( hsla(0, 0, 0.03, 1) )
         */
        this.light_button_checked = new Color(light_button_checked);
        /**
         * `PlasmaStylesColors.buttonPrimarySber` ( hsla(0.36, 0.75, 0.32, 1) )
         */
        this.light_focus_sber = new Color(light_focus_sber);
        /**
         * `PlasmaStylesColors.buttonPrimaryAthena` ( hsla(0.57, 0.94, 0.41, 1) )
         */
        this.light_focus_eva = new Color(light_focus_eva);
        /**
         * `PlasmaStylesColors.buttonPrimaryJoy` ( hsla(0.77, 0.9, 0.61, 1) )
         */
        this.light_focus_joy = new Color(light_focus_joy);
        /**
         * `PlasmaStylesColors.buttonPrimaryBrand` ( hsla(0.61, 0.94, 0.57, 1) )
         */
        this.light_focus_brand = new Color(light_focus_brand);
        /**
         * `PlasmaStylesColors.buttonPrimaryB2E` ( hsla(0.36, 0.75, 0.32, 1) )
         */
        this.light_focus_b2e = new Color(light_focus_b2e);
        /**
         * hsla(0, 0, 0.03, 0.4)
         */
        this.light_speech_bubble_sent = new Color(light_speech_bubble_sent);
        /**
         * hsla(0, 0, 0, 0.02)
         */
        this.light_speech_bubble_received = new Color(light_speech_bubble_received);
    }
}

module.exports.Theme = Theme;

class Colors {
    constructor({
        white_primary = { h: 0, s: 0, l: 1, a: 1 },
        white_secondary = { h: 0, s: 0, l: 1, a: 0.5600000023841858 },
        white_tertiary = { h: 0, s: 0, l: 1, a: 0.2800000011920929 },
        black_primary = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        black_secondary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.5600000023841858 },
        black_tertiary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.2800000011920929 },
        white = { h: 0, s: 0, l: 1, a: 1 },
        black = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        dark01 = { h: 0, s: 0, l: 0.09019607843137255, a: 1 },
        dark02 = { h: 0, s: 0, l: 0.13725490196078433, a: 1 },
        dark03 = { h: 0, s: 0, l: 0.21176470588235294, a: 1 },
        transparent = { h: 0, s: 0, l: 0, a: 0 },
        button_clear = { h: 0, s: 0, l: 0, a: 0 },
        button_black = { h: 0, s: 0, l: 0.03137254901960784, a: 1 },
        button_black_secondary = { h: 0, s: 0, l: 0.03137254901960784, a: 0.11999999731779099 },
        button_black_transparent = { h: 0, s: 0, l: 0.03137254901960784, a: 0.5600000023841858 },
        button_white = { h: 0, s: 0, l: 1, a: 1 },
        button_white_secondary = { h: 0, s: 0, l: 1, a: 0.11999999731779099 },
    } = {}) {
        /**
         * `PlasmaStylesColors.textIconsGlblWhitePrimary` ( hsla(0, 0, 1, 1) )
         */
        this.white_primary = new Color(white_primary);
        /**
         * `PlasmaStylesColors.textIconsGlblWhiteSecondary` ( hsla(0, 0, 1, 0.56) )
         */
        this.white_secondary = new Color(white_secondary);
        /**
         * `PlasmaStylesColors.textIconsGlblWhiteTetriary` ( hsla(0, 0, 1, 0.28) )
         */
        this.white_tertiary = new Color(white_tertiary);
        /**
         * `PlasmaStylesColors.textIconsGlblBlackPrimary` ( hsla(0, 0, 0.03, 1) )
         */
        this.black_primary = new Color(black_primary);
        /**
         * `PlasmaStylesColors.textIconsGblBlackSecondary` ( hsla(0, 0, 0.03, 0.56) )
         */
        this.black_secondary = new Color(black_secondary);
        /**
         * `PlasmaStylesColors.textIconsGlblBlackTetriary` ( hsla(0, 0, 0.03, 0.28) )
         */
        this.black_tertiary = new Color(black_tertiary);
        /**
         * `PlasmaStylesColors.textIconsGlblWhitePrimary` ( hsla(0, 0, 1, 1) )
         */
        this.white = new Color(white);
        /**
         * `PlasmaStylesColors.textIconsGblBlackPrimary` ( hsla(0, 0, 0.03, 1) )
         */
        this.black = new Color(black);
        /**
         * hsla(0, 0, 0.09, 1)
         */
        this.dark01 = new Color(dark01);
        /**
         * hsla(0, 0, 0.14, 1)
         */
        this.dark02 = new Color(dark02);
        /**
         * hsla(0, 0, 0.21, 1)
         */
        this.dark03 = new Color(dark03);
        /**
         * hsla(0, 0, 0, 0)
         */
        this.transparent = new Color(transparent);
        /**
         * hsla(0, 0, 0, 0)
         */
        this.button_clear = new Color(button_clear);
        /**
         * `PlasmaStylesColors.buttonGlblBlackDefault` ( hsla(0, 0, 0.03, 1) )
         */
        this.button_black = new Color(button_black);
        /**
         * `PlasmaStylesColors.buttonGlblBlackSecondary` ( hsla(0, 0, 0.03, 0.12) )
         */
        this.button_black_secondary = new Color(button_black_secondary);
        /**
         * `PlasmaStylesColors.buttonGlblBlackTransparent` ( hsla(0, 0, 0.03, 0.56) )
         */
        this.button_black_transparent = new Color(button_black_transparent);
        /**
         * `PlasmaStylesColors.buttonGblWhiteDefault` ( hsla(0, 0, 1, 1) )
         */
        this.button_white = new Color(button_white);
        /**
         * `PlasmaStylesColors.buttonGblWhiteSecondary` ( hsla(0, 0, 1, 0.12) )
         */
        this.button_white_secondary = new Color(button_white_secondary);
    }
}

module.exports.Colors = Colors;

/**
 * Provides a container for referencing local assets, which can be bridged by compilers to embed images, SVGs,
 * and more. This component is used internally by [[Image]] and [[Font]].
 *
 * The compiler may enforce certain restrictions on the `type` of a `File` instance.
 *
 * Usage: `file = new File({src: 'assets/images/file.jpg', type: FileType.Image});`.
 *
 */
class File {
    constructor({ src, type }) {
        /**
         * File data.
         *
         * assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf
         */
        this.src = src;
        /**
         * File data.
         *
         * font
         */
        this.type = type;
    }
}

module.exports.File = File;

Object.defineProperties(File.prototype, {
    url: {
        get() {
            return `${Environment.serverUrl}/${this.src}`;
        },
    },
});

/**
 * A representation of a font resource, with a reference to a [[File]] containing a TTF or OTF font file.
 *
 */
class Font {
    constructor({ file, name, fallbacks, weight, style }) {
        /**
         * Font data.
         *
         * assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf
         */
        this.file = new File(file);
        /**
         * Font data.
         *
         * SBSansText-Medium
         */
        this.name = name;
        /**
         * Font data.
         *
         * [Helvetica,Arial,sans-serif]
         */
        this.fallbacks = fallbacks;
        /**
         * Font data.
         *
         * 400
         */
        this.weight = weight;
        /**
         * Font data.
         *
         * normal
         */
        this.style = style;
    }
}

module.exports.Font = Font;

/**
 * Describes a typograph including specification of a font name (understood to specify both a font face and a font
 * weight) as well as a font size in device-local units and a font color.
 *
 */
class Typograph {
    constructor({ font, fontSize, color, lineHeight, letterSpacing, alignment, decoration }) {
        /**
         * Typograph data.
         *
         * SBSansText-Medium, 400, normal
         */
        this.font = new Font(font);
        /**
         * Typograph data.
         *
         * 96
         */
        this.fontSize = fontSize;
        /**
         * Typograph data.
         *
         * hsla(0, 0, 1, 0.96)
         */
        this.color = new Color(color);
        /**
         * Typograph data.
         *
         * 96
         */
        this.lineHeight = lineHeight;
        /**
         * Typograph data.
         *
         * -1.8239999771118165
         */
        this.letterSpacing = letterSpacing;
        /**
         * Typograph data.
         *
         * natural
         */
        this.alignment = alignment;
        /**
         * Typograph data.
         *
         * []
         */
        this.decoration = decoration;
    }
}

module.exports.Typograph = Typograph;

const {
    fontToCss,
    FontFormats,
    textAlignmentToCss,
    textDecorationsToCss,
    GoogleFontCollection,
    GoogleFont,
} = require('@diez/web-sdk-common');

let styleSheet;
let cache;
const googleFontCollection = new GoogleFontCollection();

const registerFont = (font) => {
    if (!styleSheet || !cache) {
        const styleEl = document.createElement('style');
        document.head.appendChild(styleEl);
        styleSheet = styleEl.sheet;
        cache = new Set();
    }

    if (cache.has(font.file.src)) {
        return;
    }

    if (GoogleFont.isGoogleFont(font)) {
        googleFontCollection.set(font.name, { weight: font.weight, style: font.style });
        styleSheet.insertRule(`@import url(${collection.url})`);
        cache.add(font.file.src);
        return;
    }

    const format = font.file.src.split('.').pop();
    const rule = `
@font-face {
  font-family: '${font.name}';
  font-weight: ${font.weight};
  font-style: ${font.style};
  src: local('${font.name}'), url(${font.file.url}) format('${FontFormats[format] || format}');
}`;
    styleSheet.insertRule(rule);
    cache.add(font.file.src);
};

Object.defineProperties(Typograph.prototype, {
    fontFamily: {
        get() {
            registerFont(this.font);
            return fontToCss(this.font);
        },
    },
    style: {
        get() {
            const style = {
                fontFamily: this.fontFamily,
                fontWeight: this.font.fontWeight,
                fontStyle: this.font.fontStyle,
                fontSize: `${this.fontSize}px`,
                color: this.color.color,
                letterSpacing: `${this.letterSpacing}px`,
                textAlign: textAlignmentToCss(this.alignment),
                textDecoration: textDecorationsToCss(this.decoration),
            };
            if (this.lineHeight !== -1) {
                style.lineHeight = `${this.lineHeight}px`;
            }
            return style;
        },
    },
});

Typograph.prototype.applyStyle = function (ref) {
    const style = this.style;
    ref.style.fontFamily = style.fontFamily;
    ref.style.fontWeight = style.fontWeight;
    ref.style.fontStyle = style.fontStyle;
    ref.style.fontSize = style.fontSize;
    ref.style.color = style.color;
    ref.style.lineHeight = style.lineHeight;
    ref.style.letterSpacing = style.letterSpacing;
    ref.style.textAlign = style.textAlign;
};

diezHTMLExtensions.push(() => {
    HTMLElement.prototype.applyTypograph = (typograph) => {
        typograph.applyStyle(this);
    };
});

class Typography {
    constructor({
        display1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 96,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 96,
            letterSpacing: -1.8239999771118165,
            alignment: 'natural',
            decoration: [],
        },
        display2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 60,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 64,
            letterSpacing: -1.1399999856948855,
            alignment: 'natural',
            decoration: [],
        },
        display3 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 48,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 52,
            letterSpacing: 0,
            alignment: 'natural',
            decoration: [],
        },
        headline1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Bold.otf', type: 'font' },
                name: 'SBSansText-Bold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 32,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 36,
            letterSpacing: -0.35200000762939454,
            alignment: 'natural',
            decoration: [],
        },
        headline2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 24,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 28,
            letterSpacing: -0.5280000114440918,
            alignment: 'natural',
            decoration: [],
        },
        headline3 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 20,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 24,
            letterSpacing: -0.5,
            alignment: 'natural',
            decoration: [],
        },
        headline4 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Bold.otf', type: 'font' },
                name: 'SBSansText-Bold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 20,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 24,
            letterSpacing: -0.5,
            alignment: 'natural',
            decoration: [],
        },
        body1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.2800000011920929 },
            lineHeight: 20,
            letterSpacing: -0.30399999618530277,
            alignment: 'natural',
            decoration: [],
        },
        body2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 20,
            letterSpacing: -0.30399999618530277,
            alignment: 'natural',
            decoration: [],
        },
        body3 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Bold.otf', type: 'font' },
                name: 'SBSansText-Bold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 20,
            letterSpacing: -0.30399999618530277,
            alignment: 'natural',
            decoration: [],
        },
        paragraph1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Regular.otf', type: 'font' },
                name: 'SBSansText-Regular',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 22,
            letterSpacing: -0.30399999618530277,
            alignment: 'natural',
            decoration: [],
        },
        paragraph2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 22,
            letterSpacing: -0.30399999618530277,
            alignment: 'natural',
            decoration: [],
        },
        footnote1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 14,
            color: { h: 0, s: 0, l: 1, a: 0.5600000023841858 },
            lineHeight: 18,
            letterSpacing: -0.2659999966621399,
            alignment: 'natural',
            decoration: [],
        },
        footnote2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 14,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 18,
            letterSpacing: -0.2659999966621399,
            alignment: 'natural',
            decoration: [],
        },
        button1 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 16,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 20,
            letterSpacing: 0,
            alignment: 'natural',
            decoration: [],
        },
        button2 = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Semibold.otf', type: 'font' },
                name: 'SBSansText-Semibold',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 14,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 16,
            letterSpacing: 0,
            alignment: 'natural',
            decoration: [],
        },
        caption = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 12,
            color: { h: 0, s: 0, l: 1, a: 0.9599999785423279 },
            lineHeight: 16,
            letterSpacing: -0.2640000057220459,
            alignment: 'natural',
            decoration: [],
        },
        underline = {
            font: {
                file: { src: 'assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf', type: 'font' },
                name: 'SBSansText-Medium',
                fallbacks: ['SBSansText', 'Helvetica', 'Arial', 'sans-serif'],
                weight: 400,
                style: 'normal',
            },
            fontSize: 10,
            color: { h: 0, s: 0, l: 0, a: 1 },
            lineHeight: 12,
            letterSpacing: 0.125,
            alignment: 'natural',
            decoration: [],
        },
    } = {}) {
        /**
         * `PlasmaStylesTypography.sbS9696Display1Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `96`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `96`
         * - letterSpacing: `-1.8239999771118165`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.display1 = new Typograph(display1);
        /**
         * `PlasmaStylesTypography.sbS6064Display2Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `60`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `64`
         * - letterSpacing: `-1.1399999856948855`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.display2 = new Typograph(display2);
        /**
         * `PlasmaStylesTypography.sbS4852Display3Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `48`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `52`
         * - letterSpacing: `0`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.display3 = new Typograph(display3);
        /**
         * `PlasmaStylesTypography.sbS3236Headline1Bold`
         * - font: `SBSansText-Bold, 400, normal`
         * - fontSize: `32`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `36`
         * - letterSpacing: `-0.35200000762939454`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.headline1 = new Typograph(headline1);
        /**
         * `PlasmaStylesTypography.sbS2428Headline2Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `24`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `28`
         * - letterSpacing: `-0.5280000114440918`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.headline2 = new Typograph(headline2);
        /**
         * `PlasmaStylesTypography.sbS2024Headline3Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `20`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `24`
         * - letterSpacing: `-0.5`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.headline3 = new Typograph(headline3);
        /**
         * `PlasmaStylesTypography.sbS2024Headline4Bold`
         * - font: `SBSansText-Bold, 400, normal`
         * - fontSize: `20`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `24`
         * - letterSpacing: `-0.5`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.headline4 = new Typograph(headline4);
        /**
         * `PlasmaStylesTypography.sbS1620Body1Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.28)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `20`
         * - letterSpacing: `-0.30399999618530277`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.body1 = new Typograph(body1);
        /**
         * `PlasmaStylesTypography.sbS1620Body2Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `20`
         * - letterSpacing: `-0.30399999618530277`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.body2 = new Typograph(body2);
        /**
         * `PlasmaStylesTypography.sbS1620Body3Bold`
         * - font: `SBSansText-Bold, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `20`
         * - letterSpacing: `-0.30399999618530277`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.body3 = new Typograph(body3);
        /**
         * `PlasmaStylesTypography.sbS1622ParagraphText1Regular`
         * - font: `SBSansText-Regular, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `22`
         * - letterSpacing: `-0.30399999618530277`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.paragraph1 = new Typograph(paragraph1);
        /**
         * `PlasmaStylesTypography.sbS1622ParagraphText2Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `22`
         * - letterSpacing: `-0.30399999618530277`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.paragraph2 = new Typograph(paragraph2);
        /**
         * `PlasmaStylesTypography.sbS1418Footnote1Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `14`
         * - color: `hsla(0, 0, 1, 0.56)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `18`
         * - letterSpacing: `-0.2659999966621399`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.footnote1 = new Typograph(footnote1);
        /**
         * `PlasmaStylesTypography.sbS1418Footnote2Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `14`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `18`
         * - letterSpacing: `-0.2659999966621399`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.footnote2 = new Typograph(footnote2);
        /**
         * `PlasmaStylesTypography.sbS1620Button1Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `16`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `20`
         * - letterSpacing: `0`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.button1 = new Typograph(button1);
        /**
         * `PlasmaStylesTypography.sbS1416Button2Semibold`
         * - font: `SBSansText-Semibold, 400, normal`
         * - fontSize: `14`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `16`
         * - letterSpacing: `0`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.button2 = new Typograph(button2);
        /**
         * `PlasmaStylesTypography.sbS1216CaptionMedium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `12`
         * - color: `hsla(0, 0, 1, 0.96)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `16`
         * - letterSpacing: `-0.2640000057220459`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.caption = new Typograph(caption);
        /**
         * `PlasmaStylesTypography.sbS1012Medium`
         * - font: `SBSansText-Medium, 400, normal`
         * - fontSize: `10`
         * - color: `hsla(0, 0, 0, 1)`
         * - iosTextStyle: `body`
         * - shouldScale: `false`
         * - lineHeight: `12`
         * - letterSpacing: `0.125`
         * - alignment: `natural`
         * - decoration: `[]`
         */
        this.underline = new Typograph(underline);
    }
}

module.exports.Typography = Typography;

/**
 * Provides a gradient stop.
 *
 */
class GradientStop {
    constructor({ position, color }) {
        /**
         * GradientStop data.
         *
         * 1
         */
        this.position = position;
        /**
         * GradientStop data.
         *
         * hsla(0.53, 0.79, 0.53, 1)
         */
        this.color = new Color(color);
    }
}

module.exports.GradientStop = GradientStop;

/**
 * Provides a two dimensional point.
 *
 * Taken alone, points are designated in an abstract space with no inherit dimensions or directionality. In the
 * context of other prefabs like [[LinearGradient]], points typically should use the standard two dimensional graphics
 * space, often normalized in the unit square, where x increases from left to right and y increases from top to bottom.
 *
 * Usage: `point = Point2D.make(0.5, 0.5);`.
 *
 */
class Point2D {
    constructor({ x, y }) {
        /**
         * Point data.
         *
         * -7.450581e-9
         */
        this.x = x;
        /**
         * Point data.
         *
         * 1.000000007450582
         */
        this.y = y;
    }
}

module.exports.Point2D = Point2D;

/**
 * Provides a linear gradient.
 *
 */
class LinearGradient {
    constructor({ stops, start, end }) {
        this.stops = stops.map((value1) => new GradientStop(value1));
        /**
         * LinearGradient data.
         *
         * [-7.450581e-9, 1.000000007450582]
         */
        this.start = new Point2D(start);
        /**
         * LinearGradient data.
         *
         * [1.000000052180961, -1.52472533e-7]
         */
        this.end = new Point2D(end);
    }
}

module.exports.LinearGradient = LinearGradient;

const { linearGradientToCss } = require('@diez/web-sdk-common');

Object.defineProperties(LinearGradient.prototype, {
    linearGradient: {
        get() {
            return linearGradientToCss(this);
        },
    },
    backgroundImageStyle: {
        get() {
            return {
                backgroundImage: this.linearGradient,
            };
        },
    },
    backgroundStyle: {
        get() {
            return {
                background: this.linearGradient,
            };
        },
    },
});

class Gradients {
    constructor({
        dark_bg_sber = 'linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)',
        dark_bg_eva = 'linear-gradient(336.9deg, #143787 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(110, 5, 193, 0.44) 0%, rgba(53, 19, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(25, 63, 152, 0.41) 99.97%), linear-gradient(270deg, rgba(39, 15, 107, 0.3) 0%, rgba(8, 8, 8, 0) 100%)',
        dark_bg_joy = 'linear-gradient(336.9deg, rgba(255, 156, 101, 0.24) 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(61, 19, 149, 0.34) 0%, rgba(19, 24, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(255, 215, 179, 0.15) 99.97%), linear-gradient(270deg, rgba(107, 15, 87, 0.2) 0%, rgba(8, 8, 8, 0) 100%)',
        dark_bg_brand = '#080808',
        dark_bg_b2e = 'linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)',
        dark_device_sber = 'linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)',
        dark_device_eva = 'linear-gradient(26.05deg, rgba(26, 140, 255, 0.16) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 85, 255, 0.28) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)',
        dark_device_joy = 'linear-gradient(26.05deg, rgba(255, 148, 77, 0.24) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(138, 60, 215, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(89, 22, 215, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)',
        dark_device_brand = '#080808',
        dark_device_b2e = 'linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)',
        dark_voice_phrase_sber = {
            stops: [
                { position: 0, color: { h: 0.3611111111111111, s: 0.7563025210084032, l: 0.4666666666666667, a: 1 } },
                { position: 1, color: { h: 0.5271929824561403, s: 0.7851239669421487, l: 0.5254901960784314, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000052180961, y: -1.52472533e-7 },
        },
        dark_voice_phrase_eva = {
            stops: [
                { position: 0, color: { h: 0.5558823529411765, s: 0.9444444444444445, l: 0.6470588235294117, a: 1 } },
                { position: 1, color: { h: 0.6666666666666666, s: 1, l: 0.8392156862745098, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000052180961, y: -1.52472533e-7 },
        },
        dark_voice_phrase_joy = {
            stops: [
                { position: 0, color: { h: 0.05517241379310345, s: 1, l: 0.7156862745098039, a: 1 } },
                { position: 1, color: { h: 0.8883495145631067, s: 0.9449541284403672, l: 0.7862745098039217, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000052180961, y: -1.52472533e-7 },
        },
        dark_voice_phrase_brand = {
            stops: [
                { position: 0, color: { h: 0.6107660455486542, s: 1, l: 0.6843137254901961, a: 1 } },
                { position: 1, color: { h: 0.5282331511839709, s: 0.9481865284974093, l: 0.6215686274509804, a: 1 } },
            ],
            start: { x: -7.238369e-9, y: 1.000000078130416 },
            end: { x: 1.000000064514712, y: -1.35406766e-7 },
        },
        dark_voice_phrase_b2e = {
            stops: [
                { position: 0, color: { h: 0.3611111111111111, s: 0.7563025210084032, l: 0.4666666666666667, a: 1 } },
                { position: 1, color: { h: 0.5271929824561403, s: 0.7851239669421487, l: 0.5254901960784314, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000052180961, y: -1.52472533e-7 },
        },
        light_bg_sber = 'linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)',
        light_bg_eva = 'linear-gradient(336.9deg, rgba(0, 224, 255, 0.06) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 87, 255, 0.04) 0%, rgba(87, 8, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 224, 255, 0.06) 100%), linear-gradient(270deg, rgba(0, 71, 253, 0.02) 0%, rgba(255, 255, 255, 0) 100%)',
        light_bg_joy = 'linear-gradient(336.9deg, rgba(255, 200, 3, 0.05) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(148, 0, 238, 0.02) 0%, rgba(160, 4, 255, 0.01) 99.69%), linear-gradient(180.03deg, rgba(255, 255, 255, 0) 50%, rgba(255, 184, 0, 0.04) 99.97%), linear-gradient(270deg, rgba(240, 0, 187, 0.03) 0%, rgba(255, 255, 255, 0) 100%)',
        light_bg_brand = '#F5F5F5',
        light_bg_b2e = 'linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)',
        light_device_sber = 'linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)',
        light_device_eva = 'linear-gradient(26.05deg, rgba(26, 178, 255, 0.08) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.08) 0%, rgba(255, 255, 255, 0) 99.69%)',
        light_device_joy = 'linear-gradient(26.05deg, rgba(255, 219, 77, 0.1) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(163, 71, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(140, 26, 255, 0.1) 0%, rgba(255, 255, 255, 0) 99.69%)',
        light_device_brand = '#F5F5F5',
        light_device_b2e = 'linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)',
        light_voice_phrase_sber = {
            stops: [
                { position: 0, color: { h: 0.3611111111111111, s: 0.8526315789473684, l: 0.37254901960784315, a: 1 } },
                { position: 1, color: { h: 0.5276381909547738, s: 1, l: 0.39019607843137255, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000048471611, y: -1.13186606e-7 },
        },
        light_voice_phrase_eva = {
            stops: [
                { position: 0, color: { h: 0.5558333333333333, s: 0.7874015748031497, l: 0.49803921568627446, a: 1 } },
                { position: 1, color: { h: 0.6666666666666666, s: 1, l: 0.7392156862745098, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000048430654, y: -1.2709609e-7 },
        },
        light_voice_phrase_joy = {
            stops: [
                { position: 0, color: { h: 0.08379888268156423, s: 0.9675675675675677, l: 0.6372549019607843, a: 1 } },
                { position: 1, color: { h: 0.8892100192678227, s: 1, l: 0.6607843137254902, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000048157036, y: -2.20020105e-7 },
        },
        light_voice_phrase_brand = {
            stops: [
                { position: 0, color: { h: 0.6114232209737828, s: 0.8557692307692307, l: 0.592156862745098, a: 1 } },
                { position: 1, color: { h: 0.5271929824561403, s: 0.7851239669421487, l: 0.5254901960784314, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000052180961, y: -1.52472533e-7 },
        },
        light_voice_phrase_b2e = {
            stops: [
                { position: 0, color: { h: 0.3611111111111111, s: 0.8526315789473684, l: 0.37254901960784315, a: 1 } },
                { position: 1, color: { h: 0.5276381909547738, s: 1, l: 0.39019607843137255, a: 1 } },
            ],
            start: { x: -7.450581e-9, y: 1.000000007450582 },
            end: { x: 1.000000048471611, y: -1.13186606e-7 },
        },
    } = {}) {
        /**
         * linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)
         */
        this.dark_bg_sber = dark_bg_sber;
        /**
         * linear-gradient(336.9deg, #143787 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(110, 5, 193, 0.44) 0%, rgba(53, 19, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(25, 63, 152, 0.41) 99.97%), linear-gradient(270deg, rgba(39, 15, 107, 0.3) 0%, rgba(8, 8, 8, 0) 100%)
         */
        this.dark_bg_eva = dark_bg_eva;
        /**
         * linear-gradient(336.9deg, rgba(255, 156, 101, 0.24) 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(61, 19, 149, 0.34) 0%, rgba(19, 24, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(255, 215, 179, 0.15) 99.97%), linear-gradient(270deg, rgba(107, 15, 87, 0.2) 0%, rgba(8, 8, 8, 0) 100%)
         */
        this.dark_bg_joy = dark_bg_joy;
        /**
         * #080808
         */
        this.dark_bg_brand = dark_bg_brand;
        /**
         * linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)
         */
        this.dark_bg_b2e = dark_bg_b2e;
        /**
         * linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)
         */
        this.dark_device_sber = dark_device_sber;
        /**
         * linear-gradient(26.05deg, rgba(26, 140, 255, 0.16) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 85, 255, 0.28) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)
         */
        this.dark_device_eva = dark_device_eva;
        /**
         * linear-gradient(26.05deg, rgba(255, 148, 77, 0.24) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(138, 60, 215, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(89, 22, 215, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)
         */
        this.dark_device_joy = dark_device_joy;
        /**
         * #080808
         */
        this.dark_device_brand = dark_device_brand;
        /**
         * linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)
         */
        this.dark_device_b2e = dark_device_b2e;
        /**
         * `PlasmaStylesGradients.textIconsGradientSber1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.36, 0.76, 0.47, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
         */
        this.dark_voice_phrase_sber = new LinearGradient(dark_voice_phrase_sber);
        /**
         * `PlasmaStylesGradients.textIconsGradientAthena1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.56, 0.94, 0.65, 1) at 0,hsla(0.67, 1, 0.84, 1) at 1] )
         */
        this.dark_voice_phrase_eva = new LinearGradient(dark_voice_phrase_eva);
        /**
         * `PlasmaStylesGradients.textIconsGradientJoy1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.06, 1, 0.72, 1) at 0,hsla(0.89, 0.94, 0.79, 1) at 1] )
         */
        this.dark_voice_phrase_joy = new LinearGradient(dark_voice_phrase_joy);
        /**
         * `PlasmaStylesGradients.textIconsGradientBrand1` ( start [-7.238369e-9, 1.000000078130416], end [1.000000064514712, -1.35406766e-7], stops: [hsla(0.61, 1, 0.68, 1) at 0,hsla(0.53, 0.95, 0.62, 1) at 1] )
         */
        this.dark_voice_phrase_brand = new LinearGradient(dark_voice_phrase_brand);
        /**
         * `PlasmaStylesGradients.textIconsGradientB2E1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.36, 0.76, 0.47, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
         */
        this.dark_voice_phrase_b2e = new LinearGradient(dark_voice_phrase_b2e);
        /**
         * linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)
         */
        this.light_bg_sber = light_bg_sber;
        /**
         * linear-gradient(336.9deg, rgba(0, 224, 255, 0.06) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 87, 255, 0.04) 0%, rgba(87, 8, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 224, 255, 0.06) 100%), linear-gradient(270deg, rgba(0, 71, 253, 0.02) 0%, rgba(255, 255, 255, 0) 100%)
         */
        this.light_bg_eva = light_bg_eva;
        /**
         * linear-gradient(336.9deg, rgba(255, 200, 3, 0.05) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(148, 0, 238, 0.02) 0%, rgba(160, 4, 255, 0.01) 99.69%), linear-gradient(180.03deg, rgba(255, 255, 255, 0) 50%, rgba(255, 184, 0, 0.04) 99.97%), linear-gradient(270deg, rgba(240, 0, 187, 0.03) 0%, rgba(255, 255, 255, 0) 100%)
         */
        this.light_bg_joy = light_bg_joy;
        /**
         * #F5F5F5
         */
        this.light_bg_brand = light_bg_brand;
        /**
         * linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)
         */
        this.light_bg_b2e = light_bg_b2e;
        /**
         * linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)
         */
        this.light_device_sber = light_device_sber;
        /**
         * linear-gradient(26.05deg, rgba(26, 178, 255, 0.08) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.08) 0%, rgba(255, 255, 255, 0) 99.69%)
         */
        this.light_device_eva = light_device_eva;
        /**
         * linear-gradient(26.05deg, rgba(255, 219, 77, 0.1) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(163, 71, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(140, 26, 255, 0.1) 0%, rgba(255, 255, 255, 0) 99.69%)
         */
        this.light_device_joy = light_device_joy;
        /**
         * #F5F5F5
         */
        this.light_device_brand = light_device_brand;
        /**
         * linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)
         */
        this.light_device_b2e = light_device_b2e;
        /**
         * `PlasmaStylesGradients.textIconsGradientSber` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048471611, -1.13186606e-7], stops: [hsla(0.36, 0.85, 0.37, 1) at 0,hsla(0.53, 1, 0.39, 1) at 1] )
         */
        this.light_voice_phrase_sber = new LinearGradient(light_voice_phrase_sber);
        /**
         * `PlasmaStylesGradients.textIconsGradientAthena` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048430654, -1.2709609e-7], stops: [hsla(0.56, 0.79, 0.5, 1) at 0,hsla(0.67, 1, 0.74, 1) at 1] )
         */
        this.light_voice_phrase_eva = new LinearGradient(light_voice_phrase_eva);
        /**
         * `PlasmaStylesGradients.textIconsGradientJoy` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048157036, -2.20020105e-7], stops: [hsla(0.08, 0.97, 0.64, 1) at 0,hsla(0.89, 1, 0.66, 1) at 1] )
         */
        this.light_voice_phrase_joy = new LinearGradient(light_voice_phrase_joy);
        /**
         * `PlasmaStylesGradients.textIconsGradientBrand` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.61, 0.86, 0.59, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
         */
        this.light_voice_phrase_brand = new LinearGradient(light_voice_phrase_brand);
        /**
         * `PlasmaStylesGradients.textIconsGradientB2E` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048471611, -1.13186606e-7], stops: [hsla(0.36, 0.85, 0.37, 1) at 0,hsla(0.53, 1, 0.39, 1) at 1] )
         */
        this.light_voice_phrase_b2e = new LinearGradient(light_voice_phrase_b2e);
    }
}

module.exports.Gradients = Gradients;

class DesignLanguage {
    constructor({ theme = {}, colors = {}, typography = {}, gradients = {} } = {}) {
        this.theme = new Theme(theme);
        this.colors = new Colors(colors);
        this.typography = new Typography(typography);
        this.gradients = new Gradients(gradients);
    }
}

Object.defineProperty(DesignLanguage, 'name', { value: 'DesignLanguage' });

module.exports.DesignLanguage = DesignLanguage;
