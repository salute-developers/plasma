// This file was generated with Diez - https://diez.org
// Do not edit this file directly.

export declare class RootComponent {}

export declare class Diez<T extends RootComponent> {
    constructor(baseClass: new () => T);
    readonly component: T;
    static applyHTMLExtensions(): void;
    attach(subscriber: (component: T) => void): void;
}

export declare class Color {
    /**
     * The raw color, suitable for usage in CSS and HTML.
     */
    color: string;
    /**
     * CSS declarations for the `color` CSS property.
     */
    colorStyle: { color: string };
    /**
     * CSS declarations for the `background-color` CSS property.
     */
    backgroundColorStyle: { backgroundColor: string };
    /**
     * CSS declarations for the `border-color` CSS property.
     */
    borderColorStyle: { borderColor: string };
    /**
     * CSS declarations for the `outline-color` CSS property.
     */
    outlineColorStyle: { outlineColor: string };
}

export declare class Theme {
    /**
     * `PlasmaStylesColors.textIconsPrimary1` ( hsla(0, 0, 1, 0.96) )
     */
    dark_primary: Color;
    /**
     * `PlasmaStylesColors.textIconsSecondary1` ( hsla(0, 0, 1, 0.56) )
     */
    dark_secondary: Color;
    /**
     * `PlasmaStylesColors.textIconsTertiary` ( hsla(0, 0, 1, 0.28) )
     */
    dark_tertiary: Color;
    /**
     * `PlasmaStylesColors.textIconsParagraph1` ( hsla(0, 0, 1, 0.96) )
     */
    dark_paragraph: Color;
    /**
     * `PlasmaStylesColors.textIconsInverse1` ( hsla(0, 0, 0.03, 1) )
     */
    dark_inverse: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusSuccess1` ( hsla(0.36, 0.66, 0.42, 1) )
     */
    dark_success: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusWarning1` ( hsla(0.06, 0.96, 0.55, 1) )
     */
    dark_warning: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusCritical1` ( hsla(0.98, 1, 0.65, 1) )
     */
    dark_critical: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentSber1` ( hsla(0.36, 0.66, 0.42, 1) )
     */
    dark_sber: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentAthena1` ( hsla(0.57, 0.96, 0.53, 1) )
     */
    dark_eva: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentJoy1` ( hsla(0.77, 0.93, 0.71, 1) )
     */
    dark_joy: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentBrand1` ( hsla(0.61, 1, 0.67, 1) )
     */
    dark_brand: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentB2E1` ( hsla(0.36, 0.66, 0.42, 1) )
     */
    dark_b2e: Color;
    /**
     * `PlasmaStylesColors.backgroundDefault` ( hsla(0, 0, 0.03, 1) )
     */
    dark_bg: Color;
    /**
     * hsla(0, 0, 0, 0.8)
     */
    dark_overlay: Color;
    /**
     * hsla(0, 0, 0.09, 1)
     */
    dark_bg_primary: Color;
    /**
     * hsla(0, 0, 0.14, 1)
     */
    dark_bg_secondary: Color;
    /**
     * hsla(0, 0, 0.21, 1)
     */
    dark_bg_tertiary: Color;
    /**
     * hsla(0, 0, 1, 0.06)
     */
    dark_surface_Liquid01: Color;
    /**
     * hsla(0, 0, 1, 0.12)
     */
    dark_surface_Liquid02: Color;
    /**
     * hsla(0, 0, 1, 0.2)
     */
    dark_surface_Liquid03: Color;
    /**
     * hsla(0, 0, 0.09, 1)
     */
    dark_surface_solid01: Color;
    /**
     * hsla(0, 0, 0.14, 1)
     */
    dark_surface_solid02: Color;
    /**
     * hsla(0, 0, 0.21, 1)
     */
    dark_surface_solid03: Color;
    /**
     * hsla(0, 0, 1, 0.12)
     */
    dark_surface_card: Color;
    /**
     * `PlasmaStylesColors.buttonPrimarySber1` ( hsla(0.36, 0.66, 0.38, 1) )
     */
    dark_button_sber: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryAthena1` ( hsla(0.57, 0.94, 0.46, 1) )
     */
    dark_button_eva: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryJoy1` ( hsla(0.77, 0.87, 0.65, 1) )
     */
    dark_button_joy: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryBrand1` ( hsla(0.61, 0.98, 0.62, 1) )
     */
    dark_button_brand: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryB2E1` ( hsla(0.36, 0.66, 0.38, 1) )
     */
    dark_button_b2e: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryDefault1` ( hsla(0, 0, 1, 1) )
     */
    dark_button_primary: Color;
    /**
     * `PlasmaStylesColors.buttonSecondaryDefault1` ( hsla(0, 0, 1, 0.12) )
     */
    dark_button_secondary: Color;
    /**
     * `PlasmaStylesColors.buttonStatusSuccess1` ( hsla(0.36, 0.66, 0.38, 1) )
     */
    dark_button_success: Color;
    /**
     * `PlasmaStylesColors.buttonStatusWarning` ( hsla(0.06, 0.98, 0.45, 1) )
     */
    dark_button_warning: Color;
    /**
     * `PlasmaStylesColors.buttonStatusCritical1` ( hsla(0.98, 1, 0.59, 1) )
     */
    dark_button_critical: Color;
    /**
     * `PlasmaStylesColors.buttonStatusChecked1` ( hsla(0, 0, 1, 1) )
     */
    dark_button_checked: Color;
    /**
     * `PlasmaStylesColors.buttonPrimarySber1` ( hsla(0.36, 0.66, 0.38, 1) )
     */
    dark_focus_sber: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryAthena1` ( hsla(0.57, 0.94, 0.46, 1) )
     */
    dark_focus_eva: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryJoy1` ( hsla(0.77, 0.87, 0.65, 1) )
     */
    dark_focus_joy: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryBrand1` ( hsla(0.61, 0.98, 0.62, 1) )
     */
    dark_focus_brand: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryB2E1` ( hsla(0.36, 0.66, 0.38, 1) )
     */
    dark_focus_b2e: Color;
    /**
     * hsla(0, 0, 0, 0.28)
     */
    dark_speech_bubble_sent: Color;
    /**
     * hsla(0, 0, 1, 0.12)
     */
    dark_speech_bubble_received: Color;
    /**
     * `PlasmaStylesColors.textIconsPrimary4` ( hsla(0, 0, 0.03, 1) )
     */
    light_primary: Color;
    /**
     * `PlasmaStylesColors.textIconsSecondary4` ( hsla(0, 0, 0.03, 0.56) )
     */
    light_secondary: Color;
    /**
     * `PlasmaStylesColors.textIconsTertiary1` ( hsla(0, 0, 0.03, 0.28) )
     */
    light_tertiary: Color;
    /**
     * `PlasmaStylesColors.textIconsParagraph` ( hsla(0, 0, 0.03, 0.8) )
     */
    light_paragraph: Color;
    /**
     * `PlasmaStylesColors.textIconsInverse` ( hsla(0, 0, 1, 0.96) )
     */
    light_inverse: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusSuccess` ( hsla(0.36, 0.82, 0.29, 1) )
     */
    light_success: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusWarning` ( hsla(0.06, 1, 0.41, 1) )
     */
    light_warning: Color;
    /**
     * `PlasmaStylesColors.textIconsStatusCritical` ( hsla(0.98, 0.85, 0.48, 1) )
     */
    light_critical: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentSber` ( hsla(0.36, 0.82, 0.29, 1) )
     */
    light_sber: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentAthena` ( hsla(0.57, 0.82, 0.39, 1) )
     */
    light_eva: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentJoy` ( hsla(0.77, 0.77, 0.56, 1) )
     */
    light_joy: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentBrand` ( hsla(0.61, 0.77, 0.53, 1) )
     */
    light_brand: Color;
    /**
     * `PlasmaStylesColors.textIconsAccentB2E` ( hsla(0.36, 0.82, 0.29, 1) )
     */
    light_b2e: Color;
    /**
     * hsla(0, 0, 1, 1)
     */
    light_bg: Color;
    /**
     * hsla(0, 0, 0, 0.8)
     */
    light_overlay: Color;
    /**
     * hsla(0, 0, 1, 1)
     */
    light_bg_primary: Color;
    /**
     * hsla(0, 0, 1, 1)
     */
    light_bg_secondary: Color;
    /**
     * hsla(0, 0, 1, 1)
     */
    light_bg_tertiary: Color;
    /**
     * hsla(0, 0, 0.03, 0.02)
     */
    light_surface_Liquid01: Color;
    /**
     * hsla(0, 0, 0.03, 0.06)
     */
    light_surface_Liquid02: Color;
    /**
     * hsla(0, 0, 0.03, 0.12)
     */
    light_surface_Liquid03: Color;
    /**
     * hsla(0, 0, 0.98, 1)
     */
    light_surface_solid01: Color;
    /**
     * hsla(0, 0, 0.94, 1)
     */
    light_surface_solid02: Color;
    /**
     * hsla(0, 0, 0.88, 1)
     */
    light_surface_solid03: Color;
    /**
     * hsla(0, 0, 1, 1)
     */
    light_surface_card: Color;
    /**
     * `PlasmaStylesColors.buttonPrimarySber` ( hsla(0.36, 0.75, 0.32, 1) )
     */
    light_button_sber: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryAthena` ( hsla(0.57, 0.94, 0.41, 1) )
     */
    light_button_eva: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryJoy` ( hsla(0.77, 0.9, 0.61, 1) )
     */
    light_button_joy: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryBrand` ( hsla(0.61, 0.94, 0.57, 1) )
     */
    light_button_brand: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryB2E` ( hsla(0.36, 0.75, 0.32, 1) )
     */
    light_button_b2e: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryDefault` ( hsla(0, 0, 0.03, 1) )
     */
    light_button_primary: Color;
    /**
     * `PlasmaStylesColors.buttonSecondaryDefault` ( hsla(0, 0, 0.03, 0.06) )
     */
    light_button_secondary: Color;
    /**
     * `PlasmaStylesColors.buttonStatusSuccess` ( hsla(0.36, 0.75, 0.32, 1) )
     */
    light_button_success: Color;
    /**
     * `PlasmaStylesColors.buttonStatusWarning` ( hsla(0.06, 0.98, 0.45, 1) )
     */
    light_button_warning: Color;
    /**
     * `PlasmaStylesColors.buttonStatusCritical` ( hsla(0.98, 0.9, 0.53, 1) )
     */
    light_button_critical: Color;
    /**
     * `PlasmaStylesColors.buttonStatusChecked` ( hsla(0, 0, 0.03, 1) )
     */
    light_button_checked: Color;
    /**
     * `PlasmaStylesColors.buttonPrimarySber` ( hsla(0.36, 0.75, 0.32, 1) )
     */
    light_focus_sber: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryAthena` ( hsla(0.57, 0.94, 0.41, 1) )
     */
    light_focus_eva: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryJoy` ( hsla(0.77, 0.9, 0.61, 1) )
     */
    light_focus_joy: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryBrand` ( hsla(0.61, 0.94, 0.57, 1) )
     */
    light_focus_brand: Color;
    /**
     * `PlasmaStylesColors.buttonPrimaryB2E` ( hsla(0.36, 0.75, 0.32, 1) )
     */
    light_focus_b2e: Color;
    /**
     * hsla(0, 0, 0.03, 0.4)
     */
    light_speech_bubble_sent: Color;
    /**
     * hsla(0, 0, 0, 0.02)
     */
    light_speech_bubble_received: Color;
}

export declare class Colors {
    /**
     * `PlasmaStylesColors.textIconsGlblWhitePrimary` ( hsla(0, 0, 1, 1) )
     */
    white_primary: Color;
    /**
     * `PlasmaStylesColors.textIconsGlblWhiteSecondary` ( hsla(0, 0, 1, 0.56) )
     */
    white_secondary: Color;
    /**
     * `PlasmaStylesColors.textIconsGlblWhiteTetriary` ( hsla(0, 0, 1, 0.28) )
     */
    white_tertiary: Color;
    /**
     * `PlasmaStylesColors.textIconsGlblBlackPrimary` ( hsla(0, 0, 0.03, 1) )
     */
    black_primary: Color;
    /**
     * `PlasmaStylesColors.textIconsGblBlackSecondary` ( hsla(0, 0, 0.03, 0.56) )
     */
    black_secondary: Color;
    /**
     * `PlasmaStylesColors.textIconsGlblBlackTetriary` ( hsla(0, 0, 0.03, 0.28) )
     */
    black_tertiary: Color;
    /**
     * `PlasmaStylesColors.textIconsGlblWhitePrimary` ( hsla(0, 0, 1, 1) )
     */
    white: Color;
    /**
     * `PlasmaStylesColors.textIconsGblBlackPrimary` ( hsla(0, 0, 0.03, 1) )
     */
    black: Color;
    /**
     * hsla(0, 0, 0.09, 1)
     */
    dark01: Color;
    /**
     * hsla(0, 0, 0.14, 1)
     */
    dark02: Color;
    /**
     * hsla(0, 0, 0.21, 1)
     */
    dark03: Color;
    /**
     * hsla(0, 0, 0, 0)
     */
    transparent: Color;
    /**
     * hsla(0, 0, 0, 0)
     */
    button_clear: Color;
    /**
     * `PlasmaStylesColors.buttonGlblBlackDefault` ( hsla(0, 0, 0.03, 1) )
     */
    button_black: Color;
    /**
     * `PlasmaStylesColors.buttonGlblBlackSecondary` ( hsla(0, 0, 0.03, 0.12) )
     */
    button_black_secondary: Color;
    /**
     * `PlasmaStylesColors.buttonGlblBlackTransparent` ( hsla(0, 0, 0.03, 0.56) )
     */
    button_black_transparent: Color;
    /**
     * `PlasmaStylesColors.buttonGblWhiteDefault` ( hsla(0, 0, 1, 1) )
     */
    button_white: Color;
    /**
     * `PlasmaStylesColors.buttonGblWhiteSecondary` ( hsla(0, 0, 1, 0.12) )
     */
    button_white_secondary: Color;
}

export declare class File {
    /**
     * The URL of the `File`
     */
    url: string;
}

/**
 * A representation of a font resource, with a reference to a [[File]] containing a TTF or OTF font file.
 *
 */
export declare class Font {
    /**
     * Font data.
     *
     * assets/PlasmaStyles.figma.contents/fonts/SBSansText-Medium.otf
     */
    file: File;
    /**
     * Font data.
     *
     * SBSansText-Medium
     */
    name: string;
    /**
     * Font data.
     *
     * [Helvetica,Arial,sans-serif]
     */
    fallbacks: string[];
    /**
     * Font data.
     *
     * 400
     */
    weight: number;
    /**
     * Font data.
     *
     * normal
     */
    style: string;
}

export declare class Typograph {
    /**
     * An `Object` with CSS values for this `Typograph`.
     */
    style: {
        color: string;
        fontSize: string;
        fontFamily: string;
        fontWeight: number;
        fontStyle: string;
        lineHeight?: string;
        letterSpacing: number;
        textAlign: 'start' | 'left' | 'right' | 'center';
        textDecoration: string;
    };
    /**
     * Applies the `Typograph` CSS styles to the given HTMLElement.
     */
    applyStyle(ref: HTMLElement): void;
}

declare global {
    interface HTMLElement {
        /**
         * Applies a Diez Typograph definition to the element.
         *
         * You *must* have called `Diez.applyHTMLExtensions()` at least once to use this method.
         */
        applyTypograph(typograph: Typograph): void;
    }
}

export declare class Typography {
    /**
     * `PlasmaStylesTypography.sbS9696Display1Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `96`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `96`
     * - letterSpacing: `-1.8239999771118165`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    display1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS6064Display2Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `60`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `64`
     * - letterSpacing: `-1.1399999856948855`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    display2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS4852Display3Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `48`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `52`
     * - letterSpacing: `0`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    display3: Typograph;
    /**
     * `PlasmaStylesTypography.sbS3236Headline1Bold`
     * - font: `SBSansText-Bold, 400, normal`
     * - fontSize: `32`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `36`
     * - letterSpacing: `-0.35200000762939454`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    headline1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS2428Headline2Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `24`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `28`
     * - letterSpacing: `-0.5280000114440918`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    headline2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS2024Headline3Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `20`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `24`
     * - letterSpacing: `-0.5`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    headline3: Typograph;
    /**
     * `PlasmaStylesTypography.sbS2024Headline4Bold`
     * - font: `SBSansText-Bold, 400, normal`
     * - fontSize: `20`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `24`
     * - letterSpacing: `-0.5`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    headline4: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1620Body1Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.28)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `20`
     * - letterSpacing: `-0.30399999618530277`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    body1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1620Body2Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `20`
     * - letterSpacing: `-0.30399999618530277`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    body2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1620Body3Bold`
     * - font: `SBSansText-Bold, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `20`
     * - letterSpacing: `-0.30399999618530277`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    body3: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1622ParagraphText1Regular`
     * - font: `SBSansText-Regular, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `22`
     * - letterSpacing: `-0.30399999618530277`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    paragraph1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1622ParagraphText2Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `22`
     * - letterSpacing: `-0.30399999618530277`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    paragraph2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1418Footnote1Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `14`
     * - color: `hsla(0, 0, 1, 0.56)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `18`
     * - letterSpacing: `-0.2659999966621399`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    footnote1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1418Footnote2Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `14`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `18`
     * - letterSpacing: `-0.2659999966621399`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    footnote2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1620Button1Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `16`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `20`
     * - letterSpacing: `0`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    button1: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1416Button2Semibold`
     * - font: `SBSansText-Semibold, 400, normal`
     * - fontSize: `14`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `16`
     * - letterSpacing: `0`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    button2: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1216CaptionMedium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `12`
     * - color: `hsla(0, 0, 1, 0.96)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `16`
     * - letterSpacing: `-0.2640000057220459`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    caption: Typograph;
    /**
     * `PlasmaStylesTypography.sbS1012Medium`
     * - font: `SBSansText-Medium, 400, normal`
     * - fontSize: `10`
     * - color: `hsla(0, 0, 0, 1)`
     * - iosTextStyle: `body`
     * - shouldScale: `false`
     * - lineHeight: `12`
     * - letterSpacing: `0.125`
     * - alignment: `natural`
     * - decoration: `[]`
     */
    underline: Typograph;
}

/**
 * Provides a gradient stop.
 *
 */
export declare class GradientStop {
    /**
     * GradientStop data.
     *
     * 1
     */
    position: number;
    /**
     * GradientStop data.
     *
     * hsla(0.53, 0.79, 0.53, 1)
     */
    color: Color;
}

/**
 * Provides a two dimensional point.
 *
 * Taken alone, points are designated in an abstract space with no inherit dimensions or directionality. In the
 * context of other prefabs like [[LinearGradient]], points typically should use the standard two dimensional graphics
 * space, often normalized in the unit square, where x increases from left to right and y increases from top to bottom.
 *
 * Usage: `point = Point2D.make(0.5, 0.5);`.
 *
 */
export declare class Point2D {
    /**
     * Point data.
     *
     * -7.450581e-9
     */
    x: number;
    /**
     * Point data.
     *
     * 1.000000007450582
     */
    y: number;
}

export declare class LinearGradient {
    /**
     * The CSS linear-gradient representation of the `LinearGradient`.
     * @example
     * linear-gradient(45deg, hsla(0, 0%, 100%, 1) 0%, hsla(0, 0%, 0%, 1) 100%)
     */
    linearGradient: string;
    /**
     * CSS declarations for the `background-image` CSS property.
     */
    backgroundImageStyle: { backgroundImage: string };
    /**
     * CSS declarations for the `background` CSS property.
     */
    backgroundStyle: { background: string };
}

export declare class Gradients {
    /**
     * linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)
     */
    dark_bg_sber: string;
    /**
     * linear-gradient(336.9deg, #143787 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(110, 5, 193, 0.44) 0%, rgba(53, 19, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(25, 63, 152, 0.41) 99.97%), linear-gradient(270deg, rgba(39, 15, 107, 0.3) 0%, rgba(8, 8, 8, 0) 100%)
     */
    dark_bg_eva: string;
    /**
     * linear-gradient(336.9deg, rgba(255, 156, 101, 0.24) 0%, rgba(8, 8, 8, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(61, 19, 149, 0.34) 0%, rgba(19, 24, 149, 0.1) 99.69%), linear-gradient(180.03deg, rgba(8, 8, 8, 0) 50%, rgba(255, 215, 179, 0.15) 99.97%), linear-gradient(270deg, rgba(107, 15, 87, 0.2) 0%, rgba(8, 8, 8, 0) 100%)
     */
    dark_bg_joy: string;
    /**
     * #080808
     */
    dark_bg_brand: string;
    /**
     * linear-gradient(336.84deg, rgba(20, 116, 70, 0.6) 0%, rgba(8, 8, 8, 0) 64.88%), radial-gradient(100% 100% at 75.89% 100%, rgba(0, 133, 255, 0.24) 0%, rgba(0, 71, 255, 0.03) 100%), linear-gradient(180deg, rgba(8, 8, 8, 0) 50%, rgba(7, 71, 33, 0.3) 100%), linear-gradient(270deg, #061621 0%, rgba(8, 8, 8, 0) 100%)
     */
    dark_bg_b2e: string;
    /**
     * linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)
     */
    dark_device_sber: string;
    /**
     * linear-gradient(26.05deg, rgba(26, 140, 255, 0.16) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 85, 255, 0.28) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)
     */
    dark_device_eva: string;
    /**
     * linear-gradient(26.05deg, rgba(255, 148, 77, 0.24) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(138, 60, 215, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(89, 22, 215, 0.48) 0%, rgba(8, 8, 8, 0) 99.69%)
     */
    dark_device_joy: string;
    /**
     * #080808
     */
    dark_device_brand: string;
    /**
     * linear-gradient(26.05deg, rgba(15, 153, 24, 0.28) 0%, rgba(8, 8, 8, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.24) 0%, rgba(8, 8, 8, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 102, 255, 0.6) 0%, rgba(8, 8, 8, 0) 99.69%)
     */
    dark_device_b2e: string;
    /**
     * `PlasmaStylesGradients.textIconsGradientSber1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.36, 0.76, 0.47, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
     */
    dark_voice_phrase_sber: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientAthena1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.56, 0.94, 0.65, 1) at 0,hsla(0.67, 1, 0.84, 1) at 1] )
     */
    dark_voice_phrase_eva: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientJoy1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.06, 1, 0.72, 1) at 0,hsla(0.89, 0.94, 0.79, 1) at 1] )
     */
    dark_voice_phrase_joy: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientBrand1` ( start [-7.238369e-9, 1.000000078130416], end [1.000000064514712, -1.35406766e-7], stops: [hsla(0.61, 1, 0.68, 1) at 0,hsla(0.53, 0.95, 0.62, 1) at 1] )
     */
    dark_voice_phrase_brand: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientB2E1` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.36, 0.76, 0.47, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
     */
    dark_voice_phrase_b2e: LinearGradient;
    /**
     * linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)
     */
    light_bg_sber: string;
    /**
     * linear-gradient(336.9deg, rgba(0, 224, 255, 0.06) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 87, 255, 0.04) 0%, rgba(87, 8, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 224, 255, 0.06) 100%), linear-gradient(270deg, rgba(0, 71, 253, 0.02) 0%, rgba(255, 255, 255, 0) 100%)
     */
    light_bg_eva: string;
    /**
     * linear-gradient(336.9deg, rgba(255, 200, 3, 0.05) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(148, 0, 238, 0.02) 0%, rgba(160, 4, 255, 0.01) 99.69%), linear-gradient(180.03deg, rgba(255, 255, 255, 0) 50%, rgba(255, 184, 0, 0.04) 99.97%), linear-gradient(270deg, rgba(240, 0, 187, 0.03) 0%, rgba(255, 255, 255, 0) 100%)
     */
    light_bg_joy: string;
    /**
     * #F5F5F5
     */
    light_bg_brand: string;
    /**
     * linear-gradient(336.9deg, rgba(4, 255, 44, 0.02) 0%, rgba(255, 255, 255, 0) 64.95%), radial-gradient(66.53% 100% at 73.33% 100%, rgba(0, 179, 255, 0.06) 0%, rgba(0, 209, 255, 0.01) 99.69%), linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(0, 251, 59, 0.05) 100%), linear-gradient(270deg, rgba(6, 195, 255, 0.05) 0%, rgba(255, 255, 255, 0) 100%)
     */
    light_bg_b2e: string;
    /**
     * linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)
     */
    light_device_sber: string;
    /**
     * linear-gradient(26.05deg, rgba(26, 178, 255, 0.08) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(128, 0, 255, 0.08) 0%, rgba(255, 255, 255, 0) 99.69%)
     */
    light_device_eva: string;
    /**
     * linear-gradient(26.05deg, rgba(255, 219, 77, 0.1) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(163, 71, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(140, 26, 255, 0.1) 0%, rgba(255, 255, 255, 0) 99.69%)
     */
    light_device_joy: string;
    /**
     * #F5F5F5
     */
    light_device_brand: string;
    /**
     * linear-gradient(26.05deg, rgba(24, 242, 61, 0.06) 0%, rgba(255, 255, 255, 0) 72.24%), radial-gradient(100% 100% at 0% 100%, rgba(0, 170, 255, 0.04) 0%, rgba(255, 255, 255, 0) 99.69%), radial-gradient(74.68% 149.35% at 50% 149.35%, rgba(0, 170, 255, 0.12) 0%, rgba(255, 255, 255, 0) 99.69%)
     */
    light_device_b2e: string;
    /**
     * `PlasmaStylesGradients.textIconsGradientSber` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048471611, -1.13186606e-7], stops: [hsla(0.36, 0.85, 0.37, 1) at 0,hsla(0.53, 1, 0.39, 1) at 1] )
     */
    light_voice_phrase_sber: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientAthena` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048430654, -1.2709609e-7], stops: [hsla(0.56, 0.79, 0.5, 1) at 0,hsla(0.67, 1, 0.74, 1) at 1] )
     */
    light_voice_phrase_eva: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientJoy` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048157036, -2.20020105e-7], stops: [hsla(0.08, 0.97, 0.64, 1) at 0,hsla(0.89, 1, 0.66, 1) at 1] )
     */
    light_voice_phrase_joy: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientBrand` ( start [-7.450581e-9, 1.000000007450582], end [1.000000052180961, -1.52472533e-7], stops: [hsla(0.61, 0.86, 0.59, 1) at 0,hsla(0.53, 0.79, 0.53, 1) at 1] )
     */
    light_voice_phrase_brand: LinearGradient;
    /**
     * `PlasmaStylesGradients.textIconsGradientB2E` ( start [-7.450581e-9, 1.000000007450582], end [1.000000048471611, -1.13186606e-7], stops: [hsla(0.36, 0.85, 0.37, 1) at 0,hsla(0.53, 1, 0.39, 1) at 1] )
     */
    light_voice_phrase_b2e: LinearGradient;
}

export declare class DesignLanguage extends RootComponent {
    theme: Theme;
    colors: Colors;
    typography: Typography;
    gradients: Gradients;
}
