// Generated by robots, do not change this manually!

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft, rgba(8, 9, 10, 0.56))';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard, rgba(8, 9, 10, 0.96))';

/** Основной цвет текста */
export const textPrimaryHover = 'var(--text-primary-hover, #FFFFFF93)';

/** Основной цвет текста */
export const textPrimaryActive = 'var(--text-primary-active, #FFFFFFC4)';

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary, rgba(255, 255, 255, 0.96))';

/** Основной цвет текста */
export const textPrimaryBrightness = 'var(--text-primary-brightness, #FFFFFF)';

/** Вторичный цвет текста */
export const textSecondaryHover = 'var(--text-secondary-hover, #FFFFFFFF)';

/** Вторичный цвет текста */
export const textSecondaryActive = 'var(--text-secondary-active, #FFFFFFAB)';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary, rgba(255, 255, 255, 0.56))';

/** Третичный цвет текста */
export const textTertiaryHover = 'var(--text-tertiary-hover, #FFFFFFFF)';

/** Третичный цвет текста */
export const textTertiaryActive = 'var(--text-tertiary-active, #FFFFFF56)';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary, rgba(255, 255, 255, 0.28))';

/** Сплошной наборный текст */
export const textParagraphHover = 'var(--text-paragraph-hover, #FFFFFF7A)';

/** Сплошной наборный текст */
export const textParagraphActive = 'var(--text-paragraph-active, #FFFFFFA3)';

/** Сплошной наборный текст */
export const textParagraph = 'var(--text-paragraph, rgba(255, 255, 255, 0.8))';

/** Акцентный цвет */
export const textAccentHover = 'var(--text-accent-hover, #1CE91CFF)';

/** Акцентный цвет */
export const textAccentActive = 'var(--text-accent-active, #12B512FF)';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent, #15D015)';

/** Акцентный цвет с градиентом */
export const textAccentGradientHover = 'var(--text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом */
export const textAccentGradientActive = 'var(--text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом */
export const textAccentGradient =
    'var(--text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';

/** Цвет успеха */
export const textPositiveHover = 'var(--text-positive-hover, #1EB83AFF)';

/** Цвет успеха */
export const textPositiveActive = 'var(--text-positive-active, #15842AFF)';

/** Цвет успеха */
export const textPositive = 'var(--text-positive, #1A9E32)';

/** Цвет предупреждения */
export const textWarningHover = 'var(--text-warning-hover, #FA6F1EFF)';

/** Цвет предупреждения */
export const textWarningActive = 'var(--text-warning-active, #D75204FF)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning, #F55D05)';

/** Цвет ошибки */
export const textNegativeHover = 'var(--text-negative-hover, #FF475AFF)';

/** Цвет ошибки */
export const textNegativeActive = 'var(--text-negative-active, #FF0A23FF)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative, #FF293E)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryHover = 'var(--on-dark-text-primary-hover, #FFFFFF93)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryActive = 'var(--on-dark-text-primary-active, #FFFFFFC4)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary, rgba(255, 255, 255, 0.96))';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimaryBrightness = 'var(--on-dark-text-primary-brightness, #FFFFFF)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryHover = 'var(--on-dark-text-secondary-hover, #FFFFFFFF)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondaryActive = 'var(--on-dark-text-secondary-active, #FFFFFFAB)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary, rgba(255, 255, 255, 0.56))';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryHover = 'var(--on-dark-text-tertiary-hover, #FFFFFFFF)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiaryActive = 'var(--on-dark-text-tertiary-active, #FFFFFF56)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary, rgba(255, 255, 255, 0.28))';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphHover = 'var(--on-dark-text-paragraph-hover, #FFFFFF7A)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraphActive = 'var(--on-dark-text-paragraph-active, #FFFFFFA3)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraph = 'var(--on-dark-text-paragraph, rgba(255, 255, 255, 0.8))';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentHover = 'var(--on-dark-text-accent-hover, #1CE91CFF)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccentActive = 'var(--on-dark-text-accent-active, #12B512FF)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccent = 'var(--on-dark-text-accent, #15D015)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradientHover = 'var(--on-dark-text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradientActive = 'var(--on-dark-text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradient =
    'var(--on-dark-text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveHover = 'var(--on-dark-text-positive-hover, #1EB83AFF)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositiveActive = 'var(--on-dark-text-positive-active, #15842AFF)';

/** Цвет успеха на темном фоне */
export const onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningHover = 'var(--on-dark-text-warning-hover, #FA6F1EFF)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarningActive = 'var(--on-dark-text-warning-active, #D75204FF)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarning = 'var(--on-dark-text-warning, #F55D05)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeHover = 'var(--on-dark-text-negative-hover, #FF475AFF)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegativeActive = 'var(--on-dark-text-negative-active, #FF0A23FF)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryHover = 'var(--on-light-text-primary-hover, #23272A93)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryActive = 'var(--on-light-text-primary-active, #23272AC4)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary, rgba(36, 40, 43, 0.96))';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimaryBrightness = 'var(--on-light-text-primary-brightness, #313538)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryHover = 'var(--on-light-text-secondary-hover, #23272AFF)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondaryActive = 'var(--on-light-text-secondary-active, #23272AAB)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary, rgba(36, 40, 43, 0.56))';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryHover = 'var(--on-light-text-tertiary-hover, #23272AFF)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiaryActive = 'var(--on-light-text-tertiary-active, #23272A56)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary, rgba(36, 40, 43, 0.28))';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphHover = 'var(--on-light-text-paragraph-hover, #23272A7A)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraphActive = 'var(--on-light-text-paragraph-active, #23272AA3)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraph = 'var(--on-light-text-paragraph, rgba(36, 40, 43, 0.8))';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentHover = 'var(--on-light-text-accent-hover, #18CD18FF)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccentActive = 'var(--on-light-text-accent-active, #129712FF)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccent = 'var(--on-light-text-accent, #15B015)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradientHover = 'var(--on-light-text-accent-gradient-hover, #CCCCCCFF)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradientActive = 'var(--on-light-text-accent-gradient-active, #E6E6E6FF)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradient =
    'var(--on-light-text-accent-gradient, radial-gradient(50% 200% at 0% 100%, rgba(250, 237, 5, 0.6) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(33, 202, 154, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(12, 156, 12, 0) 100%), #0C9C0C)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveHover = 'var(--on-light-text-positive-hover, #1EB83AFF)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositiveActive = 'var(--on-light-text-positive-active, #15842AFF)';

/** Цвет успеха на светлом фоне */
export const onLightTextPositive = 'var(--on-light-text-positive, #1A9E32)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningHover = 'var(--on-light-text-warning-hover, #FA6F1EFF)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarningActive = 'var(--on-light-text-warning-active, #D75204FF)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarning = 'var(--on-light-text-warning, #F55D05)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeHover = 'var(--on-light-text-negative-hover, #FF475AFF)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegativeActive = 'var(--on-light-text-negative-active, #FF0A23FF)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegative = 'var(--on-light-text-negative, #FF293E)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryHover = 'var(--surface-solid-primary-hover, #191D1FFF)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryActive = 'var(--surface-solid-primary-active, #101214FF)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary, #15181A)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimaryBrightness = 'var(--surface-solid-primary-brightness, #232628)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryHover = 'var(--surface-solid-secondary-hover, #2C3135FF)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondaryActive = 'var(--surface-solid-secondary-active, #1E2224FF)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary, #24282B)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryHover = 'var(--surface-solid-tertiary-hover, #3A4145FF)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiaryActive = 'var(--surface-solid-tertiary-active, #2C3135FF)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary, #31373B)';

/** Основной фон для карточек */
export const surfaceSolidCardHover = 'var(--surface-solid-card-hover, #191D1FFF)';

/** Основной фон для карточек */
export const surfaceSolidCardActive = 'var(--surface-solid-card-active, #101214FF)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card, #15181A)';

/** Основной фон для карточек */
export const surfaceSolidCardBrightness = 'var(--surface-solid-card-brightness, #232628)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultHover = 'var(--surface-solid-default-hover, #F9FAFBFF)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefaultActive = 'var(--surface-solid-default-active, #ECF0F3FF)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default, #F2F5F7)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryHover = 'var(--surface-transparent-primary-hover, #F2F5F71F)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimaryActive = 'var(--surface-transparent-primary-active, #F2F5F70A)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(242, 245, 247, 0.06))';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryHover = 'var(--surface-transparent-secondary-hover, #F2F5F73D)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondaryActive = 'var(--surface-transparent-secondary-active, #F2F5F70F)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(242, 245, 247, 0.12))';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryHover = 'var(--surface-transparent-tertiary-hover, #F2F5F752)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiaryActive = 'var(--surface-transparent-tertiary-active, #F2F5F724)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(242, 245, 247, 0.2))';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardHover = 'var(--surface-transparent-card-hover, #F2F5F71F)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardActive = 'var(--surface-transparent-card-active, #F2F5F70A)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCard = 'var(--surface-transparent-card, rgba(242, 245, 247, 0.06))';

/** Прозрачный фон для карточек */
export const surfaceTransparentCardBrightness = 'var(--surface-transparent-card-brightness, #F3F6F7)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearHover = 'var(--surface-clear-hover, #00000000)';

/** Фон поверхности/контрола без заливки */
export const surfaceClearActive = 'var(--surface-clear-active, #00000000)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear, rgba(0, 0, 0, 0))';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentHover = 'var(--surface-accent-hover, #17C417FF)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccentActive = 'var(--surface-accent-active, #14A914FF)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent, #15B015)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradientHover = 'var(--surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradientActive = 'var(--surface-accent-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradient =
    'var(--surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveHover = 'var(--surface-positive-hover, #1DAF37FF)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositiveActive = 'var(--surface-positive-active, #18952FFF)';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningHover = 'var(--surface-warning-hover, #FA6814FF)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarningActive = 'var(--surface-warning-active, #EB5905FF)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning, #F55D05)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeHover = 'var(--surface-negative-hover, #FF475AFF)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegativeActive = 'var(--surface-negative-active, #FF1F35FF)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative, #FF293E)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryHover = 'var(--on-dark-surface-solid-primary-hover, #191D1FFF)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryActive = 'var(--on-dark-surface-solid-primary-active, #101214FF)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #15181A)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimaryBrightness = 'var(--on-dark-surface-solid-primary-brightness, #232628)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryHover = 'var(--on-dark-surface-solid-secondary-hover, #2C3135FF)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondaryActive = 'var(--on-dark-surface-solid-secondary-active, #1E2224FF)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #24282B)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryHover = 'var(--on-dark-surface-solid-tertiary-hover, #3A4145FF)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiaryActive = 'var(--on-dark-surface-solid-tertiary-active, #2C3135FF)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #31373B)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardHover = 'var(--on-dark-surface-solid-card-hover, #191D1FFF)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardActive = 'var(--on-dark-surface-solid-card-active, #101214FF)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #15181A)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCardBrightness = 'var(--on-dark-surface-solid-card-brightness, #232628)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefaultHover = 'var(--on-dark-surface-solid-default-hover, #FFFFFFFF)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefaultActive = 'var(--on-dark-surface-solid-default-active, #FFFFFFFF)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryHover = 'var(--on-dark-surface-transparent-primary-hover, #FFFFFF1F)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimaryActive = 'var(--on-dark-surface-transparent-primary-active, #FFFFFF0A)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryHover = 'var(--on-dark-surface-transparent-secondary-hover, #FFFFFF3D)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondaryActive = 'var(--on-dark-surface-transparent-secondary-active, #FFFFFF0F)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary =
    'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryHover = 'var(--on-dark-surface-transparent-tertiary-hover, #FFFFFF52)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiaryActive = 'var(--on-dark-surface-transparent-tertiary-active, #FFFFFF24)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardHover = 'var(--on-dark-surface-transparent-card-hover, #FFFFFF1F)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardActive = 'var(--on-dark-surface-transparent-card-active, #FFFFFF0A)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.06))';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCardBrightness = 'var(--on-dark-surface-transparent-card-brightness, #FFFFFF)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentHover = 'var(--on-dark-surface-accent-hover, #17C417FF)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccentActive = 'var(--on-dark-surface-accent-active, #14A914FF)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #15B015)';

/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradientHover = 'var(--on-dark-surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradientActive = 'var(--on-dark-surface-accent-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradient =
    'var(--on-dark-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveHover = 'var(--on-dark-surface-positive-hover, #1DAF37FF)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositiveActive = 'var(--on-dark-surface-positive-active, #18952FFF)';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningHover = 'var(--on-dark-surface-warning-hover, #FA6814FF)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarningActive = 'var(--on-dark-surface-warning-active, #EB5905FF)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #F55D05)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeHover = 'var(--on-dark-surface-negative-hover, #FF475AFF)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegativeActive = 'var(--on-dark-surface-negative-active, #FF1F35FF)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryHover = 'var(--on-light-surface-solid-primary-hover, #F9FAFBFF)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryActive = 'var(--on-light-surface-solid-primary-active, #ECF0F3FF)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F2F5F7)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimaryBrightness = 'var(--on-light-surface-solid-primary-brightness, #F3F6F7)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryHover = 'var(--on-light-surface-solid-secondary-hover, #F2F5F8FF)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondaryActive = 'var(--on-light-surface-solid-secondary-active, #DEE7EDFF)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #E4EBF0)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryHover = 'var(--on-light-surface-solid-tertiary-hover, #DEE7EDFF)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiaryActive = 'var(--on-light-surface-solid-tertiary-active, #CBD8E2FF)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #D1DDE5)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardHover = 'var(--on-light-surface-solid-card-hover, #F9FAFBFF)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardActive = 'var(--on-light-surface-solid-card-active, #ECF0F3FF)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #F2F5F7)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCardBrightness = 'var(--on-light-surface-solid-card-brightness, #F3F6F7)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultHover = 'var(--on-light-surface-solid-default-hover, #0E0F11FF)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefaultActive = 'var(--on-light-surface-solid-default-active, #050506FF)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #08090A)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryHover = 'var(--on-light-surface-transparent-primary-hover, #090A0B12)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimaryActive = 'var(--on-light-surface-transparent-primary-active, #090A0B03)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 9, 10, 0.03))';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryHover = 'var(--on-light-surface-transparent-secondary-hover, #090A0B1F)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondaryActive =
    'var(--on-light-surface-transparent-secondary-active, #090A0B0A)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 9, 10, 0.06))';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryHover = 'var(--on-light-surface-transparent-tertiary-hover, #090A0B3D)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiaryActive = 'var(--on-light-surface-transparent-tertiary-active, #090A0B0F)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 9, 10, 0.12))';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardHover = 'var(--on-light-surface-transparent-card-hover, #090A0B12)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardActive = 'var(--on-light-surface-transparent-card-active, #090A0B03)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(8, 9, 10, 0.03))';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCardBrightness = 'var(--on-light-surface-transparent-card-brightness, #171819)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentHover = 'var(--on-light-surface-accent-hover, #17C417FF)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccentActive = 'var(--on-light-surface-accent-active, #14A914FF)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccent = 'var(--on-light-surface-accent, #15B015)';

/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradientHover = 'var(--on-light-surface-accent-gradient-hover, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradientActive = 'var(--on-light-surface-accent-gradient-active, #FFFFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradient =
    'var(--on-light-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveHover = 'var(--on-light-surface-positive-hover, #1DAF37FF)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositiveActive = 'var(--on-light-surface-positive-active, #18952FFF)';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositive = 'var(--on-light-surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningHover = 'var(--on-light-surface-warning-hover, #FA6814FF)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarningActive = 'var(--on-light-surface-warning-active, #EB5905FF)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarning = 'var(--on-light-surface-warning, #F55D05)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeHover = 'var(--on-light-surface-negative-hover, #FF475AFF)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegativeActive = 'var(--on-light-surface-negative-active, #FF1F35FF)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegative = 'var(--on-light-surface-negative, #FF293E)';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary, #08090A)';

/** Основной фон */
export const backgroundPrimaryBrightness = 'var(--background-primary-brightness, #171819)';

/** Основной фон на темном фоне */
export const darkBackgroundPrimary = 'var(--dark-background-primary, #08090A)';

/** Основной фон на светлом фоне */
export const lightBackgroundPrimary = 'var(--light-background-primary, #FFFFFF)';

export const skeletonGradient =
    'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';

export const skeletonGradientLighter =
    'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';

/** @deprecated instead use onDarkTextPrimary */
export const whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';

/** @deprecated instead use onDarkTextSecondary */
export const whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';

/** @deprecated instead use onDarkTextTertiary */
export const whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';

/** @deprecated instead use onLightTextPrimary */
export const blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';

/** @deprecated instead use onLightTextSecondary */
export const blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';

/** @deprecated instead use onLightTextTertiary */
export const blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';

/** @deprecated instead use onLightSurfaceSolidDefault */
export const buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';

/** @deprecated instead use onLightSurfaceTransparentSecondary */
export const buttonBlackSecondary =
    'var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))';

/** @deprecated instead use onDarkSurfaceSolidDefault */
export const buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';

/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export const buttonWhiteSecondary =
    'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';

/** @deprecated instead use textPrimary */
export const text = 'var(--plasma-colors-text, var(--text-primary))';

/** @deprecated instead use textPrimary */
export const primary = 'var(--plasma-colors-primary, var(--text-primary))';

/** @deprecated instead use textSecondary */
export const secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';

/** @deprecated instead use textTertiary */
export const tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';

/** @deprecated instead use textParagraph */
export const paragraph = 'var(--plasma-colors-paragraph, var(--text-paragraph))';

/** @deprecated instead use backgroundPrimary */
export const background = 'var(--plasma-colors-background, var(--background-primary))';

/** @deprecated instead use textAccent */
export const accent = 'var(--plasma-colors-accent, var(--text-accent))';

/** @deprecated instead use textPositive */
export const success = 'var(--plasma-colors-success, var(--text-positive))';

/** @deprecated instead use textWarning */
export const warning = 'var(--plasma-colors-warning, var(--text-warning))';

/** @deprecated instead use textNegative */
export const critical = 'var(--plasma-colors-critical, var(--text-negative))';

/** @deprecated instead use overlaySoft */
export const overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';

/** @deprecated instead use surfaceTransparentPrimary */
export const surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))';

/** @deprecated instead use surfaceTransparentSecondary */
export const surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))';

/** @deprecated instead use surfaceTransparentTertiary */
export const surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))';

/** @deprecated instead use surfaceSolidPrimary */
export const surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';

/** @deprecated instead use surfaceSolidSecondary */
export const surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';

/** @deprecated instead use surfaceSolidTertiary */
export const surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';

/** @deprecated instead use surfaceTransparentCard */
export const surfaceCard = 'var(--plasma-colors-surface-card, var(--surface-transparent-card))';

/** @deprecated instead use surfaceTransparentSecondary */
export const buttonSecondary = 'var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))';

/** @deprecated instead use textAccent */
export const buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';

/** @deprecated instead use surfacePositive */
export const buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';

/** @deprecated instead use surfaceWarning */
export const buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';

/** @deprecated instead use surfaceNegative */
export const buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';

export const borderRadiusXxs = 'var(--border-radius-xxs, 4px)';

export const borderRadiusXs = 'var(--border-radius-xs, 6px)';

export const borderRadiusS = 'var(--border-radius-s, 8px)';

export const borderRadiusM = 'var(--border-radius-m, 12px)';

export const borderRadiusL = 'var(--border-radius-l, 16px)';

export const borderRadiusXl = 'var(--border-radius-xl, 20px)';

export const borderRadiusXxl = 'var(--border-radius-xxl, 32px)';
