// Generated by robots, do not change this manually!

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft, rgba(0, 0, 0, 0.56))';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard, rgba(0, 0, 0, 0.9))';

/** Цвет фона паранжи светлый на темном фоне */
export const onDarkOverlaySoft = 'var(--on-dark-overlay-soft, rgba(0, 0, 0, 0.56))';

/** Цвет фона паранжи темный на темном фоне */
export const onDarkOverlayHard = 'var(--on-dark-overlay-hard, rgba(0, 0, 0, 0.9))';

/** Цвет фона паранжи светлый на светлом фоне */
export const onLightOverlaySoft = 'var(--on-light-overlay-soft, rgba(0, 0, 0, 0.56))';

/** Цвет фона паранжи темный на светлом фоне */
export const onLightOverlayHard = 'var(--on-light-overlay-hard, rgba(0, 0, 0, 0.9))';

/** Инвертированный цвет фона паранжи светлый */
export const inverseOverlaySoft = 'var(--inverse-overlay-soft, rgba(0, 0, 0, 0.56))';

/** Инвертированный цвет фона паранжи темный */
export const inverseOverlayHard = 'var(--inverse-overlay-hard, rgba(0, 0, 0, 0.9))';

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary, #F5F5F5)';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary, #B3B3B3)';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary, #7A7A7A)';

/** Сплошной наборный текст */
export const textParagraph = 'var(--text-paragraph, #ECECEC)';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent, #FFFFFF)';

/** Акцентный цвет с градиентом */
export const textAccentGradient = 'var(--text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';

/** Цвет успеха */
export const textPositive = 'var(--text-positive, #1A9E32)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning, #FA5F05)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative, #FF293E)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary, #F5F5F5)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary, #B3B3B3)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary, #7A7A7A)';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraph = 'var(--on-dark-text-paragraph, #ECECEC)';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccent = 'var(--on-dark-text-accent, #FFFFFF)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradient =
    'var(--on-dark-text-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';

/** Цвет успеха на темном фоне */
export const onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarning = 'var(--on-dark-text-warning, #FA5F05)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary, #171717)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary, #4E4E4E)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary, #858585)';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraph = 'var(--on-light-text-paragraph, #262626)';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccent = 'var(--on-light-text-accent, #FFFFFF)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradient =
    'var(--on-light-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';

/** Цвет успеха на светлом фоне */
export const onLightTextPositive = 'var(--on-light-text-positive, #108E25)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarning = 'var(--on-light-text-warning, #E85702)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegative = 'var(--on-light-text-negative, #F31B30)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimary = 'var(--inverse-text-primary, #171717)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondary = 'var(--inverse-text-secondary, #4E4E4E)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiary = 'var(--inverse-text-tertiary, #858585)';

/** Инвертированный cплошной наборный текст */
export const inverseTextParagraph = 'var(--inverse-text-paragraph, #262626)';

/** Инвертированный акцентный цвет */
export const inverseTextAccent = 'var(--inverse-text-accent, #FFFFFF)';

/** Инвертированный акцентный цвет с градиентом */
export const inverseTextAccentGradient =
    'var(--inverse-text-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';

/** Инвертированный цвет успеха */
export const inverseTextPositive = 'var(--inverse-text-positive, #108E25)';

/** Инвертированный цвет предупреждения */
export const inverseTextWarning = 'var(--inverse-text-warning, #E85702)';

/** Инвертированный цвет ошибки */
export const inverseTextNegative = 'var(--inverse-text-negative, #F31B30)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default, #FFFFFF)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary, #171717)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary, #262626)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary, #363636)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card, #171717)';

/** Прозрачный фон поверхности/контрола по умолчанию */
export const surfaceTransparentDefault = 'var(--surface-transparent-default, #FFFFFF)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimary = 'var(--surface-transparent-primary, #171717)';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondary = 'var(--surface-transparent-secondary, #262626)';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, #363636)';

/** Прозрачный фон для карточек */
export const surfaceTransparentCard = 'var(--surface-transparent-card, #080808)';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent, #FFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradient = 'var(--surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative, #FF293E)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear, rgba(0, 0, 0, 0))';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #171717)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #262626)';

/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #363636)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #171717)';

/** Прозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceTransparentDefault = 'var(--on-dark-surface-transparent-default, #FFFFFF)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, #171717)';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, #262626)';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, #363636)';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, #080808)';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #FFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradient =
    'var(--on-dark-surface-accent-gradient, linear-gradient(135deg, black 0%, #FFFFFF 100%))';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export const onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';

/** Фон поверхности/контрола без заливки на темном фоне */
export const onDarkSurfaceClear = 'var(--on-dark-surface-clear, rgba(0, 0, 0, 0))';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F5F5F5)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #ECECEC)';

/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #DDDDDD)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #F7F7F7)';

/** Прозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceTransparentDefault = 'var(--on-light-surface-transparent-default, #080808)';

/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, #F5F5F5)';

/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, #ECECEC)';

/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, #DDDDDD)';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, #F7F7F7)';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccent = 'var(--on-light-surface-accent, #FFFFFF)';

/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradient =
    'var(--on-light-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositive = 'var(--on-light-surface-positive, #108E25)';

/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export const onLightSurfaceWarning = 'var(--on-light-surface-warning, #E85702)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegative = 'var(--on-light-surface-negative, #F31B30)';

/** Фон поверхности/контрола без заливки на светлом фоне */
export const onLightSurfaceClear = 'var(--on-light-surface-clear, rgba(0, 0, 0, 0))';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceSolidDefault = 'var(--inverse-surface-solid-default, #080808)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimary = 'var(--inverse-surface-solid-primary, #F5F5F5)';

/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidSecondary = 'var(--inverse-surface-solid-secondary, #ECECEC)';

/** Инвертированный третичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidTertiary = 'var(--inverse-surface-solid-tertiary, #DDDDDD)';

/** Инвертированный основной фон для карточек */
export const inverseSurfaceSolidCard = 'var(--inverse-surface-solid-card, #F7F7F7)';

/** Инвертированный прозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceTransparentDefault = 'var(--inverse-surface-transparent-default, #080808)';

/** Инвертированный основной прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentPrimary = 'var(--inverse-surface-transparent-primary, #F5F5F5)';

/** Инвертированный вторичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentSecondary = 'var(--inverse-surface-transparent-secondary, #ECECEC)';

/** Инвертированный третичный прозрачный фон поверхности/контрола */
export const inverseSurfaceTransparentTertiary = 'var(--inverse-surface-transparent-tertiary, #DDDDDD)';

/** Инвертированный прозрачный фон для карточек */
export const inverseSurfaceTransparentCard = 'var(--inverse-surface-transparent-card, #F7F7F7)';

/** Инвертированный акцентный фон поверхности/контрола */
export const inverseSurfaceAccent = 'var(--inverse-surface-accent, #FFFFFF)';

/** Инвертированный акцентный фон поверхности/контрола с градиентом */
export const inverseSurfaceAccentGradient =
    'var(--inverse-surface-accent-gradient, linear-gradient(135deg, white 0%, #FFFFFF 100%))';

/** Инвертированный цвет фона поверхности/контрола успех */
export const inverseSurfacePositive = 'var(--inverse-surface-positive, #108E25)';

/** Инвертированный цвет фона поверхности/контрола предупреждение */
export const inverseSurfaceWarning = 'var(--inverse-surface-warning, #E85702)';

/** Инвертированный цвет фона поверхности/контрола ошибка */
export const inverseSurfaceNegative = 'var(--inverse-surface-negative, #F31B30)';

/** Инвертированный фон поверхности/контрола без заливки */
export const inverseSurfaceClear = 'var(--inverse-surface-clear, rgba(0, 0, 0, 0))';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary, #000000)';

/** Вторичный фон */
export const backgroundSecondary = 'var(--background-secondary, #080808)';

/** Третичный фон */
export const backgroundTertiary = 'var(--background-tertiary, #171717)';

/** Основной фон на темном фоне */
export const darkBackgroundPrimary = 'var(--dark-background-primary, #000000)';

/** Вторичный фон на темном фоне */
export const darkBackgroundSecondary = 'var(--dark-background-secondary, #080808)';

/** Третичный фон на темном фоне */
export const darkBackgroundTertiary = 'var(--dark-background-tertiary, #171717)';

/** Основной фон на светлом фоне */
export const lightBackgroundPrimary = 'var(--light-background-primary, #FFFFFF)';

/** Вторичный фон на светлом фоне */
export const lightBackgroundSecondary = 'var(--light-background-secondary, #FFFFFF)';

/** Третичный фон на светлом фоне */
export const lightBackgroundTertiary = 'var(--light-background-tertiary, #FFFFFF)';

/** Инвертированный основной фон */
export const inverseBackgroundPrimary = 'var(--inverse-background-primary, #FFFFFF)';

/** Инвертированный вторичный фон */
export const inverseBackgroundSecondary = 'var(--inverse-background-secondary, #FFFFFF)';

/** Инвертированный третичный фон */
export const inverseBackgroundTertiary = 'var(--inverse-background-tertiary, #FFFFFF)';

export const skeletonGradient =
    'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';

export const skeletonGradientLighter =
    'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';

/** @deprecated instead use onDarkTextPrimary */
export const whitePrimary = 'var(--plasma-colors-white-primary, #F5F5F5)';

/** @deprecated instead use onDarkTextSecondary */
export const whiteSecondary = 'var(--plasma-colors-white-secondary, #B3B3B3)';

/** @deprecated instead use onDarkTextTertiary */
export const whiteTertiary = 'var(--plasma-colors-white-tertiary, #7A7A7A)';

/** @deprecated instead use onLightTextPrimary */
export const blackPrimary = 'var(--plasma-colors-black-primary, #171717)';

/** @deprecated instead use onLightTextSecondary */
export const blackSecondary = 'var(--plasma-colors-black-secondary, #4E4E4E)';

/** @deprecated instead use onLightTextTertiary */
export const blackTertiary = 'var(--plasma-colors-black-tertiary, #858585)';

/** @deprecated instead use onLightSurfaceSolidDefault */
export const buttonBlack = 'var(--plasma-colors-button-black, #080808)';

/** @deprecated instead use onLightSurfaceTransparentSecondary */
export const buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, #ECECEC)';

/** @deprecated instead use onDarkSurfaceSolidDefault */
export const buttonWhite = 'var(--plasma-colors-button-white, #FFFFFF)';

/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export const buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, #262626)';

/** @deprecated instead use textPrimary */
export const text = 'var(--plasma-colors-text, #F5F5F5)';

/** @deprecated instead use textPrimary */
export const primary = 'var(--plasma-colors-primary, #F5F5F5)';

/** @deprecated instead use textSecondary */
export const secondary = 'var(--plasma-colors-secondary, #B3B3B3)';

/** @deprecated instead use textTertiary */
export const tertiary = 'var(--plasma-colors-tertiary, #7A7A7A)';

/** @deprecated instead use textParagraph */
export const paragraph = 'var(--plasma-colors-paragraph, #ECECEC)';

/** @deprecated instead use backgroundPrimary */
export const background = 'var(--plasma-colors-background, #000000)';

/** @deprecated instead use textAccent */
export const accent = 'var(--plasma-colors-accent, #FFFFFF)';

/** @deprecated instead use textPositive */
export const success = 'var(--plasma-colors-success, #1A9E32)';

/** @deprecated instead use textWarning */
export const warning = 'var(--plasma-colors-warning, #FA5F05)';

/** @deprecated instead use textNegative */
export const critical = 'var(--plasma-colors-critical, #FF293E)';

/** @deprecated instead use overlaySoft */
export const overlay = 'var(--plasma-colors-overlay, rgba(0, 0, 0, 0.56))';

/** @deprecated instead use surfaceTransparentPrimary */
export const surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, #171717)';

/** @deprecated instead use surfaceTransparentSecondary */
export const surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, #262626)';

/** @deprecated instead use surfaceTransparentTertiary */
export const surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, #363636)';

/** @deprecated instead use surfaceSolidPrimary */
export const surfaceSolid01 = 'var(--plasma-colors-surface-solid01, #171717)';

/** @deprecated instead use surfaceSolidSecondary */
export const surfaceSolid02 = 'var(--plasma-colors-surface-solid02, #262626)';

/** @deprecated instead use surfaceSolidTertiary */
export const surfaceSolid03 = 'var(--plasma-colors-surface-solid03, #363636)';

/** @deprecated instead use surfaceTransparentCard */
export const surfaceCard = 'var(--plasma-colors-surface-card, #080808)';

/** @deprecated instead use surfaceTransparentSecondary */
export const buttonSecondary = 'var(--plasma-colors-button-secondary, #262626)';

/** @deprecated instead use textAccent */
export const buttonAccent = 'var(--plasma-colors-button-accent, #FFFFFF)';

/** @deprecated instead use surfacePositive */
export const buttonSuccess = 'var(--plasma-colors-button-success, #1A9E32)';

/** @deprecated instead use surfaceWarning */
export const buttonWarning = 'var(--plasma-colors-button-warning, #FA5F05)';

/** @deprecated instead use surfaceNegative */
export const buttonCritical = 'var(--plasma-colors-button-critical, #FF293E)';

export const shadowDownSoftS =
    'var(--shadow-down-soft-s, 0px 4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-down-soft-s, 0px 1px 4px -1px rgba(0, 0, 0, 0.04))';

export const shadowDownSoftM = 'var(--shadow-down-soft-m, 0px 24px 48px -8px rgba(0, 0, 0, 0.08))';

export const shadowDownSoftL = 'var(--shadow-down-soft-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.08))';

export const shadowDownHardS =
    'var(--shadow-down-hard-s, 0px 4px 12px -3px rgba(8, 8, 8, 0.16)), var(--shadow-down-hard-s, 0px 1px 4px -2px rgba(0, 0, 0, 0.08))';

export const shadowDownHardM = 'var(--shadow-down-hard-m, 0px 16px 32px -8px rgba(0, 0, 0, 0.24))';

export const shadowDownHardL = 'var(--shadow-down-hard-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.40))';

export const shadowUpSoftS =
    'var(--shadow-up-soft-s, 0px -4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-up-soft-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';

export const shadowUpSoftM = 'var(--shadow-up-soft-m, 0px -24px 48px -8px rgba(0, 0, 0, 0.08))';

export const shadowUpSoftL = 'var(--shadow-up-soft-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.08))';

export const shadowUpHardS =
    'var(--shadow-up-hard-s, 0px -4px 12px -3px rgba(8, 8, 8, 0.20)), var(--shadow-up-hard-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';

export const shadowUpHardM = 'var(--shadow-up-hard-m, 0px -16px 32px -8px rgba(0, 0, 0, 0.24))';

export const shadowUpHardL = 'var(--shadow-up-hard-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.40))';

export const borderRadiusXxs = 'var(--border-radius-xxs, 4px)';

export const borderRadiusXs = 'var(--border-radius-xs, 6px)';

export const borderRadiusS = 'var(--border-radius-s, 8px)';

export const borderRadiusM = 'var(--border-radius-m, 12px)';

export const borderRadiusL = 'var(--border-radius-l, 16px)';

export const borderRadiusXl = 'var(--border-radius-xl, 20px)';

export const borderRadiusXxl = 'var(--border-radius-xxl, 40px)';
