// Generated by robots, do not change this manually!

export const outlineDefaultOutlinePrimary = 'var(--outline-default-outline-primary, #4E4E4E)';

export const outlineDefaultOutlineSecondary = 'var(--outline-default-outline-secondary, #707070)';

export const outlineDefaultOutlineTertiary = 'var(--outline-default-outline-tertiary, #949494)';

export const outlineDefaultOutlinePositive = 'var(--outline-default-outline-positive, #24B23E)';

export const outlineDefaultOutlineWarning = 'var(--outline-default-outline-warning, #FF7024)';

export const outlineDefaultOutlineNegative = 'var(--outline-default-outline-negative, #FF3D51)';

export const outlineDefaultOutlineInfo = 'var(--outline-default-outline-info, #199AF0)';

export const outlineDefaultOutlineRating = 'var(--outline-default-outline-rating, #FFD83D)';

export const outlineDefaultOutlinePositiveMinor = 'var(--outline-default-outline-positive-minor, #084008)';

export const outlineDefaultOutlineWarningMinor = 'var(--outline-default-outline-warning-minor, #5C2709)';

export const outlineDefaultOutlineNegativeMinor = 'var(--outline-default-outline-negative-minor, #6B1019)';

export const outlineDefaultOutlineInfoMinor = 'var(--outline-default-outline-info-minor, #0D3B59)';

export const outlineDefaultOutlineRatingMinor = 'var(--outline-default-outline-rating-minor, #403507)';

export const outlineDefaultOutlinePositiveTransparent =
    'var(--outline-default-outline-positive-transparent, rgba(36,178,62,0.16))';

export const outlineDefaultOutlineWarningTransparent =
    'var(--outline-default-outline-warning-transparent, rgba(255,112,36,0.16))';

export const outlineDefaultOutlineNegativeTransparent =
    'var(--outline-default-outline-negative-transparent, rgba(255,61,81,0.16))';

export const outlineDefaultOutlineInfoTransparent =
    'var(--outline-default-outline-info-transparent, rgba(82,142,255,0.16))';

export const outlineDefaultOutlineRatingTransparent =
    'var(--outline-default-outline-rating-transparent, rgba(255,216,61,0.16))';

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft, rgba(8,8,8,0.56))';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard, rgba(8,8,8,0.96))';

export const overlayBlur = 'var(--overlay-blur, rgba(8,8,8,0.20))';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent, #24B23E)';

/** Акцентный цвет с градиентом */
export const textAccentGradient = 'var(--text-accent-gradient, linear-gradient(45deg, #0B8C0B 0%, #14CC98 100%))';

/** Цвет успеха */
export const textPositive = 'var(--text-positive, #1A9E32)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning, #FA5F05)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative, #FF293E)';

export const textInfo = 'var(--text-info, #118CDF)';

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary, #FFFFFF)';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary, #B3B3B3)';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary, #707070)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary, #FFFFFF)';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary, #B3B3B3)';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary, #707070)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary, #262626)';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary, #4E4E4E)';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary, #949494)';

/** Инвертированный акцентный цвет */
export const inverseTextAccent = 'var(--inverse-text-accent, #108E26)';

/** Инвертированный акцентный цвет с градиентом */
export const inverseTextAccentGradient =
    'var(--inverse-text-accent-gradient, linear-gradient(45deg, #108210 0%, #14CC98 100%))';

/** Инвертированный цвет предупреждения */
export const inverseTextWarning = 'var(--inverse-text-warning, #E85702)';

/** Инвертированный цвет ошибки */
export const inverseTextNegative = 'var(--inverse-text-negative, #E31227)';

export const inverseTextInfo = 'var(--inverse-text-info, #0C72B6)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimary = 'var(--inverse-text-primary, #262626)';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondary = 'var(--inverse-text-secondary, #4E4E4E)';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiary = 'var(--inverse-text-tertiary, #949494)';

/** Инвертированный цвет успеха */
export const inverseTextPositive = 'var(--inverse-text-positive, #108E26)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card, #262626)';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary, #262626)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary, #363636)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary, #4E4E4E)';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default, #080808)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear, rgba(0,0,0,0))';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent, #1A9E32)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradient = 'var(--surface-accent-gradient, linear-gradient(45deg, #108210 0%, #14CC98 100%))';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative, #FF293E)';

export const surfaceInfo = 'var(--surface-info, #118CDF)';

export const surfaceRating = 'var(--surface-rating, #FFD83D)';

export const surfacePositiveMinor = 'var(--surface-positive-minor, #0A2B10)';

export const surfaceWarningMinor = 'var(--surface-warning-minor, #3D1D0A)';

export const surfaceNegativeMinor = 'var(--surface-negative-minor, #4A0D13)';

export const surfaceInfoMinor = 'var(--surface-info-minor, #0C283B)';

export const surfaceRatingMinor = 'var(--surface-rating-minor, #2B2408)';

/** Прозрачный цвет фона поверхности/контрола успех */
export const surfaceTransparentPositive = 'var(--surface-transparent-positive, rgba(26,158,50,0.08))';

/** Прозрачный цвет фона поверхности/контрола предупреждение */
export const surfaceTransparentWarning = 'var(--surface-transparent-warning, rgba(255,112,36,0.08))';

/** Прозрачный цвет фона поверхности/контрола ошибка */
export const surfaceTransparentNegative = 'var(--surface-transparent-negative, rgba(255,61,81,0.08))';

export const surfaceTransparentInfo = 'var(--surface-transparent-info, rgba(25,154,240,0.08))';

export const surfaceTransparentRating = 'var(--surface-transparent-rating, rgba(183,146,1,0.08))';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255,255,255,0.06))';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255,255,255,0.06))';

/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, rgba(255,255,255,0.12))';

/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255,255,255,0.2))';

/** Непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep, rgba(255,255,255,0.64))';

/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #F5F5F5)';

/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #ECECEC)';

/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';

/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #262626)';

/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #363636)';

/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';

/** Инвертированный основной непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidPrimary = 'var(--inverse-surface-solid-primary, #F5F5F5)';

/** Инвертированный вторичный непрозрачный фон поверхности/контрола */
export const inverseSurfaceSolidSecondary = 'var(--inverse-surface-solid-secondary, #ECECEC)';

/** Инвертированный непрозрачный фон поверхности/контрола по умолчанию */
export const inverseSurfaceSolidDefault = 'var(--inverse-surface-solid-default, #FFFFFF)';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary, #080808)';

export const backgroundGradientGreen =
    'var(--background-gradient-green, linear-gradient(36.09deg, #24B23E 1.152%, #AFED00 95.819%))';

export const backgroundGradientOrange =
    'var(--background-gradient-orange, linear-gradient(36.09deg, #FA6D20 1.152%, #FA9D6B 95.819%))';

export const backgroundGradientYellow =
    'var(--background-gradient-yellow, linear-gradient(36.09deg, #F2C202 1.152%, #FFD83D 95.819%))';

export const backgroundGradientBlue =
    'var(--background-gradient-blue, linear-gradient(36.09deg, #129DFA 1.152%, #52BAFF 95.819%))';

export const backgroundGradientRed =
    'var(--background-gradient-red, linear-gradient(36.09deg, #FF2E43 1.152%, #FD96A0 95.819%))';

export const backgroundGradientPink =
    'var(--background-gradient-pink, linear-gradient(34.38deg, #FF1F78 7.846%, #FF8FBC 90.55%))';

export const backgroundGradientPurple =
    'var(--background-gradient-purple, linear-gradient(34.38deg, #AD42F5 7.846%, #D39CF7 90.55%))';

export const skeletonGradient =
    'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';

export const skeletonGradientLighter =
    'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';

/** @deprecated instead use onDarkTextPrimary */
export const whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';

/** @deprecated instead use onDarkTextSecondary */
export const whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';

/** @deprecated instead use onDarkTextTertiary */
export const whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';

/** @deprecated instead use onLightTextPrimary */
export const blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';

/** @deprecated instead use onLightTextSecondary */
export const blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';

/** @deprecated instead use onLightTextTertiary */
export const blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';

/** @deprecated instead use onLightSurfaceSolidDefault */
export const buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';

/** @deprecated instead use onDarkSurfaceSolidDefault */
export const buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';

/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export const buttonWhiteSecondary =
    'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';

/** @deprecated instead use textPrimary */
export const text = 'var(--plasma-colors-text, var(--text-primary))';

/** @deprecated instead use textPrimary */
export const primary = 'var(--plasma-colors-primary, var(--text-primary))';

/** @deprecated instead use textSecondary */
export const secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';

/** @deprecated instead use textTertiary */
export const tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';

/** @deprecated instead use backgroundPrimary */
export const background = 'var(--plasma-colors-background, var(--background-primary))';

/** @deprecated instead use textAccent */
export const accent = 'var(--plasma-colors-accent, var(--text-accent))';

/** @deprecated instead use textPositive */
export const success = 'var(--plasma-colors-success, var(--text-positive))';

/** @deprecated instead use textWarning */
export const warning = 'var(--plasma-colors-warning, var(--text-warning))';

/** @deprecated instead use textNegative */
export const critical = 'var(--plasma-colors-critical, var(--text-negative))';

/** @deprecated instead use overlaySoft */
export const overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';

/** @deprecated instead use surfaceSolidPrimary */
export const surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';

/** @deprecated instead use surfaceSolidSecondary */
export const surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';

/** @deprecated instead use surfaceSolidTertiary */
export const surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';

/** @deprecated instead use textAccent */
export const buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';

/** @deprecated instead use surfacePositive */
export const buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';

/** @deprecated instead use surfaceWarning */
export const buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';

/** @deprecated instead use surfaceNegative */
export const buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';
