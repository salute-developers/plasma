// Generated by robots, do not change this manually!

/** Цвет фона паранжи светлый */
export const overlaySoft = 'var(--overlay-soft, rgba(8, 8, 8, 0.56))';

/** Цвет фона паранжи темный */
export const overlayHard = 'var(--overlay-hard, rgba(8, 8, 8, 0.96))';

export const overlayBlur = 'var(--overlay-blur, rgba(8, 8, 8, 0.28))';

/** Цвет фона паранжи светлый на темном фоне */
export const onDarkOverlaySoft = 'var(--on-dark-overlay-soft, rgba(8, 8, 8, 0.56))';

/** Цвет фона паранжи темный на темном фоне */
export const onDarkOverlayHard = 'var(--on-dark-overlay-hard, rgba(8, 8, 8, 0.96))';

export const onDarkOverlayBlur = 'var(--on-dark-overlay-blur, rgba(8, 8, 8, 0.28))';

/** Цвет фона паранжи светлый на светлом фоне */
export const onLightOverlaySoft = 'var(--on-light-overlay-soft, rgba(249, 249, 249, 0.56))';

/** Цвет фона паранжи темный на светлом фоне */
export const onLightOverlayHard = 'var(--on-light-overlay-hard, rgba(249, 249, 249, 0.96))';

export const onLightOverlayBlur = 'var(--on-light-overlay-blur, rgba(249, 249, 249, 0.28))';

/** Основной цвет текста */
export const textPrimary = 'var(--text-primary, rgba(255, 255, 255, 0.96))';

/** Вторичный цвет текста */
export const textSecondary = 'var(--text-secondary, rgba(255, 255, 255, 0.56))';

/** Третичный цвет текста */
export const textTertiary = 'var(--text-tertiary, rgba(255, 255, 255, 0.28))';

/** Сплошной наборный текст */
export const textParagraph = 'var(--text-paragraph, rgba(255, 255, 255, 0.8))';

/** Акцентный цвет */
export const textAccent = 'var(--text-accent, #3F81FD)';

/** Акцентный цвет с градиентом */
export const textAccentGradient = 'var(--text-accent-gradient, linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';

/** Цвет успеха */
export const textPositive = 'var(--text-positive, #1A9E32)';

/** Цвет предупреждения */
export const textWarning = 'var(--text-warning, #FA5F05)';

/** Цвет ошибки */
export const textNegative = 'var(--text-negative, #FF293E)';

/** Основной цвет текста на темном фоне */
export const onDarkTextPrimary = 'var(--on-dark-text-primary, rgba(255, 255, 255, 0.96))';

/** Вторичный цвет текста на темном фоне */
export const onDarkTextSecondary = 'var(--on-dark-text-secondary, rgba(255, 255, 255, 0.56))';

/** Третичный цвет текста на темном фоне */
export const onDarkTextTertiary = 'var(--on-dark-text-tertiary, rgba(255, 255, 255, 0.28))';

/** Сплошной наборный текст на темном фоне */
export const onDarkTextParagraph = 'var(--on-dark-text-paragraph, rgba(255, 255, 255, 0.8))';

/** Акцентный цвет на темном фоне */
export const onDarkTextAccent = 'var(--on-dark-text-accent, #3F81FD)';

/** Акцентный цвет с градиентом на темном фоне */
export const onDarkTextAccentGradient =
    'var(--on-dark-text-accent-gradient, linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';

/** Цвет успеха на темном фоне */
export const onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';

/** Цвет предупреждения на темном фоне */
export const onDarkTextWarning = 'var(--on-dark-text-warning, #FA5F05)';

/** Цвет ошибки на темном фоне */
export const onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';

/** Основной цвет текста на светлом фоне */
export const onLightTextPrimary = 'var(--on-light-text-primary, rgba(8, 8, 8, 0.96))';

/** Вторичный цвет текста на светлом фоне */
export const onLightTextSecondary = 'var(--on-light-text-secondary, rgba(8, 8, 8, 0.56))';

/** Третичный цвет текста на светлом фоне */
export const onLightTextTertiary = 'var(--on-light-text-tertiary, rgba(8, 8, 8, 0.28))';

/** Сплошной наборный текст на светлом фоне */
export const onLightTextParagraph = 'var(--on-light-text-paragraph, rgba(8, 8, 8, 0.8))';

/** Акцентный цвет на светлом фоне */
export const onLightTextAccent = 'var(--on-light-text-accent, #2A72F8)';

/** Акцентный цвет с градиентом на светлом фоне */
export const onLightTextAccentGradient =
    'var(--on-light-text-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';

/** Цвет успеха на светлом фоне */
export const onLightTextPositive = 'var(--on-light-text-positive, #1A9E32)';

/** Цвет предупреждения на светлом фоне */
export const onLightTextWarning = 'var(--on-light-text-warning, #FA5F05)';

/** Цвет ошибки на светлом фоне */
export const onLightTextNegative = 'var(--on-light-text-negative, #F31B31)';

/** Инвертированный основной цвет текста */
export const inverseTextPrimary = 'var(--inverse-text-primary, rgba(8, 8, 8, 0.96))';

/** Инвертированный вторичный цвет текста */
export const inverseTextSecondary = 'var(--inverse-text-secondary, rgba(8, 8, 8, 0.56))';

/** Инвертированный третичный цвет текста */
export const inverseTextTertiary = 'var(--inverse-text-tertiary, rgba(8, 8, 8, 0.28))';

/** Инвертированный cплошной наборный текст */
export const inverseTextParagraph = 'var(--inverse-text-paragraph, rgba(8, 8, 8, 0.8))';

/** Непрозрачный фон поверхности/контрола по умолчанию */
export const surfaceSolidDefault = 'var(--surface-solid-default, rgba(255, 255, 255, 1))';

/** Основной непрозрачный фон поверхности/контрола */
export const surfaceSolidPrimary = 'var(--surface-solid-primary, #171717)';

/** Вторичный непрозрачный фон поверхности/контрола */
export const surfaceSolidSecondary = 'var(--surface-solid-secondary, #262626)';

/** Третичный непрозрачный фон поверхности/контрола */
export const surfaceSolidTertiary = 'var(--surface-solid-tertiary, #363636)';

/** Основной фон для карточек */
export const surfaceSolidCard = 'var(--surface-solid-card, #171717)';

/** Основной прозрачный фон поверхности/контрола */
export const surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(255, 255, 255, 0.06))';

/** Вторичный прозрачный фон поверхности/контрола */
export const surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(255, 255, 255, 0.12))';

/** Третичный прозрачный фон поверхности/контрола */
export const surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';

/** Прозрачный фон для карточек */
export const surfaceTransparentCard = 'var(--surface-transparent-card, rgba(255, 255, 255, 0.12))';

/** Акцентный фон поверхности/контрола */
export const surfaceAccent = 'var(--surface-accent, #3F81FD)';

/** Акцентный фон поверхности/контрола с градиентом */
export const surfaceAccentGradient =
    'var(--surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%), linear-gradient(89.83deg, #5E94FF 0%, #43DBFA 100%))';

/** Цвет фона поверхности/контрола успех */
export const surfacePositive = 'var(--surface-positive, #1A9E32)';

/** Цвет фона поверхности/контрола предупреждение */
export const surfaceWarning = 'var(--surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка */
export const surfaceNegative = 'var(--surface-negative, #FF293E)';

/** Фон поверхности/контрола без заливки */
export const surfaceClear = 'var(--surface-clear, rgba(255, 255, 255, 0))';

export const surfaceTransparentDeep = 'var(--surface-transparent-deep, rgba(255, 255, 255, 0.64))';

/** Непр. фон поверхности/контрола по умолчанию на тем. фоне */
export const onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, rgba(255, 255, 255, 1))';

/** Осн. непрозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #171717)';

/** Вторичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #262626)';

/** Третичный непр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #363636)';

/** Основной фон для карточек на темном фоне */
export const onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #171717)';

/** Основной прозрачный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';

/** Вторичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentSecondary =
    'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';

/** Третичный прозр. фон поверхности/контрола на темном фоне */
export const onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';

/** Прозрачный фон для карточек на темном фоне */
export const onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.12))';

/** Акцентный фон поверхности/контрола на темном фоне */
export const onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #3F81FD)';

/** Акцентный фон поверхн./контрола с градиентом на темном фоне */
export const onDarkSurfaceAccentGradient =
    'var(--on-dark-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';

/** Цвет фона поверхности/контрола успех на темном фоне */
export const onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';

/** Цвет фона поверхн./контрола предупреждение на темном фоне */
export const onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка на темном фоне */
export const onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';

export const onDarkSurfaceTransparentDeep = 'var(--on-dark-surface-transparent-deep, rgba(255, 255, 255, 0.64))';

/** Непр. фон поверхности/контрола по умолчанию на светлом фоне */
export const onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #080808)';

/** Осн. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F5F5F5)';

/** Втор. непрозрачный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #ECECEC)';

/** Третичный непр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #DDDDDD)';

/** Основной фон для карточек на светлом фоне */
export const onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, rgba(255, 255, 255, 1))';

/** Основной прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 8, 8, 0.03))';

/** Вторичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 8, 8, 0.06))';

/** Третичный прозр. фон поверхности/контрола на светлом фоне */
export const onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 8, 8, 0.12))';

/** Прозрачный фон для карточек на светлом фоне */
export const onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(255, 255, 255, 1))';

/** Акцентный фон поверхности/контрола на светлом фоне */
export const onLightSurfaceAccent = 'var(--on-light-surface-accent, #2A72F8)';

/** Акцент. фон поверхн./контрола с градиентом на светлом фоне */
export const onLightSurfaceAccentGradient =
    'var(--on-light-surface-accent-gradient, linear-gradient(93.97deg, #3E79F0 6.49%, #27C6E5 93.51%))';

/** Цвет фона поверхности/контрола успех на светлом фоне */
export const onLightSurfacePositive = 'var(--on-light-surface-positive, #1A9E32)';

/** Цвет фона поверхн./контрола предупреждение на светлом фоне */
export const onLightSurfaceWarning = 'var(--on-light-surface-warning, #FA5F05)';

/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export const onLightSurfaceNegative = 'var(--on-light-surface-negative, #F31B31)';

export const onLightSurfaceTransparentDeep = 'var(--on-light-surface-transparent-deep, rgba(8, 8, 8, 0.64))';

/** Основной фон */
export const backgroundPrimary = 'var(--background-primary, #080808)';

/** Основной фон на темном фоне */
export const darkBackgroundPrimary = 'var(--dark-background-primary, #080808)';

/** Основной фон на светлом фоне */
export const lightBackgroundPrimary = 'var(--light-background-primary, #F9F9F9)';

export const skeletonGradient =
    'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';

export const skeletonGradientLighter =
    'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';

/** @deprecated instead use onDarkTextPrimary */
export const whitePrimary = 'var(--plasma-colors-white-primary, var(--on-dark-text-primary))';

/** @deprecated instead use onDarkTextSecondary */
export const whiteSecondary = 'var(--plasma-colors-white-secondary, var(--on-dark-text-secondary))';

/** @deprecated instead use onDarkTextTertiary */
export const whiteTertiary = 'var(--plasma-colors-white-tertiary, var(--on-dark-text-tertiary))';

/** @deprecated instead use onLightTextPrimary */
export const blackPrimary = 'var(--plasma-colors-black-primary, var(--on-light-text-primary))';

/** @deprecated instead use onLightTextSecondary */
export const blackSecondary = 'var(--plasma-colors-black-secondary, var(--on-light-text-secondary))';

/** @deprecated instead use onLightTextTertiary */
export const blackTertiary = 'var(--plasma-colors-black-tertiary, var(--on-light-text-tertiary))';

/** @deprecated instead use onLightSurfaceSolidDefault */
export const buttonBlack = 'var(--plasma-colors-button-black, var(--on-light-surface-solid-default))';

/** @deprecated instead use onLightSurfaceTransparentSecondary */
export const buttonBlackSecondary =
    'var(--plasma-colors-button-black-secondary, var(--on-light-surface-transparent-secondary))';

/** @deprecated instead use onDarkSurfaceSolidDefault */
export const buttonWhite = 'var(--plasma-colors-button-white, var(--on-dark-surface-solid-default))';

/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export const buttonWhiteSecondary =
    'var(--plasma-colors-button-white-secondary, var(--on-dark-surface-transparent-secondary))';

/** @deprecated instead use textPrimary */
export const text = 'var(--plasma-colors-text, var(--text-primary))';

/** @deprecated instead use textPrimary */
export const primary = 'var(--plasma-colors-primary, var(--text-primary))';

/** @deprecated instead use textSecondary */
export const secondary = 'var(--plasma-colors-secondary, var(--text-secondary))';

/** @deprecated instead use textTertiary */
export const tertiary = 'var(--plasma-colors-tertiary, var(--text-tertiary))';

/** @deprecated instead use textParagraph */
export const paragraph = 'var(--plasma-colors-paragraph, var(--text-paragraph))';

/** @deprecated instead use backgroundPrimary */
export const background = 'var(--plasma-colors-background, var(--background-primary))';

/** @deprecated instead use textAccent */
export const accent = 'var(--plasma-colors-accent, var(--text-accent))';

/** @deprecated instead use textPositive */
export const success = 'var(--plasma-colors-success, var(--text-positive))';

/** @deprecated instead use textWarning */
export const warning = 'var(--plasma-colors-warning, var(--text-warning))';

/** @deprecated instead use textNegative */
export const critical = 'var(--plasma-colors-critical, var(--text-negative))';

/** @deprecated instead use overlaySoft */
export const overlay = 'var(--plasma-colors-overlay, var(--overlay-soft))';

/** @deprecated instead use surfaceTransparentPrimary */
export const surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, var(--surface-transparent-primary))';

/** @deprecated instead use surfaceTransparentSecondary */
export const surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, var(--surface-transparent-secondary))';

/** @deprecated instead use surfaceTransparentTertiary */
export const surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, var(--surface-transparent-tertiary))';

/** @deprecated instead use surfaceSolidPrimary */
export const surfaceSolid01 = 'var(--plasma-colors-surface-solid01, var(--surface-solid-primary))';

/** @deprecated instead use surfaceSolidSecondary */
export const surfaceSolid02 = 'var(--plasma-colors-surface-solid02, var(--surface-solid-secondary))';

/** @deprecated instead use surfaceSolidTertiary */
export const surfaceSolid03 = 'var(--plasma-colors-surface-solid03, var(--surface-solid-tertiary))';

/** @deprecated instead use surfaceTransparentCard */
export const surfaceCard = 'var(--plasma-colors-surface-card, var(--surface-transparent-card))';

/** @deprecated instead use surfaceTransparentSecondary */
export const buttonSecondary = 'var(--plasma-colors-button-secondary, var(--surface-transparent-secondary))';

/** @deprecated instead use textAccent */
export const buttonAccent = 'var(--plasma-colors-button-accent, var(--text-accent))';

/** @deprecated instead use surfacePositive */
export const buttonSuccess = 'var(--plasma-colors-button-success, var(--surface-positive))';

/** @deprecated instead use surfaceWarning */
export const buttonWarning = 'var(--plasma-colors-button-warning, var(--surface-warning))';

/** @deprecated instead use surfaceNegative */
export const buttonCritical = 'var(--plasma-colors-button-critical, var(--surface-negative))';

export const shadowDownSoftS =
    'var(--shadow-down-soft-s, 0px 4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-down-soft-s, 0px 1px 4px -1px rgba(0, 0, 0, 0.04))';

export const shadowDownSoftM = 'var(--shadow-down-soft-m, 0px 24px 48px -8px rgba(0, 0, 0, 0.08))';

export const shadowDownSoftL = 'var(--shadow-down-soft-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.08))';

export const shadowDownHardS =
    'var(--shadow-down-hard-s, 0px 4px 12px -3px rgba(8, 8, 8, 0.16)), var(--shadow-down-hard-s, 0px 1px 4px -2px rgba(0, 0, 0, 0.08))';

export const shadowDownHardM = 'var(--shadow-down-hard-m, 0px 16px 32px -8px rgba(0, 0, 0, 0.24))';

export const shadowDownHardL = 'var(--shadow-down-hard-l, 0px 60px 112px -8px rgba(0, 0, 0, 0.40))';

export const shadowUpSoftS =
    'var(--shadow-up-soft-s, 0px -4px 14px -4px rgba(8, 8, 8, 0.08)), var(--shadow-up-soft-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';

export const shadowUpSoftM = 'var(--shadow-up-soft-m, 0px -24px 48px -8px rgba(0, 0, 0, 0.08))';

export const shadowUpSoftL = 'var(--shadow-up-soft-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.08))';

export const shadowUpHardS =
    'var(--shadow-up-hard-s, 0px -4px 12px -3px rgba(8, 8, 8, 0.20)), var(--shadow-up-hard-s, 0px -1px 4px -1px rgba(0, 0, 0, 0.03))';

export const shadowUpHardM = 'var(--shadow-up-hard-m, 0px -16px 32px -8px rgba(0, 0, 0, 0.24))';

export const shadowUpHardL = 'var(--shadow-up-hard-l, 0px -60px 112px -8px rgba(0, 0, 0, 0.40))';
