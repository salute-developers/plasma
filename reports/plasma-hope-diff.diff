--- packages/plasma-web/api/plasma-web.api.md
+++ packages/plasma-b2c/api/plasma-b2c.api.md
@@ -1,9 +1,11 @@
-## API Report File for "@salutejs/plasma-web"
+## API Report File for "@salutejs/plasma-b2c"
 
 > Do not edit this file. It is a report generated by [API Extractor](https://api-extractor.com/).
 
 ```ts
 
+/// <reference types="react" />
+
 import { addFocus } from '@salutejs/plasma-core';
 import { animatedScrollToX } from '@salutejs/plasma-core';
 import { animatedScrollToY } from '@salutejs/plasma-core';
@@ -32,6 +34,7 @@
 import { BodyS } from '@salutejs/plasma-typo';
 import { BodyXS } from '@salutejs/plasma-typo';
 import { BodyXXS } from '@salutejs/plasma-typo';
+import { BreakWordProps } from '@salutejs/plasma-core';
 import { Button1 } from '@salutejs/plasma-core';
 import { Button2 } from '@salutejs/plasma-core';
 import type { ButtonContentProps } from '@salutejs/plasma-core';
@@ -50,7 +53,7 @@
 import { CarouselItem } from '@salutejs/plasma-core';
 import { CarouselItemProps } from '@salutejs/plasma-core';
 import type { CarouselProps as CarouselProps_2 } from '@salutejs/plasma-core';
-import type { ComponentType } from 'react';
+import { ChangeEvent } from 'react';
 import { convertRoundnessMatrix } from '@salutejs/plasma-core';
 import { CoverProps } from '@salutejs/plasma-core/components/Card/CardContent';
 import type { DetailedHTMLProps } from 'react';
@@ -58,7 +61,6 @@
 import { DsplL } from '@salutejs/plasma-typo';
 import { DsplM } from '@salutejs/plasma-typo';
 import { DsplS } from '@salutejs/plasma-typo';
-import { extractTextFrom } from '@salutejs/plasma-core';
 import { FC } from 'react';
 import type { FieldProps as FieldProps_2 } from '@salutejs/plasma-core';
 import { FlattenSimpleInterpolation } from 'styled-components';
@@ -77,9 +79,11 @@
 import { Headline3 } from '@salutejs/plasma-core';
 import { Headline4 } from '@salutejs/plasma-core';
 import { HTMLAttributes } from 'react';
+import { Image as Image_2 } from '@salutejs/plasma-core';
 import { ImageBaseProps } from '@salutejs/plasma-core';
-import type { ImageProps as ImageProps_2 } from '@salutejs/plasma-core';
+import { ImageProps } from '@salutejs/plasma-core';
 import { InputHTMLAttributes } from '@salutejs/plasma-core';
+import type { InputProps } from '@salutejs/plasma-core';
 import { KeyboardEvent as KeyboardEvent_2 } from 'react';
 import { LineSkeleton } from '@salutejs/plasma-core';
 import { LineSkeletonProps } from '@salutejs/plasma-core';
@@ -100,10 +104,10 @@
 import { Popup } from '@salutejs/plasma-core';
 import { PopupProps } from '@salutejs/plasma-core';
 import type { PriceProps as PriceProps_2 } from '@salutejs/plasma-core';
+import { PropsWithChildren } from 'react';
 import { radiuses } from '@salutejs/plasma-core';
 import { Ratio } from '@salutejs/plasma-core';
 import { default as React_2 } from 'react';
-import { ReactElement } from 'react';
 import { ReactNode } from 'react';
 import { RectSkeleton } from '@salutejs/plasma-core';
 import { RectSkeletonProps } from '@salutejs/plasma-core';
@@ -118,6 +122,9 @@
 import { SmartPaginationDotsProps as SmartPaginationDotsProps_2 } from '@salutejs/plasma-core';
 import { SnapAlign } from '@salutejs/plasma-core';
 import { SnapType } from '@salutejs/plasma-core';
+import { SortableContainerProps } from 'react-sortable-hoc';
+import { SortableElementProps } from 'react-sortable-hoc';
+import { spacing } from '@salutejs/plasma-core';
 import { SpacingProps } from '@salutejs/plasma-core';
 import type { SpinnerProps as SpinnerProps_2 } from '@salutejs/plasma-core';
 import { SSRProvider } from '@salutejs/plasma-core';
@@ -126,7 +133,7 @@
 import { SwitchProps } from '@salutejs/plasma-core';
 import type { SyntheticEvent } from 'react';
 import { syntheticFocus } from '@salutejs/plasma-core';
-import type { TabItemProps as TabItemProps_2 } from '@salutejs/plasma-core';
+import { TabItemProps as TabItemProps_2 } from '@salutejs/plasma-core';
 import { TabsControllerProps as TabsControllerProps_2 } from '@salutejs/plasma-core';
 import type { TabsProps as TabsProps_2 } from '@salutejs/plasma-core';
 import { TextareaHTMLAttributes } from '@salutejs/plasma-core';
@@ -190,9 +197,36 @@
 
 export { applyView }
 
+// Warning: (ae-forgotten-export) The symbol "PreviewGalleryItemProps" needs to be exported by the entry point index.d.ts
+//
+// @public
+export const arrayItemRemoving: (oldItems: Array<PreviewGalleryItemProps>, id: number | string) => PreviewGalleryItemProps[];
+
+// @public
+export const arrayItemSelecting: (oldItems: Array<PreviewGalleryItemProps>, id: number | string, multipleSelect?: boolean) => PreviewGalleryItemProps[];
+
+// @public
+export const arrayItemSwapping: (oldItems: Array<PreviewGalleryItemProps>, oldIndex: number, newIndex: number) => PreviewGalleryItemProps[];
+
 export { AsProps }
 
 // @public
+export const AudioPlayer: FC<AudioPlayerProps>;
+
+// @public (undocumented)
+export interface AudioPlayerProps {
+    canDelete: boolean;
+    duration?: number;
+    isPlaying: boolean;
+    isSelected: boolean;
+    onClick: () => void;
+    onDelete: () => void;
+    onPlay: (event: React_2.MouseEvent<HTMLSpanElement, MouseEvent>) => void;
+    title: string;
+    url: string;
+}
+
+// @public
 export const Badge: StyledComponent<FC<BadgeProps_2>, any, BadgeProps, never>;
 
 // @public (undocumented)
@@ -237,58 +271,41 @@
 // @public (undocumented)
 export type Breakpoint = keyof typeof gridBreakpoints;
 
+export { BreakWordProps }
+
 // @public
-export const Button: ForwardRefExoticComponent<(ButtonProps_2<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
+export const Button: ForwardRefExoticComponent<(ButtonProps_2<HTMLElement> & {
 text?: ReactNode;
 contentLeft?: ReactNode;
 contentRight?: undefined;
 children?: undefined;
 isLoading?: boolean | undefined;
 loader?: ReactNode;
-} & RefAttributes<HTMLButtonElement>) | (ButtonProps_2<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
+} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "success" | "warning" | "critical" | "secondary" | "overlay" | "clear">> & RefAttributes<HTMLButtonElement>) | (ButtonProps_2<HTMLElement> & {
 text?: ReactNode;
 contentLeft?: undefined;
 contentRight?: ReactNode;
 children?: undefined;
 isLoading?: boolean | undefined;
 loader?: ReactNode;
-} & RefAttributes<HTMLButtonElement>) | (ButtonProps_2<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
+} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "success" | "warning" | "critical" | "secondary" | "overlay" | "clear">> & RefAttributes<HTMLButtonElement>) | (ButtonProps_2<HTMLElement> & {
 text?: undefined;
 contentLeft?: undefined;
 contentRight?: undefined;
 children?: ReactNode;
 isLoading?: boolean | undefined;
 loader?: ReactNode;
-} & RefAttributes<HTMLButtonElement>)>;
+} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "success" | "warning" | "critical" | "secondary" | "overlay" | "clear">> & RefAttributes<HTMLButtonElement>)>;
 
 export { Button1 }
 
 export { Button2 }
 
+// Warning: (ae-forgotten-export) The symbol "ButtonView" needs to be exported by the entry point index.d.ts
+//
 // @public (undocumented)
 export type ButtonProps = ButtonProps_2 & Partial<ButtonSizeProps> & Partial<ButtonViewProps<ButtonView>> & ButtonContentProps;
 
-// @public (undocumented)
-export type ButtonView = keyof typeof buttonViews;
-
-// @public
-export const buttonViews: {
-    primary: FlattenSimpleInterpolation;
-    success: FlattenSimpleInterpolation;
-    warning: FlattenSimpleInterpolation;
-    critical: FlattenSimpleInterpolation;
-    secondary: FlattenSimpleInterpolation;
-    checked: FlattenSimpleInterpolation;
-    overlay: {
-        backgroundColor: string;
-        color: string;
-    };
-    clear: {
-        backgroundColor: string;
-        color: string;
-    };
-};
-
 // @public
 export const Calendar: React_2.FC<CalendarProps>;
 
@@ -399,6 +416,9 @@
 }
 
 // @public (undocumented)
+export function clearSelection(): void;
+
+// @public (undocumented)
 export const closeNotification: (id: string, delay?: number) => void;
 
 // @public
@@ -439,87 +459,73 @@
 
 export { convertRoundnessMatrix }
 
+// @public
+export const defaultValidate: (files: FileList | null, accept?: string | undefined) => ValidationResult;
+
 export { DisabledProps }
 
 // @public
 export const Dropdown: FC<DropdownProps>;
 
-// Warning: (ae-forgotten-export) The symbol "DropdownItemProps_2" needs to be exported by the entry point index.d.ts
+// Warning: (ae-forgotten-export) The symbol "DropdownItemProps" needs to be exported by the entry point index.d.ts
 //
 // @public
-export const DropdownItem: FC<DropdownItemProps_2>;
+export const DropdownItem: FC<DropdownItemProps>;
 
+// @public
+export const DropdownList: StyledComponent<"ul", any, {}, never>;
+
+// Warning: (ae-forgotten-export) The symbol "DropdownUncontrolledProps" needs to be exported by the entry point index.d.ts
+//
 // @public (undocumented)
-export interface DropdownItemProps extends DropdownNodeType, Omit<DetailedHTMLProps<HTMLAttributes<HTMLLIElement>, HTMLLIElement>, 'onClick' | 'ref'> {
-    color?: string;
-    contentLeft?: ReactNode;
-    // (undocumented)
-    index: number;
-    isActive?: boolean;
-    isHovered?: boolean;
-    // (undocumented)
-    onClick?: (item: DropdownItemType, event: SyntheticEvent) => void;
-    // (undocumented)
-    onFocus?: () => void;
-    // Warning: (ae-forgotten-export) The symbol "OnHover" needs to be exported by the entry point index.d.ts
+export interface DropdownProps extends Omit<DropdownUncontrolledProps, 'isOpen' | 'hoverIndex'> {
+    closeOnSelect?: boolean;
+    // Warning: (ae-forgotten-export) The symbol "OnItemSelect" needs to be exported by the entry point index.d.ts
     //
-    // (undocumented)
-    onHover?: OnHover;
+    // @deprecated
+    onItemClick?: OnItemSelect;
 }
 
-// @public (undocumented)
-export interface DropdownItemType {
-    // (undocumented)
-    color?: string;
-    // (undocumented)
-    contentLeft?: ReactNode;
-    // (undocumented)
-    label: string;
-    // (undocumented)
-    value: string | number;
-}
+export { DsplL }
+
+export { DsplM }
+
+export { DsplS }
 
 // @public
-export const DropdownList: StyledComponent<"ul", any, {}, never>;
+export const Editable: React_2.FC<EditableProps>;
 
 // @public (undocumented)
-export interface DropdownNodeType extends DropdownItemType {
+export interface EditableProps {
+    icon?: React_2.ReactNode;
+    maxLength?: number;
     // (undocumented)
-    isActive?: boolean;
+    onBlur?: React_2.FocusEventHandler<HTMLDivElement>;
+    // Warning: (ae-forgotten-export) The symbol "RefElement" needs to be exported by the entry point index.d.ts
+    //
+    // (undocumented)
+    onChange?: React_2.FormEventHandler<RefElement>;
+    // (undocumented)
+    onPaste?: React_2.ClipboardEventHandler<HTMLDivElement>;
+    placeholder?: string;
     // (undocumented)
-    isDisabled?: boolean;
+    spellCheck?: 'true' | 'false';
+    // Warning: (ae-forgotten-export) The symbol "typography" needs to be exported by the entry point index.d.ts
+    textComponent: typeof typography[keyof typeof typography];
     // (undocumented)
-    items?: Array<DropdownNodeType>;
+    value?: string;
 }
 
 // @public
-export const DropdownPopup: StyledComponent<React_2.NamedExoticComponent<PopupProps & React_2.RefAttributes<HTMLDivElement>>, any, DropdownPopupProps, never>;
+export const ElasticGrid: React_2.FC<PropsWithChildren<ElasticGridProps>>;
 
 // @public (undocumented)
-export interface DropdownPopupProps extends PopupProps {
-    // @deprecated
-    offsetTop?: string | number;
+export interface ElasticGridProps {
+    gapX?: number;
+    gapY?: number;
+    minColWidth: number;
 }
 
-// Warning: (ae-forgotten-export) The symbol "DropdownUncontrolledProps_2" needs to be exported by the entry point index.d.ts
-//
-// @public (undocumented)
-export interface DropdownProps extends Omit<DropdownUncontrolledProps_2, 'isOpen' | 'hoverIndex'> {
-    closeOnSelect?: boolean;
-    // Warning: (ae-forgotten-export) The symbol "OnItemSelect_2" needs to be exported by the entry point index.d.ts
-    //
-    // @deprecated
-    onItemClick?: OnItemSelect_2;
-}
-
-export { DsplL }
-
-export { DsplM }
-
-export { DsplS }
-
-export { extractTextFrom }
-
 export { FocusProps }
 
 export { Footnote1 }
@@ -588,14 +594,11 @@
 // @public (undocumented)
 export const Headline5: StyledComponent<"div", any, {}, never>;
 
-// @public
-const Image_2: React.FC<ImageProps>;
 export { Image_2 as Image }
 
 export { ImageBaseProps }
 
-// @public (undocumented)
-export type ImageProps = ImageProps_2;
+export { ImageProps }
 
 export { InputHTMLAttributes }
 
@@ -645,13 +648,6 @@
 
 export { monthShortName }
 
-// @public (undocumented)
-export interface MultiSelectProps extends Omit<SelectViewProps, 'onItemClick' | 'value' | 'label' | 'multiselect'> {
-    onChange?: (value: Array<string | number> | null) => void;
-    separator?: string;
-    value: Array<string | number> | null;
-}
-
 // @public
 const Notification_2: React_2.ForwardRefExoticComponent<NotificationProps & React_2.RefAttributes<HTMLDivElement>>;
 export { Notification_2 as Notification }
@@ -669,10 +665,8 @@
     children: ReactNode;
 }>;
 
-// Warning: (ae-forgotten-export) The symbol "Breakpoint_2" needs to be exported by the entry point index.d.ts
-//
 // @public (undocumented)
-export const offsets: Record<Breakpoint_2, keyof ColOffsetProps>;
+export const offsets: Record<Breakpoint, keyof ColOffsetProps>;
 
 export { OutlinedProps }
 
@@ -712,6 +706,11 @@
 
 export { PopupProps }
 
+// Warning: (ae-forgotten-export) The symbol "PreviewGalleryProps" needs to be exported by the entry point index.d.ts
+//
+// @public
+export const PreviewGallery: FC<PreviewGalleryProps & HTMLAttributes<HTMLDivElement> & SortableContainerProps>;
+
 // @public
 export const Price: StyledComponent<FC<PriceProps_2>, any, {}, never>;
 
@@ -761,45 +760,25 @@
 
 export { ScrollSnapProps }
 
+// Warning: (ae-forgotten-export) The symbol "SelectViewProps" needs to be exported by the entry point index.d.ts
+//
 // @public
-export const Select: <T>(props: ({
+export const Select: React_2.ForwardRefExoticComponent<({
     multiselect?: false | undefined;
     separator?: undefined;
 } & {
-    value: T;
-    onChange?: ((value: T) => void) | undefined;
-} & Pick<SelectViewProps, "onClick" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "slot" | "spellCheck" | "style" | "tabIndex" | "title" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "form" | "name" | "type" | "autoFocus" | "disabled" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "items" | "isOpen" | "onItemSelect" | "status" | "helperText"> & React_2.RefAttributes<HTMLButtonElement>) | ({
+    value: any;
+    onChange?: ((value: any) => void) | undefined;
+} & Pick<SelectViewProps, "form" | "slot" | "style" | "title" | "className" | "color" | "id" | "lang" | "name" | "type" | "role" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoFocus" | "disabled" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "items" | "status" | "isOpen" | "onItemSelect" | "helperText"> & React_2.RefAttributes<HTMLButtonElement>) | ({
     multiselect?: true | undefined;
     separator?: string | undefined;
 } & {
-    value: T;
-    onChange?: ((value: T) => void) | undefined;
-} & Pick<SelectViewProps, "onClick" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "slot" | "spellCheck" | "style" | "tabIndex" | "title" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "form" | "name" | "type" | "autoFocus" | "disabled" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "items" | "isOpen" | "onItemSelect" | "status" | "helperText"> & React_2.RefAttributes<HTMLButtonElement>)) => ReactElement;
-
-// @public (undocumented)
-export const SelectButton: React_2.ForwardRefExoticComponent<SelectButtonProps & React_2.RefAttributes<HTMLButtonElement>>;
-
-// Warning: (ae-forgotten-export) The symbol "FieldProps" needs to be exported by the entry point index.d.ts
-//
-// @public (undocumented)
-export interface SelectButtonProps extends Pick<FieldProps, 'status' | 'placeholder' | 'disabled'>, Omit<ButtonHTMLAttributes<SelectRefElement>, 'value'> {
-    // (undocumented)
-    children?: never;
-    // (undocumented)
-    hasItems?: boolean;
-    // (undocumented)
-    isOpen?: boolean;
-    value?: string | number | null;
-}
+    value: any;
+    onChange?: ((value: any) => void) | undefined;
+} & Pick<SelectViewProps, "form" | "slot" | "style" | "title" | "className" | "color" | "id" | "lang" | "name" | "type" | "role" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoFocus" | "disabled" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "items" | "status" | "isOpen" | "onItemSelect" | "helperText"> & React_2.RefAttributes<HTMLButtonElement>)>;
 
-// Warning: (ae-forgotten-export) The symbol "DropdownUncontrolledProps" needs to be exported by the entry point index.d.ts
-//
 // @public (undocumented)
-export const SelectDropdown: StyledComponent<FC<DropdownUncontrolledProps>, any, {}, never>;
-
-// @public (undocumented)
-export interface SelectDropdownProps extends DropdownUncontrolledProps {
-}
+export const SelectGroup: StyledComponent<"div", any, {}, never>;
 
 // @public (undocumented)
 export type SelectProps<T = any> = ({
@@ -814,15 +793,7 @@
 } & Omit<SelectViewProps, 'onItemClick' | 'value' | 'label' | 'multiselect'>;
 
 // @public (undocumented)
-export type SelectRefElement = HTMLButtonElement;
-
-// @public
-export const SelectView: React_2.ForwardRefExoticComponent<SelectViewProps & React_2.RefAttributes<HTMLButtonElement>>;
-
-// @public (undocumented)
-export interface SelectViewProps extends Pick<FieldProps, 'status' | 'placeholder' | 'helperText' | 'disabled'>, Pick<SelectDropdownProps, 'items' | 'onItemSelect'>, Omit<SelectButtonProps, 'hasItems' | 'isExpanded' | 'onChange'> {
-    multiselect?: boolean;
-}
+export function selectText(node: Node): void;
 
 export { setRef }
 
@@ -831,17 +802,20 @@
 export { ShiftProps }
 
 // @public (undocumented)
-export interface SingleSelectProps extends Omit<SelectViewProps, 'onItemClick' | 'value' | 'label' | 'multiselect'> {
-    onChange?: (value: string | number | null) => void;
-    value: string | number | null;
-}
-
-// @public (undocumented)
-export const sizes: Record<Breakpoint_2, keyof ColSizeProps>;
+export const sizes: Record<Breakpoint, keyof ColSizeProps>;
 
 export { SkeletonGradientProps }
 
 // @public
+export const Slider: React_2.FC<SliderProps>;
+
+// Warning: (ae-forgotten-export) The symbol "SliderProps_2" needs to be exported by the entry point index.d.ts
+// Warning: (ae-forgotten-export) The symbol "SliderProps_3" needs to be exported by the entry point index.d.ts
+//
+// @public (undocumented)
+export type SliderProps = SliderProps_2 | SliderProps_3;
+
+// @public
 export const SmartPaginationDots: React_2.FC<SmartPaginationDotsProps>;
 
 // @public (undocumented)
@@ -853,6 +827,8 @@
 
 export { SnapType }
 
+export { spacing }
+
 export { SpacingProps }
 
 // @public
@@ -877,10 +853,12 @@
 export { syntheticFocus }
 
 // @public
-export const TabItem: StyledComponent<ForwardRefExoticComponent<TabItemProps_2 & RefAttributes<HTMLButtonElement>>, any, {}, never>;
+export const TabItem: StyledComponent<ForwardRefExoticComponent<TabItemProps_2 & RefAttributes<HTMLButtonElement>>, any, TabItemProps, never>;
 
 // @public (undocumented)
-export interface TabItemProps extends TabItemProps_2 {
+export interface TabItemProps extends AsProps, TabItemProps_2 {
+    // (undocumented)
+    animated?: boolean;
 }
 
 // @public
@@ -895,6 +873,13 @@
 
 // @public (undocumented)
 export interface TabsProps extends TabsProps_2 {
+    outsideScroll?: boolean | {
+        left?: string;
+        right?: string;
+    };
+    pilled?: boolean;
+    size?: 'l' | 's';
+    view?: 'secondary' | 'clear';
 }
 
 // @public
@@ -903,13 +888,11 @@
 export { TextareaHTMLAttributes }
 
 // @public (undocumented)
-export interface TextAreaProps extends TextAreaProps_2 {
-    // @deprecated (undocumented)
-    helperBlock?: React_2.ReactElement;
-    // @deprecated (undocumented)
-    helperText?: string;
+export interface TextAreaProps extends Omit<TextAreaProps_2, 'size'> {
     leftHelper?: string;
+    // (undocumented)
     rightHelper?: string;
+    size?: 'l' | 'm' | 's' | 'xs';
 }
 
 export { TextareaResize }
@@ -917,11 +900,13 @@
 // @public
 export const TextField: React_2.ForwardRefExoticComponent<TextFieldProps & React_2.RefAttributes<HTMLInputElement>>;
 
-// Warning: (ae-forgotten-export) The symbol "InputProps" needs to be exported by the entry point index.d.ts
-//
 // @public (undocumented)
-export interface TextFieldProps extends Pick<FieldProps, 'contentLeft' | 'contentRight' | 'helperText'>, Omit<InputProps, 'hasContentLeft' | 'hasContentRight'> {
+export interface TextFieldProps extends Omit<FieldProps_2, 'size'>, InputProps {
+    caption?: string;
     onSearch?: (value: string, event?: KeyboardEvent_2<HTMLInputElement>) => void;
+    size?: 'l' | 'm' | 's' | 'xs';
+    // Warning: (ae-forgotten-export) The symbol "TextFieldView" needs to be exported by the entry point index.d.ts
+    view?: TextFieldView;
 }
 
 export { TextL }
@@ -967,6 +952,44 @@
 
 export { Underline }
 
+// @public
+export const Upload: FC<UploadProps>;
+
+// @public
+export const UploadAudio: FC<UploadAudioProps>;
+
+// @public (undocumented)
+export interface UploadAudioProps extends UploadProps {
+}
+
+// @public (undocumented)
+export const UploadProgress: FC<UploadProgressProps>;
+
+// @public (undocumented)
+export interface UploadProgressProps {
+    // (undocumented)
+    label?: string;
+    // (undocumented)
+    progress?: number;
+}
+
+// Warning: (ae-forgotten-export) The symbol "UploadButtonProps" needs to be exported by the entry point index.d.ts
+//
+// @public (undocumented)
+export interface UploadProps extends Omit<UploadButtonProps, 'isProgress'> {
+    content?: JSX.Element | string;
+    message?: string;
+    progress?: number;
+}
+
+// @public
+export const UploadVisual: FC<UploadVisualProps>;
+
+// @public (undocumented)
+export interface UploadVisualProps extends UploadProps, PreviewGalleryProps {
+    maxCount?: number;
+}
+
 export { useDebouncedFunction }
 
 export { useForkRef }
@@ -975,27 +998,28 @@
 
 export { useToast }
 
+// @public (undocumented)
+export interface ValidationResult {
+    // (undocumented)
+    data: File | null;
+    // (undocumented)
+    message?: string;
+    // Warning: (ae-forgotten-export) The symbol "StatusType_2" needs to be exported by the entry point index.d.ts
+    //
+    // (undocumented)
+    status?: StatusType_2;
+}
+
 export { View }
 
 export { ViewProps }
 
 export { views }
 
-// Warning: (ae-forgotten-export) The symbol "WithAssistiveDropdownProps" needs to be exported by the entry point index.d.ts
-//
-// @public
-export const withAssistiveDropdown: <P extends object>(Component: React_2.ComponentClass<P, any> | React_2.FunctionComponent<P> | React_2.ForwardRefExoticComponent<P>, Dropdown?: ComponentType<DropdownUncontrolledProps>) => React_2.FC<P & WithAssistiveDropdownProps>;
-
 export { withAutoFocus }
 
 export { WithAutoFocusProps }
 
-// @public
-export const withMultiSelect: (View: ComponentType<SelectViewProps & RefAttributes<SelectRefElement>>) => React_2.ForwardRefExoticComponent<MultiSelectProps & React_2.RefAttributes<HTMLButtonElement>>;
-
-// @public
-export const withSingleSelect: (View: ComponentType<SelectViewProps & RefAttributes<SelectRefElement>>) => React_2.ForwardRefExoticComponent<SingleSelectProps & React_2.RefAttributes<HTMLButtonElement>>;
-
 export { withSkeleton }
 
 export { WithSkeletonProps }
